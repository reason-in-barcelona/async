(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 *)

let delete_account ?account () =
    let open Lwt in
    let uri = Request.build_uri "/v1/account" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "account" (fun x -> x) account in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Deleted_account.of_yojson) resp body

let delete_account_bank_accounts_id ~id =
    let open Lwt in
    let uri = Request.build_uri "/v1/account/bank_accounts/{id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Deleted_external_account.of_yojson) resp body

let delete_account_external_accounts_id ~id =
    let open Lwt in
    let uri = Request.build_uri "/v1/account/external_accounts/{id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Deleted_external_account.of_yojson) resp body

let delete_account_people_person ~person =
    let open Lwt in
    let uri = Request.build_uri "/v1/account/people/{person}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "person" (fun x -> x) person in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Deleted_person.of_yojson) resp body

let delete_account_persons_person ~person =
    let open Lwt in
    let uri = Request.build_uri "/v1/account/persons/{person}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "person" (fun x -> x) person in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Deleted_person.of_yojson) resp body

let delete_accounts_account ~account =
    let open Lwt in
    let uri = Request.build_uri "/v1/accounts/{account}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "account" (fun x -> x) account in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Deleted_account.of_yojson) resp body

let delete_accounts_account_bank_accounts_id ~account ~id =
    let open Lwt in
    let uri = Request.build_uri "/v1/accounts/{account}/bank_accounts/{id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "account" (fun x -> x) account in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Deleted_external_account.of_yojson) resp body

let delete_accounts_account_external_accounts_id ~account ~id =
    let open Lwt in
    let uri = Request.build_uri "/v1/accounts/{account}/external_accounts/{id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "account" (fun x -> x) account in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Deleted_external_account.of_yojson) resp body

let delete_accounts_account_people_person ~account ~person =
    let open Lwt in
    let uri = Request.build_uri "/v1/accounts/{account}/people/{person}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "account" (fun x -> x) account in
    let uri = Request.replace_path_param uri "person" (fun x -> x) person in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Deleted_person.of_yojson) resp body

let delete_accounts_account_persons_person ~account ~person =
    let open Lwt in
    let uri = Request.build_uri "/v1/accounts/{account}/persons/{person}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "account" (fun x -> x) account in
    let uri = Request.replace_path_param uri "person" (fun x -> x) person in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Deleted_person.of_yojson) resp body

let delete_apple_pay_domains_domain ~domain =
    let open Lwt in
    let uri = Request.build_uri "/v1/apple_pay/domains/{domain}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "domain" (fun x -> x) domain in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Deleted_apple_pay_domain.of_yojson) resp body

let delete_coupons_coupon ~coupon =
    let open Lwt in
    let uri = Request.build_uri "/v1/coupons/{coupon}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "coupon" (fun x -> x) coupon in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Deleted_coupon.of_yojson) resp body

let delete_customers_customer ~customer =
    let open Lwt in
    let uri = Request.build_uri "/v1/customers/{customer}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "customer" (fun x -> x) customer in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Deleted_customer.of_yojson) resp body

let delete_customers_customer_bank_accounts_id ~customer ~id ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/customers/{customer}/bank_accounts/{id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "customer" (fun x -> x) customer in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Any_ofpayment_sourcedeleted_payment_source.of_yojson) resp body

let delete_customers_customer_cards_id ~customer ~id ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/customers/{customer}/cards/{id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "customer" (fun x -> x) customer in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Any_ofpayment_sourcedeleted_payment_source.of_yojson) resp body

let delete_customers_customer_discount ~customer =
    let open Lwt in
    let uri = Request.build_uri "/v1/customers/{customer}/discount" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "customer" (fun x -> x) customer in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Deleted_discount.of_yojson) resp body

let delete_customers_customer_sources_id ~customer ~id ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/customers/{customer}/sources/{id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "customer" (fun x -> x) customer in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Any_ofpayment_sourcedeleted_payment_source.of_yojson) resp body

let delete_customers_customer_subscriptions_subscription_exposed_id ~customer ~subscription_exposed_id ?(expand = []) ?invoice_now ?prorate () =
    let open Lwt in
    let uri = Request.build_uri "/v1/customers/{customer}/subscriptions/{subscription_exposed_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "customer" (fun x -> x) customer in
    let uri = Request.replace_path_param uri "subscription_exposed_id" (fun x -> x) subscription_exposed_id in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "invoice_now" string_of_bool invoice_now in
    let body = Request.maybe_add_form_encoded_body_param body "prorate" string_of_bool prorate in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Subscription.of_yojson) resp body

let delete_customers_customer_subscriptions_subscription_exposed_id_discount ~customer ~subscription_exposed_id =
    let open Lwt in
    let uri = Request.build_uri "/v1/customers/{customer}/subscriptions/{subscription_exposed_id}/discount" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "customer" (fun x -> x) customer in
    let uri = Request.replace_path_param uri "subscription_exposed_id" (fun x -> x) subscription_exposed_id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Deleted_discount.of_yojson) resp body

let delete_customers_customer_tax_ids_id ~customer ~id =
    let open Lwt in
    let uri = Request.build_uri "/v1/customers/{customer}/tax_ids/{id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "customer" (fun x -> x) customer in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Deleted_tax_id.of_yojson) resp body

let delete_ephemeral_keys_key ~key ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/ephemeral_keys/{key}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "key" (fun x -> x) key in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Ephemeral_key.of_yojson) resp body

let delete_invoiceitems_invoiceitem ~invoiceitem =
    let open Lwt in
    let uri = Request.build_uri "/v1/invoiceitems/{invoiceitem}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "invoiceitem" (fun x -> x) invoiceitem in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Deleted_invoiceitem.of_yojson) resp body

let delete_invoices_invoice ~invoice =
    let open Lwt in
    let uri = Request.build_uri "/v1/invoices/{invoice}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "invoice" (fun x -> x) invoice in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Deleted_invoice.of_yojson) resp body

let delete_plans_plan ~plan =
    let open Lwt in
    let uri = Request.build_uri "/v1/plans/{plan}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "plan" (fun x -> x) plan in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Deleted_plan.of_yojson) resp body

let delete_products_id ~id =
    let open Lwt in
    let uri = Request.build_uri "/v1/products/{id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Deleted_product.of_yojson) resp body

let delete_radar_value_list_items_item ~item =
    let open Lwt in
    let uri = Request.build_uri "/v1/radar/value_list_items/{item}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "item" (fun x -> x) item in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Deleted_radar_value_list_item.of_yojson) resp body

let delete_radar_value_lists_value_list ~value_list =
    let open Lwt in
    let uri = Request.build_uri "/v1/radar/value_lists/{value_list}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "value_list" (fun x -> x) value_list in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Deleted_radar_value_list.of_yojson) resp body

let delete_recipients_id ~id =
    let open Lwt in
    let uri = Request.build_uri "/v1/recipients/{id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Deleted_recipient.of_yojson) resp body

let delete_skus_id ~id =
    let open Lwt in
    let uri = Request.build_uri "/v1/skus/{id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Deleted_sku.of_yojson) resp body

let delete_subscription_items_item ~item ?clear_usage ?proration_behavior ?proration_date () =
    let open Lwt in
    let uri = Request.build_uri "/v1/subscription_items/{item}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "item" (fun x -> x) item in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "clear_usage" string_of_bool clear_usage in
    let body = Request.maybe_add_form_encoded_body_param body "proration_behavior" Enums.show_proration_behavior proration_behavior in
    let body = Request.maybe_add_form_encoded_body_param body "proration_date" Int32.to_string proration_date in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Deleted_subscription_item.of_yojson) resp body

let delete_subscriptions_subscription_exposed_id ~subscription_exposed_id ?(expand = []) ?invoice_now ?prorate () =
    let open Lwt in
    let uri = Request.build_uri "/v1/subscriptions/{subscription_exposed_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "subscription_exposed_id" (fun x -> x) subscription_exposed_id in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "invoice_now" string_of_bool invoice_now in
    let body = Request.maybe_add_form_encoded_body_param body "prorate" string_of_bool prorate in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Subscription.of_yojson) resp body

let delete_subscriptions_subscription_exposed_id_discount ~subscription_exposed_id =
    let open Lwt in
    let uri = Request.build_uri "/v1/subscriptions/{subscription_exposed_id}/discount" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "subscription_exposed_id" (fun x -> x) subscription_exposed_id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Deleted_discount.of_yojson) resp body

let delete_terminal_locations_location ~location =
    let open Lwt in
    let uri = Request.build_uri "/v1/terminal/locations/{location}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "location" (fun x -> x) location in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Deleted_terminal_location.of_yojson) resp body

let delete_terminal_readers_reader ~reader =
    let open Lwt in
    let uri = Request.build_uri "/v1/terminal/readers/{reader}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "reader" (fun x -> x) reader in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Deleted_terminal_reader.of_yojson) resp body

let delete_webhook_endpoints_webhook_endpoint ~webhook_endpoint =
    let open Lwt in
    let uri = Request.build_uri "/v1/webhook_endpoints/{webhook_endpoint}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "webhook_endpoint" (fun x -> x) webhook_endpoint in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Deleted_webhook_endpoint.of_yojson) resp body

let get3d_secure_three_d_secure ~three_d_secure ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/3d_secure/{three_d_secure}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "three_d_secure" (fun x -> x) three_d_secure in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Three_d_secure.of_yojson) resp body

let get_account ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/account" in
    let headers = Request.default_headers in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Account.of_yojson) resp body

let get_account_bank_accounts_id ~id ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/account/bank_accounts/{id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap External_account.of_yojson) resp body

let get_account_capabilities ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/account/capabilities" in
    let headers = Request.default_headers in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap List_account_capability.of_yojson) resp body

let get_account_capabilities_capability ~capability ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/account/capabilities/{capability}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "capability" (fun x -> x) capability in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Capability.of_yojson) resp body

let get_account_external_accounts ?ending_before ?(expand = []) ?limit ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/account/external_accounts" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap External_account_list.of_yojson) resp body

let get_account_external_accounts_id ~id ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/account/external_accounts/{id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap External_account.of_yojson) resp body

let get_account_people ?ending_before ?(expand = []) ?limit ?relationship ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/account/people" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "relationship" .show relationship in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200.of_yojson) resp body

let get_account_people_person ~person ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/account/people/{person}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "person" (fun x -> x) person in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Person.of_yojson) resp body

let get_account_persons ?ending_before ?(expand = []) ?limit ?relationship ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/account/persons" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "relationship" .show relationship in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200.of_yojson) resp body

let get_account_persons_person ~person ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/account/persons/{person}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "person" (fun x -> x) person in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Person.of_yojson) resp body

let get_accounts ?created ?ending_before ?(expand = []) ?limit ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/accounts" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "created" .show created in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200_1.of_yojson) resp body

let get_accounts_account ~account ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/accounts/{account}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "account" (fun x -> x) account in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Account.of_yojson) resp body

let get_accounts_account_bank_accounts_id ~account ~id ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/accounts/{account}/bank_accounts/{id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "account" (fun x -> x) account in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap External_account.of_yojson) resp body

let get_accounts_account_capabilities ~account ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/accounts/{account}/capabilities" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "account" (fun x -> x) account in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap List_account_capability.of_yojson) resp body

let get_accounts_account_capabilities_capability ~account ~capability ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/accounts/{account}/capabilities/{capability}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "account" (fun x -> x) account in
    let uri = Request.replace_path_param uri "capability" (fun x -> x) capability in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Capability.of_yojson) resp body

let get_accounts_account_external_accounts ~account ?ending_before ?(expand = []) ?limit ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/accounts/{account}/external_accounts" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "account" (fun x -> x) account in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap External_account_list.of_yojson) resp body

let get_accounts_account_external_accounts_id ~account ~id ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/accounts/{account}/external_accounts/{id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "account" (fun x -> x) account in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap External_account.of_yojson) resp body

let get_accounts_account_people ~account ?ending_before ?(expand = []) ?limit ?relationship ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/accounts/{account}/people" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "account" (fun x -> x) account in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "relationship" .show relationship in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200.of_yojson) resp body

let get_accounts_account_people_person ~account ~person ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/accounts/{account}/people/{person}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "account" (fun x -> x) account in
    let uri = Request.replace_path_param uri "person" (fun x -> x) person in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Person.of_yojson) resp body

let get_accounts_account_persons ~account ?ending_before ?(expand = []) ?limit ?relationship ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/accounts/{account}/persons" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "account" (fun x -> x) account in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "relationship" .show relationship in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200.of_yojson) resp body

let get_accounts_account_persons_person ~account ~person ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/accounts/{account}/persons/{person}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "account" (fun x -> x) account in
    let uri = Request.replace_path_param uri "person" (fun x -> x) person in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Person.of_yojson) resp body

let get_apple_pay_domains ?domain_name ?ending_before ?(expand = []) ?limit ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/apple_pay/domains" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "domain_name" (fun x -> x) domain_name in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Apple_pay_domain_list.of_yojson) resp body

let get_apple_pay_domains_domain ~domain ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/apple_pay/domains/{domain}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "domain" (fun x -> x) domain in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Apple_pay_domain.of_yojson) resp body

let get_application_fees ?charge ?created ?ending_before ?(expand = []) ?limit ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/application_fees" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "charge" (fun x -> x) charge in
    let uri = Request.maybe_add_query_param uri "created" .show created in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200_2.of_yojson) resp body

let get_application_fees_fee_refunds_id ~fee ~id ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/application_fees/{fee}/refunds/{id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "fee" (fun x -> x) fee in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Fee_refund.of_yojson) resp body

let get_application_fees_id ~id ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/application_fees/{id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Application_fee.of_yojson) resp body

let get_application_fees_id_refunds ~id ?ending_before ?(expand = []) ?limit ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/application_fees/{id}/refunds" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Fee_refund_list.of_yojson) resp body

let get_balance ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/balance" in
    let headers = Request.default_headers in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Balance.of_yojson) resp body

let get_balance_history ?available_on ?created ?currency ?ending_before ?(expand = []) ?limit ?payout ?source ?starting_after ?_type () =
    let open Lwt in
    let uri = Request.build_uri "/v1/balance/history" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "available_on" .show available_on in
    let uri = Request.maybe_add_query_param uri "created" .show created in
    let uri = Request.maybe_add_query_param uri "currency" (fun x -> x) currency in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "payout" (fun x -> x) payout in
    let uri = Request.maybe_add_query_param uri "source" (fun x -> x) source in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    let uri = Request.maybe_add_query_param uri "type" (fun x -> x) _type in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Balance_transactions_list.of_yojson) resp body

let get_balance_history_id ~id ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/balance/history/{id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Balance_transaction.of_yojson) resp body

let get_balance_transactions ?available_on ?created ?currency ?ending_before ?(expand = []) ?limit ?payout ?source ?starting_after ?_type () =
    let open Lwt in
    let uri = Request.build_uri "/v1/balance_transactions" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "available_on" .show available_on in
    let uri = Request.maybe_add_query_param uri "created" .show created in
    let uri = Request.maybe_add_query_param uri "currency" (fun x -> x) currency in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "payout" (fun x -> x) payout in
    let uri = Request.maybe_add_query_param uri "source" (fun x -> x) source in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    let uri = Request.maybe_add_query_param uri "type" (fun x -> x) _type in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Balance_transactions_list.of_yojson) resp body

let get_balance_transactions_id ~id ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/balance_transactions/{id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Balance_transaction.of_yojson) resp body

let get_bitcoin_receivers ?active ?ending_before ?(expand = []) ?filled ?limit ?starting_after ?uncaptured_funds () =
    let open Lwt in
    let uri = Request.build_uri "/v1/bitcoin/receivers" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "active" string_of_bool active in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "filled" string_of_bool filled in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    let uri = Request.maybe_add_query_param uri "uncaptured_funds" string_of_bool uncaptured_funds in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200_3.of_yojson) resp body

let get_bitcoin_receivers_id ~id ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/bitcoin/receivers/{id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Bitcoin_receiver.of_yojson) resp body

let get_bitcoin_receivers_receiver_transactions ~receiver ?customer ?ending_before ?(expand = []) ?limit ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/bitcoin/receivers/{receiver}/transactions" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "receiver" (fun x -> x) receiver in
    let uri = Request.maybe_add_query_param uri "customer" (fun x -> x) customer in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Bitcoin_transaction_list.of_yojson) resp body

let get_bitcoin_transactions ?customer ?ending_before ?(expand = []) ?limit ?receiver ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/bitcoin/transactions" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "customer" (fun x -> x) customer in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "receiver" (fun x -> x) receiver in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Bitcoin_transaction_list.of_yojson) resp body

let get_charges ?created ?customer ?ending_before ?(expand = []) ?limit ?payment_intent ?starting_after ?transfer_group () =
    let open Lwt in
    let uri = Request.build_uri "/v1/charges" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "created" .show created in
    let uri = Request.maybe_add_query_param uri "customer" (fun x -> x) customer in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "payment_intent" (fun x -> x) payment_intent in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    let uri = Request.maybe_add_query_param uri "transfer_group" (fun x -> x) transfer_group in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200_4.of_yojson) resp body

let get_charges_charge ~charge ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/charges/{charge}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "charge" (fun x -> x) charge in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Charge.of_yojson) resp body

let get_charges_charge_dispute ~charge ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/charges/{charge}/dispute" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "charge" (fun x -> x) charge in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Dispute.of_yojson) resp body

let get_charges_charge_refunds ~charge ?ending_before ?(expand = []) ?limit ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/charges/{charge}/refunds" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "charge" (fun x -> x) charge in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Refund_list.of_yojson) resp body

let get_charges_charge_refunds_refund ~charge ~refund ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/charges/{charge}/refunds/{refund}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "charge" (fun x -> x) charge in
    let uri = Request.replace_path_param uri "refund" (fun x -> x) refund in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Refund.of_yojson) resp body

let get_checkout_sessions ?ending_before ?(expand = []) ?limit ?payment_intent ?starting_after ?subscription () =
    let open Lwt in
    let uri = Request.build_uri "/v1/checkout/sessions" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "payment_intent" (fun x -> x) payment_intent in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    let uri = Request.maybe_add_query_param uri "subscription" (fun x -> x) subscription in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Payment_pages_checkout_session_list.of_yojson) resp body

let get_checkout_sessions_session ~session ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/checkout/sessions/{session}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "session" (fun x -> x) session in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Checkout_session.of_yojson) resp body

let get_checkout_sessions_session_line_items ~session ?ending_before ?(expand = []) ?limit ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/checkout/sessions/{session}/line_items" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "session" (fun x -> x) session in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Payment_pages_checkout_session_list_line_items.of_yojson) resp body

let get_country_specs ?ending_before ?(expand = []) ?limit ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/country_specs" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200_5.of_yojson) resp body

let get_country_specs_country ~country ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/country_specs/{country}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "country" (fun x -> x) country in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Country_spec.of_yojson) resp body

let get_coupons ?created ?ending_before ?(expand = []) ?limit ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/coupons" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "created" .show created in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200_6.of_yojson) resp body

let get_coupons_coupon ~coupon ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/coupons/{coupon}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "coupon" (fun x -> x) coupon in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Coupon.of_yojson) resp body

let get_credit_notes ?customer ?ending_before ?(expand = []) ?invoice ?limit ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/credit_notes" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "customer" (fun x -> x) customer in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "invoice" (fun x -> x) invoice in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Credit_notes_list.of_yojson) resp body

let get_credit_notes_credit_note_lines ~credit_note ?ending_before ?(expand = []) ?limit ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/credit_notes/{credit_note}/lines" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "credit_note" (fun x -> x) credit_note in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Credit_note_lines_list.of_yojson) resp body

let get_credit_notes_id ~id ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/credit_notes/{id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Credit_note.of_yojson) resp body

let get_credit_notes_preview ~invoice ?amount ?credit_amount ?(expand = []) ?(lines = []) ?memo ?(metadata = []) ?out_of_band_amount ?reason ?refund ?refund_amount () =
    let open Lwt in
    let uri = Request.build_uri "/v1/credit_notes/preview" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "amount" Int32.to_string amount in
    let uri = Request.maybe_add_query_param uri "credit_amount" Int32.to_string credit_amount in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.add_query_param uri "invoice" (fun x -> x) invoice in
    let uri = Request.add_query_param_list uri "lines" (List.map .show) lines in
    let uri = Request.maybe_add_query_param uri "memo" (fun x -> x) memo in
    let uri = Request.add_query_param uri "metadata" (List.map (fun x -> x)) metadata in
    let uri = Request.maybe_add_query_param uri "out_of_band_amount" Int32.to_string out_of_band_amount in
    let uri = Request.maybe_add_query_param uri "reason" Enums.show_reason reason in
    let uri = Request.maybe_add_query_param uri "refund" (fun x -> x) refund in
    let uri = Request.maybe_add_query_param uri "refund_amount" Int32.to_string refund_amount in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Credit_note.of_yojson) resp body

let get_credit_notes_preview_lines ~invoice ?amount ?credit_amount ?ending_before ?(expand = []) ?limit ?(lines = []) ?memo ?(metadata = []) ?out_of_band_amount ?reason ?refund ?refund_amount ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/credit_notes/preview/lines" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "amount" Int32.to_string amount in
    let uri = Request.maybe_add_query_param uri "credit_amount" Int32.to_string credit_amount in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.add_query_param uri "invoice" (fun x -> x) invoice in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.add_query_param_list uri "lines" (List.map .show) lines in
    let uri = Request.maybe_add_query_param uri "memo" (fun x -> x) memo in
    let uri = Request.add_query_param uri "metadata" (List.map (fun x -> x)) metadata in
    let uri = Request.maybe_add_query_param uri "out_of_band_amount" Int32.to_string out_of_band_amount in
    let uri = Request.maybe_add_query_param uri "reason" Enums.show_reason reason in
    let uri = Request.maybe_add_query_param uri "refund" (fun x -> x) refund in
    let uri = Request.maybe_add_query_param uri "refund_amount" Int32.to_string refund_amount in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Credit_note_lines_list.of_yojson) resp body

let get_customers ?created ?email ?ending_before ?(expand = []) ?limit ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/customers" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "created" .show created in
    let uri = Request.maybe_add_query_param uri "email" (fun x -> x) email in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200_7.of_yojson) resp body

let get_customers_customer ~customer ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/customers/{customer}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "customer" (fun x -> x) customer in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Any_ofcustomerdeleted_customer.of_yojson) resp body

let get_customers_customer_balance_transactions ~customer ?ending_before ?(expand = []) ?limit ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/customers/{customer}/balance_transactions" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "customer" (fun x -> x) customer in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Customer_balance_transaction_list.of_yojson) resp body

let get_customers_customer_balance_transactions_transaction ~customer ~transaction ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/customers/{customer}/balance_transactions/{transaction}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "customer" (fun x -> x) customer in
    let uri = Request.replace_path_param uri "transaction" (fun x -> x) transaction in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Customer_balance_transaction.of_yojson) resp body

let get_customers_customer_bank_accounts ~customer ?ending_before ?(expand = []) ?limit ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/customers/{customer}/bank_accounts" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "customer" (fun x -> x) customer in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Bank_account_list.of_yojson) resp body

let get_customers_customer_bank_accounts_id ~customer ~id ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/customers/{customer}/bank_accounts/{id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "customer" (fun x -> x) customer in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Bank_account.of_yojson) resp body

let get_customers_customer_cards ~customer ?ending_before ?(expand = []) ?limit ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/customers/{customer}/cards" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "customer" (fun x -> x) customer in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Card_list.of_yojson) resp body

let get_customers_customer_cards_id ~customer ~id ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/customers/{customer}/cards/{id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "customer" (fun x -> x) customer in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Card.of_yojson) resp body

let get_customers_customer_discount ~customer ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/customers/{customer}/discount" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "customer" (fun x -> x) customer in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Discount.of_yojson) resp body

let get_customers_customer_sources ~customer ?ending_before ?(expand = []) ?limit ?_object ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/customers/{customer}/sources" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "customer" (fun x -> x) customer in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "object" (fun x -> x) _object in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Apms_sources_source_list.of_yojson) resp body

let get_customers_customer_sources_id ~customer ~id ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/customers/{customer}/sources/{id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "customer" (fun x -> x) customer in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Payment_source.of_yojson) resp body

let get_customers_customer_subscriptions ~customer ?ending_before ?(expand = []) ?limit ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/customers/{customer}/subscriptions" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "customer" (fun x -> x) customer in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Subscription_list.of_yojson) resp body

let get_customers_customer_subscriptions_subscription_exposed_id ~customer ~subscription_exposed_id ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/customers/{customer}/subscriptions/{subscription_exposed_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "customer" (fun x -> x) customer in
    let uri = Request.replace_path_param uri "subscription_exposed_id" (fun x -> x) subscription_exposed_id in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Subscription.of_yojson) resp body

let get_customers_customer_subscriptions_subscription_exposed_id_discount ~customer ~subscription_exposed_id ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/customers/{customer}/subscriptions/{subscription_exposed_id}/discount" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "customer" (fun x -> x) customer in
    let uri = Request.replace_path_param uri "subscription_exposed_id" (fun x -> x) subscription_exposed_id in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Discount.of_yojson) resp body

let get_customers_customer_tax_ids ~customer ?ending_before ?(expand = []) ?limit ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/customers/{customer}/tax_ids" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "customer" (fun x -> x) customer in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Tax_i_ds_list.of_yojson) resp body

let get_customers_customer_tax_ids_id ~customer ~id ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/customers/{customer}/tax_ids/{id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "customer" (fun x -> x) customer in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Tax_id.of_yojson) resp body

let get_disputes ?charge ?created ?ending_before ?(expand = []) ?limit ?payment_intent ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/disputes" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "charge" (fun x -> x) charge in
    let uri = Request.maybe_add_query_param uri "created" .show created in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "payment_intent" (fun x -> x) payment_intent in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200_8.of_yojson) resp body

let get_disputes_dispute ~dispute ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/disputes/{dispute}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "dispute" (fun x -> x) dispute in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Dispute.of_yojson) resp body

let get_events ?created ?delivery_success ?ending_before ?(expand = []) ?limit ?starting_after ?_type ?(types = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/events" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "created" .show created in
    let uri = Request.maybe_add_query_param uri "delivery_success" string_of_bool delivery_success in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    let uri = Request.maybe_add_query_param uri "type" (fun x -> x) _type in
    let uri = Request.add_query_param_list uri "types" (List.map (fun x -> x)) types in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Notification_event_list.of_yojson) resp body

let get_events_id ~id ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/events/{id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Event.of_yojson) resp body

let get_exchange_rates ?ending_before ?(expand = []) ?limit ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/exchange_rates" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200_9.of_yojson) resp body

let get_exchange_rates_rate_id ~rate_id ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/exchange_rates/{rate_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "rate_id" (fun x -> x) rate_id in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Exchange_rate.of_yojson) resp body

let get_file_links ?created ?ending_before ?(expand = []) ?expired ?file ?limit ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/file_links" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "created" .show created in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "expired" string_of_bool expired in
    let uri = Request.maybe_add_query_param uri "file" (fun x -> x) file in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200_10.of_yojson) resp body

let get_file_links_link ~link ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/file_links/{link}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "link" (fun x -> x) link in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap File_link.of_yojson) resp body

let get_files ?created ?ending_before ?(expand = []) ?limit ?purpose ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/files" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "created" .show created in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "purpose" Enums.show_purpose purpose in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200_11.of_yojson) resp body

let get_files_file ~file ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/files/{file}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "file" (fun x -> x) file in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.to_string) resp body

let get_invoiceitems ?created ?customer ?ending_before ?(expand = []) ?invoice ?limit ?pending ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/invoiceitems" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "created" .show created in
    let uri = Request.maybe_add_query_param uri "customer" (fun x -> x) customer in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "invoice" (fun x -> x) invoice in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "pending" string_of_bool pending in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200_12.of_yojson) resp body

let get_invoiceitems_invoiceitem ~invoiceitem ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/invoiceitems/{invoiceitem}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "invoiceitem" (fun x -> x) invoiceitem in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Invoiceitem.of_yojson) resp body

let get_invoices ?collection_method ?created ?customer ?due_date ?ending_before ?(expand = []) ?limit ?starting_after ?status ?subscription () =
    let open Lwt in
    let uri = Request.build_uri "/v1/invoices" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "collection_method" Enums.show_collection_method collection_method in
    let uri = Request.maybe_add_query_param uri "created" .show created in
    let uri = Request.maybe_add_query_param uri "customer" (fun x -> x) customer in
    let uri = Request.maybe_add_query_param uri "due_date" .show due_date in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    let uri = Request.maybe_add_query_param uri "status" Enums.show_status_2 status in
    let uri = Request.maybe_add_query_param uri "subscription" (fun x -> x) subscription in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Invoices_list.of_yojson) resp body

let get_invoices_invoice ~invoice ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/invoices/{invoice}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "invoice" (fun x -> x) invoice in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Invoice.of_yojson) resp body

let get_invoices_invoice_lines ~invoice ?ending_before ?(expand = []) ?limit ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/invoices/{invoice}/lines" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "invoice" (fun x -> x) invoice in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Invoice_lines_list.of_yojson) resp body

let get_invoices_upcoming ?coupon ?customer ?discounts ?(expand = []) ?(invoice_items = []) ?schedule ?subscription ?subscription_billing_cycle_anchor ?subscription_cancel_at ?subscription_cancel_at_period_end ?subscription_cancel_now ?subscription_default_tax_rates ?(subscription_items = []) ?subscription_proration_behavior ?subscription_proration_date ?subscription_start_date ?subscription_trial_end ?subscription_trial_from_plan () =
    let open Lwt in
    let uri = Request.build_uri "/v1/invoices/upcoming" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "coupon" (fun x -> x) coupon in
    let uri = Request.maybe_add_query_param uri "customer" (fun x -> x) customer in
    let uri = Request.maybe_add_query_param uri "discounts" .show discounts in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.add_query_param_list uri "invoice_items" (List.map .show) invoice_items in
    let uri = Request.maybe_add_query_param uri "schedule" (fun x -> x) schedule in
    let uri = Request.maybe_add_query_param uri "subscription" (fun x -> x) subscription in
    let uri = Request.maybe_add_query_param uri "subscription_billing_cycle_anchor" .show subscription_billing_cycle_anchor in
    let uri = Request.maybe_add_query_param uri "subscription_cancel_at" .show subscription_cancel_at in
    let uri = Request.maybe_add_query_param uri "subscription_cancel_at_period_end" string_of_bool subscription_cancel_at_period_end in
    let uri = Request.maybe_add_query_param uri "subscription_cancel_now" string_of_bool subscription_cancel_now in
    let uri = Request.maybe_add_query_param uri "subscription_default_tax_rates" .show subscription_default_tax_rates in
    let uri = Request.add_query_param_list uri "subscription_items" (List.map .show) subscription_items in
    let uri = Request.maybe_add_query_param uri "subscription_proration_behavior" Enums.show_proration_behavior subscription_proration_behavior in
    let uri = Request.maybe_add_query_param uri "subscription_proration_date" Int32.to_string subscription_proration_date in
    let uri = Request.maybe_add_query_param uri "subscription_start_date" Int32.to_string subscription_start_date in
    let uri = Request.maybe_add_query_param uri "subscription_trial_end" .show subscription_trial_end in
    let uri = Request.maybe_add_query_param uri "subscription_trial_from_plan" string_of_bool subscription_trial_from_plan in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Invoice.of_yojson) resp body

let get_invoices_upcoming_lines ?coupon ?customer ?discounts ?ending_before ?(expand = []) ?(invoice_items = []) ?limit ?schedule ?starting_after ?subscription ?subscription_billing_cycle_anchor ?subscription_cancel_at ?subscription_cancel_at_period_end ?subscription_cancel_now ?subscription_default_tax_rates ?(subscription_items = []) ?subscription_proration_behavior ?subscription_proration_date ?subscription_start_date ?subscription_trial_end ?subscription_trial_from_plan () =
    let open Lwt in
    let uri = Request.build_uri "/v1/invoices/upcoming/lines" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "coupon" (fun x -> x) coupon in
    let uri = Request.maybe_add_query_param uri "customer" (fun x -> x) customer in
    let uri = Request.maybe_add_query_param uri "discounts" .show discounts in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.add_query_param_list uri "invoice_items" (List.map .show) invoice_items in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "schedule" (fun x -> x) schedule in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    let uri = Request.maybe_add_query_param uri "subscription" (fun x -> x) subscription in
    let uri = Request.maybe_add_query_param uri "subscription_billing_cycle_anchor" .show subscription_billing_cycle_anchor in
    let uri = Request.maybe_add_query_param uri "subscription_cancel_at" .show subscription_cancel_at in
    let uri = Request.maybe_add_query_param uri "subscription_cancel_at_period_end" string_of_bool subscription_cancel_at_period_end in
    let uri = Request.maybe_add_query_param uri "subscription_cancel_now" string_of_bool subscription_cancel_now in
    let uri = Request.maybe_add_query_param uri "subscription_default_tax_rates" .show subscription_default_tax_rates in
    let uri = Request.add_query_param_list uri "subscription_items" (List.map .show) subscription_items in
    let uri = Request.maybe_add_query_param uri "subscription_proration_behavior" Enums.show_proration_behavior subscription_proration_behavior in
    let uri = Request.maybe_add_query_param uri "subscription_proration_date" Int32.to_string subscription_proration_date in
    let uri = Request.maybe_add_query_param uri "subscription_start_date" Int32.to_string subscription_start_date in
    let uri = Request.maybe_add_query_param uri "subscription_trial_end" .show subscription_trial_end in
    let uri = Request.maybe_add_query_param uri "subscription_trial_from_plan" string_of_bool subscription_trial_from_plan in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Invoice_lines_list.of_yojson) resp body

let get_issuer_fraud_records ?charge ?ending_before ?(expand = []) ?limit ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/issuer_fraud_records" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "charge" (fun x -> x) charge in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Radar_issuer_fraud_record_list.of_yojson) resp body

let get_issuer_fraud_records_issuer_fraud_record ~issuer_fraud_record ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/issuer_fraud_records/{issuer_fraud_record}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "issuer_fraud_record" (fun x -> x) issuer_fraud_record in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Issuer_fraud_record.of_yojson) resp body

let get_issuing_authorizations ?card ?cardholder ?created ?ending_before ?(expand = []) ?limit ?starting_after ?status () =
    let open Lwt in
    let uri = Request.build_uri "/v1/issuing/authorizations" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "card" (fun x -> x) card in
    let uri = Request.maybe_add_query_param uri "cardholder" (fun x -> x) cardholder in
    let uri = Request.maybe_add_query_param uri "created" .show created in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    let uri = Request.maybe_add_query_param uri "status" Enums.show_issuing_authorization_status status in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200_13.of_yojson) resp body

let get_issuing_authorizations_authorization ~authorization ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/issuing/authorizations/{authorization}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "authorization" (fun x -> x) authorization in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Issuing_authorization.of_yojson) resp body

let get_issuing_cardholders ?created ?email ?ending_before ?(expand = []) ?limit ?phone_number ?starting_after ?status ?_type () =
    let open Lwt in
    let uri = Request.build_uri "/v1/issuing/cardholders" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "created" .show created in
    let uri = Request.maybe_add_query_param uri "email" (fun x -> x) email in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "phone_number" (fun x -> x) phone_number in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    let uri = Request.maybe_add_query_param uri "status" Enums.show_issuing_cardholder_status status in
    let uri = Request.maybe_add_query_param uri "type" Enums.show_issuing_cardholder_type _type in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200_14.of_yojson) resp body

let get_issuing_cardholders_cardholder ~cardholder ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/issuing/cardholders/{cardholder}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "cardholder" (fun x -> x) cardholder in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Issuing_cardholder.of_yojson) resp body

let get_issuing_cards ?cardholder ?created ?ending_before ?exp_month ?exp_year ?(expand = []) ?last4 ?limit ?starting_after ?status ?_type () =
    let open Lwt in
    let uri = Request.build_uri "/v1/issuing/cards" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "cardholder" (fun x -> x) cardholder in
    let uri = Request.maybe_add_query_param uri "created" .show created in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.maybe_add_query_param uri "exp_month" Int32.to_string exp_month in
    let uri = Request.maybe_add_query_param uri "exp_year" Int32.to_string exp_year in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "last4" (fun x -> x) last4 in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    let uri = Request.maybe_add_query_param uri "status" Enums.show_issuing_card_status status in
    let uri = Request.maybe_add_query_param uri "type" Enums.show_issuing_card_type _type in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200_15.of_yojson) resp body

let get_issuing_cards_card ~card ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/issuing/cards/{card}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "card" (fun x -> x) card in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Issuing_card.of_yojson) resp body

let get_issuing_disputes ?created ?ending_before ?(expand = []) ?limit ?starting_after ?status ?transaction () =
    let open Lwt in
    let uri = Request.build_uri "/v1/issuing/disputes" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "created" .show created in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    let uri = Request.maybe_add_query_param uri "status" Enums.show_issuing_dispute_status status in
    let uri = Request.maybe_add_query_param uri "transaction" (fun x -> x) transaction in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Issuing_dispute_list.of_yojson) resp body

let get_issuing_disputes_dispute ~dispute ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/issuing/disputes/{dispute}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "dispute" (fun x -> x) dispute in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Issuing_dispute.of_yojson) resp body

let get_issuing_settlements ?created ?ending_before ?(expand = []) ?limit ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/issuing/settlements" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "created" .show created in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200_16.of_yojson) resp body

let get_issuing_settlements_settlement ~settlement ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/issuing/settlements/{settlement}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "settlement" (fun x -> x) settlement in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Issuing_settlement.of_yojson) resp body

let get_issuing_transactions ?card ?cardholder ?created ?ending_before ?(expand = []) ?limit ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/issuing/transactions" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "card" (fun x -> x) card in
    let uri = Request.maybe_add_query_param uri "cardholder" (fun x -> x) cardholder in
    let uri = Request.maybe_add_query_param uri "created" .show created in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200_17.of_yojson) resp body

let get_issuing_transactions_transaction ~transaction ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/issuing/transactions/{transaction}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "transaction" (fun x -> x) transaction in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Issuing_transaction.of_yojson) resp body

let get_mandates_mandate ~mandate ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/mandates/{mandate}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "mandate" (fun x -> x) mandate in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Mandate.of_yojson) resp body

let get_order_returns ?created ?ending_before ?(expand = []) ?limit ?order ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/order_returns" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "created" .show created in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "order" (fun x -> x) order in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200_18.of_yojson) resp body

let get_order_returns_id ~id ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/order_returns/{id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Order_return.of_yojson) resp body

let get_orders ?created ?customer ?ending_before ?(expand = []) ?(ids = []) ?limit ?starting_after ?status ?status_transitions ?(upstream_ids = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/orders" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "created" .show created in
    let uri = Request.maybe_add_query_param uri "customer" (fun x -> x) customer in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.add_query_param_list uri "ids" (List.map (fun x -> x)) ids in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    let uri = Request.maybe_add_query_param uri "status" (fun x -> x) status in
    let uri = Request.maybe_add_query_param uri "status_transitions" .show status_transitions in
    let uri = Request.add_query_param_list uri "upstream_ids" (List.map (fun x -> x)) upstream_ids in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200_19.of_yojson) resp body

let get_orders_id ~id ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/orders/{id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Order.of_yojson) resp body

let get_payment_intents ?created ?customer ?ending_before ?(expand = []) ?limit ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/payment_intents" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "created" .show created in
    let uri = Request.maybe_add_query_param uri "customer" (fun x -> x) customer in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Payment_flows_payment_intent_list.of_yojson) resp body

let get_payment_intents_intent ~intent ?client_secret ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/payment_intents/{intent}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "intent" (fun x -> x) intent in
    let uri = Request.maybe_add_query_param uri "client_secret" (fun x -> x) client_secret in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Payment_intent.of_yojson) resp body

let get_payment_methods ~customer ~_type ?ending_before ?(expand = []) ?limit ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/payment_methods" in
    let headers = Request.default_headers in
    let uri = Request.add_query_param uri "customer" (fun x -> x) customer in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    let uri = Request.add_query_param uri "type" Enums.show_inline_object_104_type _type in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Payment_flows_payment_method_list.of_yojson) resp body

let get_payment_methods_payment_method ~payment_method ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/payment_methods/{payment_method}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "payment_method" (fun x -> x) payment_method in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Payment_method.of_yojson) resp body

let get_payouts ?arrival_date ?created ?destination ?ending_before ?(expand = []) ?limit ?starting_after ?status () =
    let open Lwt in
    let uri = Request.build_uri "/v1/payouts" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "arrival_date" .show arrival_date in
    let uri = Request.maybe_add_query_param uri "created" .show created in
    let uri = Request.maybe_add_query_param uri "destination" (fun x -> x) destination in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    let uri = Request.maybe_add_query_param uri "status" (fun x -> x) status in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Payout_list.of_yojson) resp body

let get_payouts_payout ~payout ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/payouts/{payout}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "payout" (fun x -> x) payout in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Payout.of_yojson) resp body

let get_plans ?active ?created ?ending_before ?(expand = []) ?limit ?product ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/plans" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "active" string_of_bool active in
    let uri = Request.maybe_add_query_param uri "created" .show created in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "product" (fun x -> x) product in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Plan_list.of_yojson) resp body

let get_plans_plan ~plan ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/plans/{plan}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "plan" (fun x -> x) plan in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Plan.of_yojson) resp body

let get_prices ?active ?created ?currency ?ending_before ?(expand = []) ?limit ?(lookup_keys = []) ?product ?recurring ?starting_after ?_type () =
    let open Lwt in
    let uri = Request.build_uri "/v1/prices" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "active" string_of_bool active in
    let uri = Request.maybe_add_query_param uri "created" .show created in
    let uri = Request.maybe_add_query_param uri "currency" (fun x -> x) currency in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.add_query_param_list uri "lookup_keys" (List.map (fun x -> x)) lookup_keys in
    let uri = Request.maybe_add_query_param uri "product" (fun x -> x) product in
    let uri = Request.maybe_add_query_param uri "recurring" .show recurring in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    let uri = Request.maybe_add_query_param uri "type" Enums.show_price_type _type in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Price_list.of_yojson) resp body

let get_prices_price ~price ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/prices/{price}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "price" (fun x -> x) price in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Price.of_yojson) resp body

let get_products ?active ?created ?ending_before ?(expand = []) ?(ids = []) ?limit ?shippable ?starting_after ?url () =
    let open Lwt in
    let uri = Request.build_uri "/v1/products" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "active" string_of_bool active in
    let uri = Request.maybe_add_query_param uri "created" .show created in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.add_query_param_list uri "ids" (List.map (fun x -> x)) ids in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "shippable" string_of_bool shippable in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    let uri = Request.maybe_add_query_param uri "url" (fun x -> x) url in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200_20.of_yojson) resp body

let get_products_id ~id ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/products/{id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Product.of_yojson) resp body

let get_promotion_codes ?active ?code ?coupon ?created ?customer ?ending_before ?(expand = []) ?limit ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/promotion_codes" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "active" string_of_bool active in
    let uri = Request.maybe_add_query_param uri "code" (fun x -> x) code in
    let uri = Request.maybe_add_query_param uri "coupon" (fun x -> x) coupon in
    let uri = Request.maybe_add_query_param uri "created" .show created in
    let uri = Request.maybe_add_query_param uri "customer" (fun x -> x) customer in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200_21.of_yojson) resp body

let get_promotion_codes_promotion_code ~promotion_code ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/promotion_codes/{promotion_code}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "promotion_code" (fun x -> x) promotion_code in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Promotion_code.of_yojson) resp body

let get_radar_early_fraud_warnings ?charge ?ending_before ?(expand = []) ?limit ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/radar/early_fraud_warnings" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "charge" (fun x -> x) charge in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Radar_early_fraud_warning_list.of_yojson) resp body

let get_radar_early_fraud_warnings_early_fraud_warning ~early_fraud_warning ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/radar/early_fraud_warnings/{early_fraud_warning}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "early_fraud_warning" (fun x -> x) early_fraud_warning in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Radar_early_fraud_warning.of_yojson) resp body

let get_radar_value_list_items ~value_list ?created ?ending_before ?(expand = []) ?limit ?starting_after ?value () =
    let open Lwt in
    let uri = Request.build_uri "/v1/radar/value_list_items" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "created" .show created in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    let uri = Request.maybe_add_query_param uri "value" (fun x -> x) value in
    let uri = Request.add_query_param uri "value_list" (fun x -> x) value_list in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200_22.of_yojson) resp body

let get_radar_value_list_items_item ~item ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/radar/value_list_items/{item}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "item" (fun x -> x) item in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Radar_value_list_item.of_yojson) resp body

let get_radar_value_lists ?alias ?contains ?created ?ending_before ?(expand = []) ?limit ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/radar/value_lists" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "alias" (fun x -> x) alias in
    let uri = Request.maybe_add_query_param uri "contains" (fun x -> x) contains in
    let uri = Request.maybe_add_query_param uri "created" .show created in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200_23.of_yojson) resp body

let get_radar_value_lists_value_list ~value_list ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/radar/value_lists/{value_list}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "value_list" (fun x -> x) value_list in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Radar_value_list.of_yojson) resp body

let get_recipients ?created ?ending_before ?(expand = []) ?limit ?starting_after ?_type ?verified () =
    let open Lwt in
    let uri = Request.build_uri "/v1/recipients" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "created" .show created in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    let uri = Request.maybe_add_query_param uri "type" Enums.show_type_1 _type in
    let uri = Request.maybe_add_query_param uri "verified" string_of_bool verified in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200_24.of_yojson) resp body

let get_recipients_id ~id ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/recipients/{id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Any_ofrecipientdeleted_recipient.of_yojson) resp body

let get_refunds ?charge ?created ?ending_before ?(expand = []) ?limit ?payment_intent ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/refunds" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "charge" (fun x -> x) charge in
    let uri = Request.maybe_add_query_param uri "created" .show created in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "payment_intent" (fun x -> x) payment_intent in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200_25.of_yojson) resp body

let get_refunds_refund ~refund ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/refunds/{refund}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "refund" (fun x -> x) refund in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Refund.of_yojson) resp body

let get_reporting_report_runs ?created ?ending_before ?(expand = []) ?limit ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/reporting/report_runs" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "created" .show created in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200_26.of_yojson) resp body

let get_reporting_report_runs_report_run ~report_run ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/reporting/report_runs/{report_run}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "report_run" (fun x -> x) report_run in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Reporting_report_run.of_yojson) resp body

let get_reporting_report_types ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/reporting/report_types" in
    let headers = Request.default_headers in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Financial_reporting_finance_report_type_list.of_yojson) resp body

let get_reporting_report_types_report_type ~report_type ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/reporting/report_types/{report_type}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "report_type" (fun x -> x) report_type in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Reporting_report_type.of_yojson) resp body

let get_reviews ?created ?ending_before ?(expand = []) ?limit ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/reviews" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "created" .show created in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200_27.of_yojson) resp body

let get_reviews_review ~review ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/reviews/{review}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "review" (fun x -> x) review in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Review.of_yojson) resp body

let get_setup_attempts ~setup_intent ?created ?ending_before ?(expand = []) ?limit ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/setup_attempts" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "created" .show created in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.add_query_param uri "setup_intent" (fun x -> x) setup_intent in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Payment_flows_setup_intent_setup_attempt_list.of_yojson) resp body

let get_setup_intents ?created ?customer ?ending_before ?(expand = []) ?limit ?payment_method ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/setup_intents" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "created" .show created in
    let uri = Request.maybe_add_query_param uri "customer" (fun x -> x) customer in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "payment_method" (fun x -> x) payment_method in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Payment_flows_setup_intent_list.of_yojson) resp body

let get_setup_intents_intent ~intent ?client_secret ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/setup_intents/{intent}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "intent" (fun x -> x) intent in
    let uri = Request.maybe_add_query_param uri "client_secret" (fun x -> x) client_secret in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Setup_intent.of_yojson) resp body

let get_sigma_scheduled_query_runs ?ending_before ?(expand = []) ?limit ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/sigma/scheduled_query_runs" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200_28.of_yojson) resp body

let get_sigma_scheduled_query_runs_scheduled_query_run ~scheduled_query_run ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/sigma/scheduled_query_runs/{scheduled_query_run}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "scheduled_query_run" (fun x -> x) scheduled_query_run in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Scheduled_query_run.of_yojson) resp body

let get_skus ?active ?(attributes = []) ?ending_before ?(expand = []) ?(ids = []) ?in_stock ?limit ?product ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/skus" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "active" string_of_bool active in
    let uri = Request.add_query_param uri "attributes" (List.map (fun x -> x)) attributes in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.add_query_param_list uri "ids" (List.map (fun x -> x)) ids in
    let uri = Request.maybe_add_query_param uri "in_stock" string_of_bool in_stock in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "product" (fun x -> x) product in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200_29.of_yojson) resp body

let get_skus_id ~id ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/skus/{id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Any_ofskudeleted_sku.of_yojson) resp body

let get_sources_source ~source ?client_secret ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/sources/{source}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "source" (fun x -> x) source in
    let uri = Request.maybe_add_query_param uri "client_secret" (fun x -> x) client_secret in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Source.of_yojson) resp body

let get_sources_source_mandate_notifications_mandate_notification ~mandate_notification ~source ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/sources/{source}/mandate_notifications/{mandate_notification}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "mandate_notification" (fun x -> x) mandate_notification in
    let uri = Request.replace_path_param uri "source" (fun x -> x) source in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Source_mandate_notification.of_yojson) resp body

let get_sources_source_source_transactions ~source ?ending_before ?(expand = []) ?limit ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/sources/{source}/source_transactions" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "source" (fun x -> x) source in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Apms_sources_source_transaction_list.of_yojson) resp body

let get_sources_source_source_transactions_source_transaction ~source ~source_transaction ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/sources/{source}/source_transactions/{source_transaction}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "source" (fun x -> x) source in
    let uri = Request.replace_path_param uri "source_transaction" (fun x -> x) source_transaction in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Source_transaction.of_yojson) resp body

let get_subscription_items ~subscription ?ending_before ?(expand = []) ?limit ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/subscription_items" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    let uri = Request.add_query_param uri "subscription" (fun x -> x) subscription in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200_30.of_yojson) resp body

let get_subscription_items_item ~item ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/subscription_items/{item}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "item" (fun x -> x) item in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Subscription_item.of_yojson) resp body

let get_subscription_items_subscription_item_usage_record_summaries ~subscription_item ?ending_before ?(expand = []) ?limit ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/subscription_items/{subscription_item}/usage_record_summaries" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "subscription_item" (fun x -> x) subscription_item in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200_31.of_yojson) resp body

let get_subscription_schedules ?canceled_at ?completed_at ?created ?customer ?ending_before ?(expand = []) ?limit ?released_at ?scheduled ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/subscription_schedules" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "canceled_at" .show canceled_at in
    let uri = Request.maybe_add_query_param uri "completed_at" .show completed_at in
    let uri = Request.maybe_add_query_param uri "created" .show created in
    let uri = Request.maybe_add_query_param uri "customer" (fun x -> x) customer in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "released_at" .show released_at in
    let uri = Request.maybe_add_query_param uri "scheduled" string_of_bool scheduled in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200_32.of_yojson) resp body

let get_subscription_schedules_schedule ~schedule ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/subscription_schedules/{schedule}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "schedule" (fun x -> x) schedule in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Subscription_schedule.of_yojson) resp body

let get_subscriptions ?collection_method ?created ?current_period_end ?current_period_start ?customer ?ending_before ?(expand = []) ?limit ?price ?starting_after ?status () =
    let open Lwt in
    let uri = Request.build_uri "/v1/subscriptions" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "collection_method" Enums.show_collection_method collection_method in
    let uri = Request.maybe_add_query_param uri "created" .show created in
    let uri = Request.maybe_add_query_param uri "current_period_end" .show current_period_end in
    let uri = Request.maybe_add_query_param uri "current_period_start" .show current_period_start in
    let uri = Request.maybe_add_query_param uri "customer" (fun x -> x) customer in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "price" (fun x -> x) price in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    let uri = Request.maybe_add_query_param uri "status" Enums.show_status_1 status in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200_33.of_yojson) resp body

let get_subscriptions_subscription_exposed_id ~subscription_exposed_id ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/subscriptions/{subscription_exposed_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "subscription_exposed_id" (fun x -> x) subscription_exposed_id in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Subscription.of_yojson) resp body

let get_tax_rates ?active ?created ?ending_before ?(expand = []) ?inclusive ?limit ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/tax_rates" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "active" string_of_bool active in
    let uri = Request.maybe_add_query_param uri "created" .show created in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "inclusive" string_of_bool inclusive in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200_34.of_yojson) resp body

let get_tax_rates_tax_rate ~tax_rate ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/tax_rates/{tax_rate}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "tax_rate" (fun x -> x) tax_rate in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Tax_rate.of_yojson) resp body

let get_terminal_locations ?ending_before ?(expand = []) ?limit ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/terminal/locations" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Terminal_location_location_list.of_yojson) resp body

let get_terminal_locations_location ~location ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/terminal/locations/{location}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "location" (fun x -> x) location in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Terminal_location.of_yojson) resp body

let get_terminal_readers ?device_type ?ending_before ?(expand = []) ?limit ?location ?starting_after ?status () =
    let open Lwt in
    let uri = Request.build_uri "/v1/terminal/readers" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "device_type" Enums.show_device_type device_type in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "location" (fun x -> x) location in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    let uri = Request.maybe_add_query_param uri "status" Enums.show_customer_acceptance_type status in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Terminal_reader_retrieve_reader.of_yojson) resp body

let get_terminal_readers_reader ~reader ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/terminal/readers/{reader}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "reader" (fun x -> x) reader in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Terminal_reader.of_yojson) resp body

let get_tokens_token ~token ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/tokens/{token}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "token" (fun x -> x) token in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Token.of_yojson) resp body

let get_topups ?amount ?created ?ending_before ?(expand = []) ?limit ?starting_after ?status () =
    let open Lwt in
    let uri = Request.build_uri "/v1/topups" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "amount" .show amount in
    let uri = Request.maybe_add_query_param uri "created" .show created in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    let uri = Request.maybe_add_query_param uri "status" Enums.show_status_0 status in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Topup_list.of_yojson) resp body

let get_topups_topup ~topup ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/topups/{topup}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "topup" (fun x -> x) topup in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Topup.of_yojson) resp body

let get_transfers ?created ?destination ?ending_before ?(expand = []) ?limit ?starting_after ?transfer_group () =
    let open Lwt in
    let uri = Request.build_uri "/v1/transfers" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "created" .show created in
    let uri = Request.maybe_add_query_param uri "destination" (fun x -> x) destination in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    let uri = Request.maybe_add_query_param uri "transfer_group" (fun x -> x) transfer_group in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Transfer_list.of_yojson) resp body

let get_transfers_id_reversals ~id ?ending_before ?(expand = []) ?limit ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/transfers/{id}/reversals" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Transfer_reversal_list.of_yojson) resp body

let get_transfers_transfer ~transfer ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/transfers/{transfer}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "transfer" (fun x -> x) transfer in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Transfer.of_yojson) resp body

let get_transfers_transfer_reversals_id ~id ~transfer ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/transfers/{transfer}/reversals/{id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let uri = Request.replace_path_param uri "transfer" (fun x -> x) transfer in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Transfer_reversal.of_yojson) resp body

let get_webhook_endpoints ?ending_before ?(expand = []) ?limit ?starting_after () =
    let open Lwt in
    let uri = Request.build_uri "/v1/webhook_endpoints" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "ending_before" (fun x -> x) ending_before in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "starting_after" (fun x -> x) starting_after in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200_35.of_yojson) resp body

let get_webhook_endpoints_webhook_endpoint ~webhook_endpoint ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/webhook_endpoints/{webhook_endpoint}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "webhook_endpoint" (fun x -> x) webhook_endpoint in
    let uri = Request.add_query_param_list uri "expand" (List.map (fun x -> x)) expand in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Webhook_endpoint.of_yojson) resp body

let post3d_secure ~amount ~currency ~return_url ?card ?customer ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/3d_secure" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param body "amount" Int32.to_string amount in
    let body = Request.maybe_add_form_encoded_body_param body "card" (fun x -> x) card in
    let body = Request.add_form_encoded_body_param body "currency" (fun x -> x) currency in
    let body = Request.maybe_add_form_encoded_body_param body "customer" (fun x -> x) customer in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.add_form_encoded_body_param body "return_url" (fun x -> x) return_url in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Three_d_secure.of_yojson) resp body

let post_account ?account_token ?bank_account ?business_profile ?business_type ?capabilities ?company ?default_currency ?documents ?email ?(expand = []) ?external_account ?individual ?metadata ?settings ?tos_acceptance () =
    let open Lwt in
    let uri = Request.build_uri "/v1/account" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "account_token" (fun x -> x) account_token in
    let body = Request.maybe_add_form_encoded_body_param body "bank_account" .show bank_account in
    let body = Request.maybe_add_form_encoded_body_param body "business_profile" .show business_profile in
    let body = Request.maybe_add_form_encoded_body_param body "business_type" Enums.show_business_type business_type in
    let body = Request.maybe_add_form_encoded_body_param body "capabilities" .show capabilities in
    let body = Request.maybe_add_form_encoded_body_param body "company" .show company in
    let body = Request.maybe_add_form_encoded_body_param body "default_currency" (fun x -> x) default_currency in
    let body = Request.maybe_add_form_encoded_body_param body "documents" .show documents in
    let body = Request.maybe_add_form_encoded_body_param body "email" (fun x -> x) email in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "external_account" (fun x -> x) external_account in
    let body = Request.maybe_add_form_encoded_body_param body "individual" .show individual in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "settings" .show settings in
    let body = Request.maybe_add_form_encoded_body_param body "tos_acceptance" .show tos_acceptance in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Account.of_yojson) resp body

let post_account_bank_accounts ?bank_account ?default_for_currency ?(expand = []) ?external_account () =
    let open Lwt in
    let uri = Request.build_uri "/v1/account/bank_accounts" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "bank_account" .show bank_account in
    let body = Request.maybe_add_form_encoded_body_param body "default_for_currency" string_of_bool default_for_currency in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "external_account" (fun x -> x) external_account in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap External_account.of_yojson) resp body

let post_account_bank_accounts_id ~id ?account_holder_name ?account_holder_type ?address_city ?address_country ?address_line1 ?address_line2 ?address_state ?address_zip ?default_for_currency ?exp_month ?exp_year ?(expand = []) ?metadata ?name () =
    let open Lwt in
    let uri = Request.build_uri "/v1/account/bank_accounts/{id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "account_holder_name" (fun x -> x) account_holder_name in
    let body = Request.maybe_add_form_encoded_body_param body "account_holder_type" Enums.show_account_holder_type account_holder_type in
    let body = Request.maybe_add_form_encoded_body_param body "address_city" (fun x -> x) address_city in
    let body = Request.maybe_add_form_encoded_body_param body "address_country" (fun x -> x) address_country in
    let body = Request.maybe_add_form_encoded_body_param body "address_line1" (fun x -> x) address_line1 in
    let body = Request.maybe_add_form_encoded_body_param body "address_line2" (fun x -> x) address_line2 in
    let body = Request.maybe_add_form_encoded_body_param body "address_state" (fun x -> x) address_state in
    let body = Request.maybe_add_form_encoded_body_param body "address_zip" (fun x -> x) address_zip in
    let body = Request.maybe_add_form_encoded_body_param body "default_for_currency" string_of_bool default_for_currency in
    let body = Request.maybe_add_form_encoded_body_param body "exp_month" (fun x -> x) exp_month in
    let body = Request.maybe_add_form_encoded_body_param body "exp_year" (fun x -> x) exp_year in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "name" (fun x -> x) name in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap External_account.of_yojson) resp body

let post_account_capabilities_capability ~capability ?(expand = []) ?requested () =
    let open Lwt in
    let uri = Request.build_uri "/v1/account/capabilities/{capability}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "capability" (fun x -> x) capability in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "requested" string_of_bool requested in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Capability.of_yojson) resp body

let post_account_external_accounts ?bank_account ?default_for_currency ?(expand = []) ?external_account () =
    let open Lwt in
    let uri = Request.build_uri "/v1/account/external_accounts" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "bank_account" .show bank_account in
    let body = Request.maybe_add_form_encoded_body_param body "default_for_currency" string_of_bool default_for_currency in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "external_account" (fun x -> x) external_account in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap External_account.of_yojson) resp body

let post_account_external_accounts_id ~id ?account_holder_name ?account_holder_type ?address_city ?address_country ?address_line1 ?address_line2 ?address_state ?address_zip ?default_for_currency ?exp_month ?exp_year ?(expand = []) ?metadata ?name () =
    let open Lwt in
    let uri = Request.build_uri "/v1/account/external_accounts/{id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "account_holder_name" (fun x -> x) account_holder_name in
    let body = Request.maybe_add_form_encoded_body_param body "account_holder_type" Enums.show_account_holder_type account_holder_type in
    let body = Request.maybe_add_form_encoded_body_param body "address_city" (fun x -> x) address_city in
    let body = Request.maybe_add_form_encoded_body_param body "address_country" (fun x -> x) address_country in
    let body = Request.maybe_add_form_encoded_body_param body "address_line1" (fun x -> x) address_line1 in
    let body = Request.maybe_add_form_encoded_body_param body "address_line2" (fun x -> x) address_line2 in
    let body = Request.maybe_add_form_encoded_body_param body "address_state" (fun x -> x) address_state in
    let body = Request.maybe_add_form_encoded_body_param body "address_zip" (fun x -> x) address_zip in
    let body = Request.maybe_add_form_encoded_body_param body "default_for_currency" string_of_bool default_for_currency in
    let body = Request.maybe_add_form_encoded_body_param body "exp_month" (fun x -> x) exp_month in
    let body = Request.maybe_add_form_encoded_body_param body "exp_year" (fun x -> x) exp_year in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "name" (fun x -> x) name in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap External_account.of_yojson) resp body

let post_account_links ~account ~_type ?collect ?(expand = []) ?refresh_url ?return_url () =
    let open Lwt in
    let uri = Request.build_uri "/v1/account_links" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param body "account" (fun x -> x) account in
    let body = Request.maybe_add_form_encoded_body_param body "collect" Enums.show_collect collect in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "refresh_url" (fun x -> x) refresh_url in
    let body = Request.maybe_add_form_encoded_body_param body "return_url" (fun x -> x) return_url in
    let body = Request.add_form_encoded_body_param body "_type" Enums.show_inline_object_14_type _type in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Account_link.of_yojson) resp body

let post_account_login_links ~account ?(expand = []) ?redirect_url () =
    let open Lwt in
    let uri = Request.build_uri "/v1/account/login_links" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param body "account" (fun x -> x) account in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "redirect_url" (fun x -> x) redirect_url in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Login_link.of_yojson) resp body

let post_account_people ?account ?address ?address_kana ?address_kanji ?dob ?email ?(expand = []) ?first_name ?first_name_kana ?first_name_kanji ?gender ?id_number ?last_name ?last_name_kana ?last_name_kanji ?maiden_name ?metadata ?person_token ?phone ?political_exposure ?relationship ?ssn_last_4 ?verification () =
    let open Lwt in
    let uri = Request.build_uri "/v1/account/people" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "account" (fun x -> x) account in
    let body = Request.maybe_add_form_encoded_body_param body "address" .show address in
    let body = Request.maybe_add_form_encoded_body_param body "address_kana" .show address_kana in
    let body = Request.maybe_add_form_encoded_body_param body "address_kanji" .show address_kanji in
    let body = Request.maybe_add_form_encoded_body_param body "dob" .show dob in
    let body = Request.maybe_add_form_encoded_body_param body "email" (fun x -> x) email in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "first_name" (fun x -> x) first_name in
    let body = Request.maybe_add_form_encoded_body_param body "first_name_kana" (fun x -> x) first_name_kana in
    let body = Request.maybe_add_form_encoded_body_param body "first_name_kanji" (fun x -> x) first_name_kanji in
    let body = Request.maybe_add_form_encoded_body_param body "gender" (fun x -> x) gender in
    let body = Request.maybe_add_form_encoded_body_param body "id_number" (fun x -> x) id_number in
    let body = Request.maybe_add_form_encoded_body_param body "last_name" (fun x -> x) last_name in
    let body = Request.maybe_add_form_encoded_body_param body "last_name_kana" (fun x -> x) last_name_kana in
    let body = Request.maybe_add_form_encoded_body_param body "last_name_kanji" (fun x -> x) last_name_kanji in
    let body = Request.maybe_add_form_encoded_body_param body "maiden_name" (fun x -> x) maiden_name in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "person_token" (fun x -> x) person_token in
    let body = Request.maybe_add_form_encoded_body_param body "phone" (fun x -> x) phone in
    let body = Request.maybe_add_form_encoded_body_param body "political_exposure" (fun x -> x) political_exposure in
    let body = Request.maybe_add_form_encoded_body_param body "relationship" .show relationship in
    let body = Request.maybe_add_form_encoded_body_param body "ssn_last_4" (fun x -> x) ssn_last_4 in
    let body = Request.maybe_add_form_encoded_body_param body "verification" .show verification in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Person.of_yojson) resp body

let post_account_people_person ~person ?account ?address ?address_kana ?address_kanji ?dob ?email ?(expand = []) ?first_name ?first_name_kana ?first_name_kanji ?gender ?id_number ?last_name ?last_name_kana ?last_name_kanji ?maiden_name ?metadata ?person_token ?phone ?political_exposure ?relationship ?ssn_last_4 ?verification () =
    let open Lwt in
    let uri = Request.build_uri "/v1/account/people/{person}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "person" (fun x -> x) person in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "account" (fun x -> x) account in
    let body = Request.maybe_add_form_encoded_body_param body "address" .show address in
    let body = Request.maybe_add_form_encoded_body_param body "address_kana" .show address_kana in
    let body = Request.maybe_add_form_encoded_body_param body "address_kanji" .show address_kanji in
    let body = Request.maybe_add_form_encoded_body_param body "dob" .show dob in
    let body = Request.maybe_add_form_encoded_body_param body "email" (fun x -> x) email in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "first_name" (fun x -> x) first_name in
    let body = Request.maybe_add_form_encoded_body_param body "first_name_kana" (fun x -> x) first_name_kana in
    let body = Request.maybe_add_form_encoded_body_param body "first_name_kanji" (fun x -> x) first_name_kanji in
    let body = Request.maybe_add_form_encoded_body_param body "gender" (fun x -> x) gender in
    let body = Request.maybe_add_form_encoded_body_param body "id_number" (fun x -> x) id_number in
    let body = Request.maybe_add_form_encoded_body_param body "last_name" (fun x -> x) last_name in
    let body = Request.maybe_add_form_encoded_body_param body "last_name_kana" (fun x -> x) last_name_kana in
    let body = Request.maybe_add_form_encoded_body_param body "last_name_kanji" (fun x -> x) last_name_kanji in
    let body = Request.maybe_add_form_encoded_body_param body "maiden_name" (fun x -> x) maiden_name in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "person_token" (fun x -> x) person_token in
    let body = Request.maybe_add_form_encoded_body_param body "phone" (fun x -> x) phone in
    let body = Request.maybe_add_form_encoded_body_param body "political_exposure" (fun x -> x) political_exposure in
    let body = Request.maybe_add_form_encoded_body_param body "relationship" .show relationship in
    let body = Request.maybe_add_form_encoded_body_param body "ssn_last_4" (fun x -> x) ssn_last_4 in
    let body = Request.maybe_add_form_encoded_body_param body "verification" .show verification in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Person.of_yojson) resp body

let post_account_persons ?account ?address ?address_kana ?address_kanji ?dob ?email ?(expand = []) ?first_name ?first_name_kana ?first_name_kanji ?gender ?id_number ?last_name ?last_name_kana ?last_name_kanji ?maiden_name ?metadata ?person_token ?phone ?political_exposure ?relationship ?ssn_last_4 ?verification () =
    let open Lwt in
    let uri = Request.build_uri "/v1/account/persons" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "account" (fun x -> x) account in
    let body = Request.maybe_add_form_encoded_body_param body "address" .show address in
    let body = Request.maybe_add_form_encoded_body_param body "address_kana" .show address_kana in
    let body = Request.maybe_add_form_encoded_body_param body "address_kanji" .show address_kanji in
    let body = Request.maybe_add_form_encoded_body_param body "dob" .show dob in
    let body = Request.maybe_add_form_encoded_body_param body "email" (fun x -> x) email in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "first_name" (fun x -> x) first_name in
    let body = Request.maybe_add_form_encoded_body_param body "first_name_kana" (fun x -> x) first_name_kana in
    let body = Request.maybe_add_form_encoded_body_param body "first_name_kanji" (fun x -> x) first_name_kanji in
    let body = Request.maybe_add_form_encoded_body_param body "gender" (fun x -> x) gender in
    let body = Request.maybe_add_form_encoded_body_param body "id_number" (fun x -> x) id_number in
    let body = Request.maybe_add_form_encoded_body_param body "last_name" (fun x -> x) last_name in
    let body = Request.maybe_add_form_encoded_body_param body "last_name_kana" (fun x -> x) last_name_kana in
    let body = Request.maybe_add_form_encoded_body_param body "last_name_kanji" (fun x -> x) last_name_kanji in
    let body = Request.maybe_add_form_encoded_body_param body "maiden_name" (fun x -> x) maiden_name in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "person_token" (fun x -> x) person_token in
    let body = Request.maybe_add_form_encoded_body_param body "phone" (fun x -> x) phone in
    let body = Request.maybe_add_form_encoded_body_param body "political_exposure" (fun x -> x) political_exposure in
    let body = Request.maybe_add_form_encoded_body_param body "relationship" .show relationship in
    let body = Request.maybe_add_form_encoded_body_param body "ssn_last_4" (fun x -> x) ssn_last_4 in
    let body = Request.maybe_add_form_encoded_body_param body "verification" .show verification in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Person.of_yojson) resp body

let post_account_persons_person ~person ?account ?address ?address_kana ?address_kanji ?dob ?email ?(expand = []) ?first_name ?first_name_kana ?first_name_kanji ?gender ?id_number ?last_name ?last_name_kana ?last_name_kanji ?maiden_name ?metadata ?person_token ?phone ?political_exposure ?relationship ?ssn_last_4 ?verification () =
    let open Lwt in
    let uri = Request.build_uri "/v1/account/persons/{person}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "person" (fun x -> x) person in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "account" (fun x -> x) account in
    let body = Request.maybe_add_form_encoded_body_param body "address" .show address in
    let body = Request.maybe_add_form_encoded_body_param body "address_kana" .show address_kana in
    let body = Request.maybe_add_form_encoded_body_param body "address_kanji" .show address_kanji in
    let body = Request.maybe_add_form_encoded_body_param body "dob" .show dob in
    let body = Request.maybe_add_form_encoded_body_param body "email" (fun x -> x) email in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "first_name" (fun x -> x) first_name in
    let body = Request.maybe_add_form_encoded_body_param body "first_name_kana" (fun x -> x) first_name_kana in
    let body = Request.maybe_add_form_encoded_body_param body "first_name_kanji" (fun x -> x) first_name_kanji in
    let body = Request.maybe_add_form_encoded_body_param body "gender" (fun x -> x) gender in
    let body = Request.maybe_add_form_encoded_body_param body "id_number" (fun x -> x) id_number in
    let body = Request.maybe_add_form_encoded_body_param body "last_name" (fun x -> x) last_name in
    let body = Request.maybe_add_form_encoded_body_param body "last_name_kana" (fun x -> x) last_name_kana in
    let body = Request.maybe_add_form_encoded_body_param body "last_name_kanji" (fun x -> x) last_name_kanji in
    let body = Request.maybe_add_form_encoded_body_param body "maiden_name" (fun x -> x) maiden_name in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "person_token" (fun x -> x) person_token in
    let body = Request.maybe_add_form_encoded_body_param body "phone" (fun x -> x) phone in
    let body = Request.maybe_add_form_encoded_body_param body "political_exposure" (fun x -> x) political_exposure in
    let body = Request.maybe_add_form_encoded_body_param body "relationship" .show relationship in
    let body = Request.maybe_add_form_encoded_body_param body "ssn_last_4" (fun x -> x) ssn_last_4 in
    let body = Request.maybe_add_form_encoded_body_param body "verification" .show verification in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Person.of_yojson) resp body

let post_accounts ?account_token ?bank_account ?business_profile ?business_type ?capabilities ?company ?country ?default_currency ?documents ?email ?(expand = []) ?external_account ?individual ?metadata ?settings ?tos_acceptance ?_type () =
    let open Lwt in
    let uri = Request.build_uri "/v1/accounts" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "account_token" (fun x -> x) account_token in
    let body = Request.maybe_add_form_encoded_body_param body "bank_account" .show bank_account in
    let body = Request.maybe_add_form_encoded_body_param body "business_profile" .show business_profile in
    let body = Request.maybe_add_form_encoded_body_param body "business_type" Enums.show_business_type business_type in
    let body = Request.maybe_add_form_encoded_body_param body "capabilities" .show capabilities in
    let body = Request.maybe_add_form_encoded_body_param body "company" .show company in
    let body = Request.maybe_add_form_encoded_body_param body "country" (fun x -> x) country in
    let body = Request.maybe_add_form_encoded_body_param body "default_currency" (fun x -> x) default_currency in
    let body = Request.maybe_add_form_encoded_body_param body "documents" .show documents in
    let body = Request.maybe_add_form_encoded_body_param body "email" (fun x -> x) email in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "external_account" (fun x -> x) external_account in
    let body = Request.maybe_add_form_encoded_body_param body "individual" .show individual in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "settings" .show settings in
    let body = Request.maybe_add_form_encoded_body_param body "tos_acceptance" .show tos_acceptance in
    let body = Request.maybe_add_form_encoded_body_param body "_type" Enums.show_type_0 _type in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Account.of_yojson) resp body

let post_accounts_account ~account ?account_token ?bank_account ?business_profile ?business_type ?capabilities ?company ?default_currency ?documents ?email ?(expand = []) ?external_account ?individual ?metadata ?settings ?tos_acceptance () =
    let open Lwt in
    let uri = Request.build_uri "/v1/accounts/{account}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "account" (fun x -> x) account in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "account_token" (fun x -> x) account_token in
    let body = Request.maybe_add_form_encoded_body_param body "bank_account" .show bank_account in
    let body = Request.maybe_add_form_encoded_body_param body "business_profile" .show business_profile in
    let body = Request.maybe_add_form_encoded_body_param body "business_type" Enums.show_business_type business_type in
    let body = Request.maybe_add_form_encoded_body_param body "capabilities" .show capabilities in
    let body = Request.maybe_add_form_encoded_body_param body "company" .show company in
    let body = Request.maybe_add_form_encoded_body_param body "default_currency" (fun x -> x) default_currency in
    let body = Request.maybe_add_form_encoded_body_param body "documents" .show documents in
    let body = Request.maybe_add_form_encoded_body_param body "email" (fun x -> x) email in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "external_account" (fun x -> x) external_account in
    let body = Request.maybe_add_form_encoded_body_param body "individual" .show individual in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "settings" .show settings in
    let body = Request.maybe_add_form_encoded_body_param body "tos_acceptance" .show tos_acceptance in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Account.of_yojson) resp body

let post_accounts_account_bank_accounts ~account ?bank_account ?default_for_currency ?(expand = []) ?external_account () =
    let open Lwt in
    let uri = Request.build_uri "/v1/accounts/{account}/bank_accounts" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "account" (fun x -> x) account in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "bank_account" .show bank_account in
    let body = Request.maybe_add_form_encoded_body_param body "default_for_currency" string_of_bool default_for_currency in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "external_account" (fun x -> x) external_account in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap External_account.of_yojson) resp body

let post_accounts_account_bank_accounts_id ~account ~id ?account_holder_name ?account_holder_type ?address_city ?address_country ?address_line1 ?address_line2 ?address_state ?address_zip ?default_for_currency ?exp_month ?exp_year ?(expand = []) ?metadata ?name () =
    let open Lwt in
    let uri = Request.build_uri "/v1/accounts/{account}/bank_accounts/{id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "account" (fun x -> x) account in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "account_holder_name" (fun x -> x) account_holder_name in
    let body = Request.maybe_add_form_encoded_body_param body "account_holder_type" Enums.show_account_holder_type account_holder_type in
    let body = Request.maybe_add_form_encoded_body_param body "address_city" (fun x -> x) address_city in
    let body = Request.maybe_add_form_encoded_body_param body "address_country" (fun x -> x) address_country in
    let body = Request.maybe_add_form_encoded_body_param body "address_line1" (fun x -> x) address_line1 in
    let body = Request.maybe_add_form_encoded_body_param body "address_line2" (fun x -> x) address_line2 in
    let body = Request.maybe_add_form_encoded_body_param body "address_state" (fun x -> x) address_state in
    let body = Request.maybe_add_form_encoded_body_param body "address_zip" (fun x -> x) address_zip in
    let body = Request.maybe_add_form_encoded_body_param body "default_for_currency" string_of_bool default_for_currency in
    let body = Request.maybe_add_form_encoded_body_param body "exp_month" (fun x -> x) exp_month in
    let body = Request.maybe_add_form_encoded_body_param body "exp_year" (fun x -> x) exp_year in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "name" (fun x -> x) name in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap External_account.of_yojson) resp body

let post_accounts_account_capabilities_capability ~account ~capability ?(expand = []) ?requested () =
    let open Lwt in
    let uri = Request.build_uri "/v1/accounts/{account}/capabilities/{capability}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "account" (fun x -> x) account in
    let uri = Request.replace_path_param uri "capability" (fun x -> x) capability in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "requested" string_of_bool requested in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Capability.of_yojson) resp body

let post_accounts_account_external_accounts ~account ?bank_account ?default_for_currency ?(expand = []) ?external_account () =
    let open Lwt in
    let uri = Request.build_uri "/v1/accounts/{account}/external_accounts" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "account" (fun x -> x) account in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "bank_account" .show bank_account in
    let body = Request.maybe_add_form_encoded_body_param body "default_for_currency" string_of_bool default_for_currency in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "external_account" (fun x -> x) external_account in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap External_account.of_yojson) resp body

let post_accounts_account_external_accounts_id ~account ~id ?account_holder_name ?account_holder_type ?address_city ?address_country ?address_line1 ?address_line2 ?address_state ?address_zip ?default_for_currency ?exp_month ?exp_year ?(expand = []) ?metadata ?name () =
    let open Lwt in
    let uri = Request.build_uri "/v1/accounts/{account}/external_accounts/{id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "account" (fun x -> x) account in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "account_holder_name" (fun x -> x) account_holder_name in
    let body = Request.maybe_add_form_encoded_body_param body "account_holder_type" Enums.show_account_holder_type account_holder_type in
    let body = Request.maybe_add_form_encoded_body_param body "address_city" (fun x -> x) address_city in
    let body = Request.maybe_add_form_encoded_body_param body "address_country" (fun x -> x) address_country in
    let body = Request.maybe_add_form_encoded_body_param body "address_line1" (fun x -> x) address_line1 in
    let body = Request.maybe_add_form_encoded_body_param body "address_line2" (fun x -> x) address_line2 in
    let body = Request.maybe_add_form_encoded_body_param body "address_state" (fun x -> x) address_state in
    let body = Request.maybe_add_form_encoded_body_param body "address_zip" (fun x -> x) address_zip in
    let body = Request.maybe_add_form_encoded_body_param body "default_for_currency" string_of_bool default_for_currency in
    let body = Request.maybe_add_form_encoded_body_param body "exp_month" (fun x -> x) exp_month in
    let body = Request.maybe_add_form_encoded_body_param body "exp_year" (fun x -> x) exp_year in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "name" (fun x -> x) name in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap External_account.of_yojson) resp body

let post_accounts_account_login_links ~account ?(expand = []) ?redirect_url () =
    let open Lwt in
    let uri = Request.build_uri "/v1/accounts/{account}/login_links" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "account" (fun x -> x) account in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "redirect_url" (fun x -> x) redirect_url in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Login_link.of_yojson) resp body

let post_accounts_account_people ~account ?address ?address_kana ?address_kanji ?dob ?email ?(expand = []) ?first_name ?first_name_kana ?first_name_kanji ?gender ?id_number ?last_name ?last_name_kana ?last_name_kanji ?maiden_name ?metadata ?person_token ?phone ?political_exposure ?relationship ?ssn_last_4 ?verification () =
    let open Lwt in
    let uri = Request.build_uri "/v1/accounts/{account}/people" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "account" (fun x -> x) account in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "address" .show address in
    let body = Request.maybe_add_form_encoded_body_param body "address_kana" .show address_kana in
    let body = Request.maybe_add_form_encoded_body_param body "address_kanji" .show address_kanji in
    let body = Request.maybe_add_form_encoded_body_param body "dob" .show dob in
    let body = Request.maybe_add_form_encoded_body_param body "email" (fun x -> x) email in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "first_name" (fun x -> x) first_name in
    let body = Request.maybe_add_form_encoded_body_param body "first_name_kana" (fun x -> x) first_name_kana in
    let body = Request.maybe_add_form_encoded_body_param body "first_name_kanji" (fun x -> x) first_name_kanji in
    let body = Request.maybe_add_form_encoded_body_param body "gender" (fun x -> x) gender in
    let body = Request.maybe_add_form_encoded_body_param body "id_number" (fun x -> x) id_number in
    let body = Request.maybe_add_form_encoded_body_param body "last_name" (fun x -> x) last_name in
    let body = Request.maybe_add_form_encoded_body_param body "last_name_kana" (fun x -> x) last_name_kana in
    let body = Request.maybe_add_form_encoded_body_param body "last_name_kanji" (fun x -> x) last_name_kanji in
    let body = Request.maybe_add_form_encoded_body_param body "maiden_name" (fun x -> x) maiden_name in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "person_token" (fun x -> x) person_token in
    let body = Request.maybe_add_form_encoded_body_param body "phone" (fun x -> x) phone in
    let body = Request.maybe_add_form_encoded_body_param body "political_exposure" (fun x -> x) political_exposure in
    let body = Request.maybe_add_form_encoded_body_param body "relationship" .show relationship in
    let body = Request.maybe_add_form_encoded_body_param body "ssn_last_4" (fun x -> x) ssn_last_4 in
    let body = Request.maybe_add_form_encoded_body_param body "verification" .show verification in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Person.of_yojson) resp body

let post_accounts_account_people_person ~account ~person ?address ?address_kana ?address_kanji ?dob ?email ?(expand = []) ?first_name ?first_name_kana ?first_name_kanji ?gender ?id_number ?last_name ?last_name_kana ?last_name_kanji ?maiden_name ?metadata ?person_token ?phone ?political_exposure ?relationship ?ssn_last_4 ?verification () =
    let open Lwt in
    let uri = Request.build_uri "/v1/accounts/{account}/people/{person}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "account" (fun x -> x) account in
    let uri = Request.replace_path_param uri "person" (fun x -> x) person in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "address" .show address in
    let body = Request.maybe_add_form_encoded_body_param body "address_kana" .show address_kana in
    let body = Request.maybe_add_form_encoded_body_param body "address_kanji" .show address_kanji in
    let body = Request.maybe_add_form_encoded_body_param body "dob" .show dob in
    let body = Request.maybe_add_form_encoded_body_param body "email" (fun x -> x) email in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "first_name" (fun x -> x) first_name in
    let body = Request.maybe_add_form_encoded_body_param body "first_name_kana" (fun x -> x) first_name_kana in
    let body = Request.maybe_add_form_encoded_body_param body "first_name_kanji" (fun x -> x) first_name_kanji in
    let body = Request.maybe_add_form_encoded_body_param body "gender" (fun x -> x) gender in
    let body = Request.maybe_add_form_encoded_body_param body "id_number" (fun x -> x) id_number in
    let body = Request.maybe_add_form_encoded_body_param body "last_name" (fun x -> x) last_name in
    let body = Request.maybe_add_form_encoded_body_param body "last_name_kana" (fun x -> x) last_name_kana in
    let body = Request.maybe_add_form_encoded_body_param body "last_name_kanji" (fun x -> x) last_name_kanji in
    let body = Request.maybe_add_form_encoded_body_param body "maiden_name" (fun x -> x) maiden_name in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "person_token" (fun x -> x) person_token in
    let body = Request.maybe_add_form_encoded_body_param body "phone" (fun x -> x) phone in
    let body = Request.maybe_add_form_encoded_body_param body "political_exposure" (fun x -> x) political_exposure in
    let body = Request.maybe_add_form_encoded_body_param body "relationship" .show relationship in
    let body = Request.maybe_add_form_encoded_body_param body "ssn_last_4" (fun x -> x) ssn_last_4 in
    let body = Request.maybe_add_form_encoded_body_param body "verification" .show verification in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Person.of_yojson) resp body

let post_accounts_account_persons ~account ?address ?address_kana ?address_kanji ?dob ?email ?(expand = []) ?first_name ?first_name_kana ?first_name_kanji ?gender ?id_number ?last_name ?last_name_kana ?last_name_kanji ?maiden_name ?metadata ?person_token ?phone ?political_exposure ?relationship ?ssn_last_4 ?verification () =
    let open Lwt in
    let uri = Request.build_uri "/v1/accounts/{account}/persons" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "account" (fun x -> x) account in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "address" .show address in
    let body = Request.maybe_add_form_encoded_body_param body "address_kana" .show address_kana in
    let body = Request.maybe_add_form_encoded_body_param body "address_kanji" .show address_kanji in
    let body = Request.maybe_add_form_encoded_body_param body "dob" .show dob in
    let body = Request.maybe_add_form_encoded_body_param body "email" (fun x -> x) email in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "first_name" (fun x -> x) first_name in
    let body = Request.maybe_add_form_encoded_body_param body "first_name_kana" (fun x -> x) first_name_kana in
    let body = Request.maybe_add_form_encoded_body_param body "first_name_kanji" (fun x -> x) first_name_kanji in
    let body = Request.maybe_add_form_encoded_body_param body "gender" (fun x -> x) gender in
    let body = Request.maybe_add_form_encoded_body_param body "id_number" (fun x -> x) id_number in
    let body = Request.maybe_add_form_encoded_body_param body "last_name" (fun x -> x) last_name in
    let body = Request.maybe_add_form_encoded_body_param body "last_name_kana" (fun x -> x) last_name_kana in
    let body = Request.maybe_add_form_encoded_body_param body "last_name_kanji" (fun x -> x) last_name_kanji in
    let body = Request.maybe_add_form_encoded_body_param body "maiden_name" (fun x -> x) maiden_name in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "person_token" (fun x -> x) person_token in
    let body = Request.maybe_add_form_encoded_body_param body "phone" (fun x -> x) phone in
    let body = Request.maybe_add_form_encoded_body_param body "political_exposure" (fun x -> x) political_exposure in
    let body = Request.maybe_add_form_encoded_body_param body "relationship" .show relationship in
    let body = Request.maybe_add_form_encoded_body_param body "ssn_last_4" (fun x -> x) ssn_last_4 in
    let body = Request.maybe_add_form_encoded_body_param body "verification" .show verification in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Person.of_yojson) resp body

let post_accounts_account_persons_person ~account ~person ?address ?address_kana ?address_kanji ?dob ?email ?(expand = []) ?first_name ?first_name_kana ?first_name_kanji ?gender ?id_number ?last_name ?last_name_kana ?last_name_kanji ?maiden_name ?metadata ?person_token ?phone ?political_exposure ?relationship ?ssn_last_4 ?verification () =
    let open Lwt in
    let uri = Request.build_uri "/v1/accounts/{account}/persons/{person}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "account" (fun x -> x) account in
    let uri = Request.replace_path_param uri "person" (fun x -> x) person in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "address" .show address in
    let body = Request.maybe_add_form_encoded_body_param body "address_kana" .show address_kana in
    let body = Request.maybe_add_form_encoded_body_param body "address_kanji" .show address_kanji in
    let body = Request.maybe_add_form_encoded_body_param body "dob" .show dob in
    let body = Request.maybe_add_form_encoded_body_param body "email" (fun x -> x) email in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "first_name" (fun x -> x) first_name in
    let body = Request.maybe_add_form_encoded_body_param body "first_name_kana" (fun x -> x) first_name_kana in
    let body = Request.maybe_add_form_encoded_body_param body "first_name_kanji" (fun x -> x) first_name_kanji in
    let body = Request.maybe_add_form_encoded_body_param body "gender" (fun x -> x) gender in
    let body = Request.maybe_add_form_encoded_body_param body "id_number" (fun x -> x) id_number in
    let body = Request.maybe_add_form_encoded_body_param body "last_name" (fun x -> x) last_name in
    let body = Request.maybe_add_form_encoded_body_param body "last_name_kana" (fun x -> x) last_name_kana in
    let body = Request.maybe_add_form_encoded_body_param body "last_name_kanji" (fun x -> x) last_name_kanji in
    let body = Request.maybe_add_form_encoded_body_param body "maiden_name" (fun x -> x) maiden_name in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "person_token" (fun x -> x) person_token in
    let body = Request.maybe_add_form_encoded_body_param body "phone" (fun x -> x) phone in
    let body = Request.maybe_add_form_encoded_body_param body "political_exposure" (fun x -> x) political_exposure in
    let body = Request.maybe_add_form_encoded_body_param body "relationship" .show relationship in
    let body = Request.maybe_add_form_encoded_body_param body "ssn_last_4" (fun x -> x) ssn_last_4 in
    let body = Request.maybe_add_form_encoded_body_param body "verification" .show verification in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Person.of_yojson) resp body

let post_accounts_account_reject ~account ~reason ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/accounts/{account}/reject" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "account" (fun x -> x) account in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.add_form_encoded_body_param body "reason" (fun x -> x) reason in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Account.of_yojson) resp body

let post_apple_pay_domains ~domain_name ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/apple_pay/domains" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param body "domain_name" (fun x -> x) domain_name in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Apple_pay_domain.of_yojson) resp body

let post_application_fees_fee_refunds_id ~fee ~id ?(expand = []) ?metadata () =
    let open Lwt in
    let uri = Request.build_uri "/v1/application_fees/{fee}/refunds/{id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "fee" (fun x -> x) fee in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Fee_refund.of_yojson) resp body

let post_application_fees_id_refund ~id ?amount ?directive ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/application_fees/{id}/refund" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "amount" Int32.to_string amount in
    let body = Request.maybe_add_form_encoded_body_param body "directive" (fun x -> x) directive in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Application_fee.of_yojson) resp body

let post_application_fees_id_refunds ~id ?amount ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/application_fees/{id}/refunds" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "amount" Int32.to_string amount in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Fee_refund.of_yojson) resp body

let post_billing_portal_sessions ~customer ?(expand = []) ?return_url () =
    let open Lwt in
    let uri = Request.build_uri "/v1/billing_portal/sessions" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param body "customer" (fun x -> x) customer in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "return_url" (fun x -> x) return_url in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Billing_portal_session.of_yojson) resp body

let post_charges ?amount ?application_fee ?application_fee_amount ?capture ?card ?currency ?customer ?description ?destination ?(expand = []) ?metadata ?on_behalf_of ?receipt_email ?shipping ?source ?statement_descriptor ?statement_descriptor_suffix ?transfer_data ?transfer_group () =
    let open Lwt in
    let uri = Request.build_uri "/v1/charges" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "amount" Int32.to_string amount in
    let body = Request.maybe_add_form_encoded_body_param body "application_fee" Int32.to_string application_fee in
    let body = Request.maybe_add_form_encoded_body_param body "application_fee_amount" Int32.to_string application_fee_amount in
    let body = Request.maybe_add_form_encoded_body_param body "capture" string_of_bool capture in
    let body = Request.maybe_add_form_encoded_body_param body "card" .show card in
    let body = Request.maybe_add_form_encoded_body_param body "currency" (fun x -> x) currency in
    let body = Request.maybe_add_form_encoded_body_param body "customer" (fun x -> x) customer in
    let body = Request.maybe_add_form_encoded_body_param body "description" (fun x -> x) description in
    let body = Request.maybe_add_form_encoded_body_param body "destination" .show destination in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "on_behalf_of" (fun x -> x) on_behalf_of in
    let body = Request.maybe_add_form_encoded_body_param body "receipt_email" (fun x -> x) receipt_email in
    let body = Request.maybe_add_form_encoded_body_param body "shipping" .show shipping in
    let body = Request.maybe_add_form_encoded_body_param body "source" (fun x -> x) source in
    let body = Request.maybe_add_form_encoded_body_param body "statement_descriptor" (fun x -> x) statement_descriptor in
    let body = Request.maybe_add_form_encoded_body_param body "statement_descriptor_suffix" (fun x -> x) statement_descriptor_suffix in
    let body = Request.maybe_add_form_encoded_body_param body "transfer_data" .show transfer_data in
    let body = Request.maybe_add_form_encoded_body_param body "transfer_group" (fun x -> x) transfer_group in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Charge.of_yojson) resp body

let post_charges_charge ~charge ?customer ?description ?(expand = []) ?fraud_details ?metadata ?receipt_email ?shipping ?transfer_group () =
    let open Lwt in
    let uri = Request.build_uri "/v1/charges/{charge}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "charge" (fun x -> x) charge in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "customer" (fun x -> x) customer in
    let body = Request.maybe_add_form_encoded_body_param body "description" (fun x -> x) description in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "fraud_details" .show fraud_details in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "receipt_email" (fun x -> x) receipt_email in
    let body = Request.maybe_add_form_encoded_body_param body "shipping" .show shipping in
    let body = Request.maybe_add_form_encoded_body_param body "transfer_group" (fun x -> x) transfer_group in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Charge.of_yojson) resp body

let post_charges_charge_capture ~charge ?amount ?application_fee ?application_fee_amount ?(expand = []) ?receipt_email ?statement_descriptor ?statement_descriptor_suffix ?transfer_data ?transfer_group () =
    let open Lwt in
    let uri = Request.build_uri "/v1/charges/{charge}/capture" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "charge" (fun x -> x) charge in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "amount" Int32.to_string amount in
    let body = Request.maybe_add_form_encoded_body_param body "application_fee" Int32.to_string application_fee in
    let body = Request.maybe_add_form_encoded_body_param body "application_fee_amount" Int32.to_string application_fee_amount in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "receipt_email" (fun x -> x) receipt_email in
    let body = Request.maybe_add_form_encoded_body_param body "statement_descriptor" (fun x -> x) statement_descriptor in
    let body = Request.maybe_add_form_encoded_body_param body "statement_descriptor_suffix" (fun x -> x) statement_descriptor_suffix in
    let body = Request.maybe_add_form_encoded_body_param body "transfer_data" .show transfer_data in
    let body = Request.maybe_add_form_encoded_body_param body "transfer_group" (fun x -> x) transfer_group in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Charge.of_yojson) resp body

let post_charges_charge_dispute ~charge ?evidence ?(expand = []) ?metadata ?submit () =
    let open Lwt in
    let uri = Request.build_uri "/v1/charges/{charge}/dispute" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "charge" (fun x -> x) charge in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "evidence" .show evidence in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "submit" string_of_bool submit in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Dispute.of_yojson) resp body

let post_charges_charge_dispute_close ~charge ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/charges/{charge}/dispute/close" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "charge" (fun x -> x) charge in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Dispute.of_yojson) resp body

let post_charges_charge_refund ~charge ?amount ?(expand = []) ?metadata ?payment_intent ?reason ?refund_application_fee ?reverse_transfer () =
    let open Lwt in
    let uri = Request.build_uri "/v1/charges/{charge}/refund" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "charge" (fun x -> x) charge in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "amount" Int32.to_string amount in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "payment_intent" (fun x -> x) payment_intent in
    let body = Request.maybe_add_form_encoded_body_param body "reason" Enums.show_inline_object_39_reason reason in
    let body = Request.maybe_add_form_encoded_body_param body "refund_application_fee" string_of_bool refund_application_fee in
    let body = Request.maybe_add_form_encoded_body_param body "reverse_transfer" string_of_bool reverse_transfer in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Charge.of_yojson) resp body

let post_charges_charge_refunds ~charge ?amount ?(expand = []) ?metadata ?payment_intent ?reason ?refund_application_fee ?reverse_transfer () =
    let open Lwt in
    let uri = Request.build_uri "/v1/charges/{charge}/refunds" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "charge" (fun x -> x) charge in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "amount" Int32.to_string amount in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "payment_intent" (fun x -> x) payment_intent in
    let body = Request.maybe_add_form_encoded_body_param body "reason" Enums.show_inline_object_39_reason reason in
    let body = Request.maybe_add_form_encoded_body_param body "refund_application_fee" string_of_bool refund_application_fee in
    let body = Request.maybe_add_form_encoded_body_param body "reverse_transfer" string_of_bool reverse_transfer in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Refund.of_yojson) resp body

let post_charges_charge_refunds_refund ~charge ~refund ?(expand = []) ?metadata () =
    let open Lwt in
    let uri = Request.build_uri "/v1/charges/{charge}/refunds/{refund}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "charge" (fun x -> x) charge in
    let uri = Request.replace_path_param uri "refund" (fun x -> x) refund in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Refund.of_yojson) resp body

let post_checkout_sessions ~cancel_url ~payment_method_types ~success_url ?allow_promotion_codes ?billing_address_collection ?client_reference_id ?customer ?customer_email ?(discounts = []) ?(expand = []) ?(line_items = []) ?locale ?mode ?payment_intent_data ?setup_intent_data ?shipping_address_collection ?submit_type ?subscription_data () =
    let open Lwt in
    let uri = Request.build_uri "/v1/checkout/sessions" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "allow_promotion_codes" string_of_bool allow_promotion_codes in
    let body = Request.maybe_add_form_encoded_body_param body "billing_address_collection" Enums.show_billing_address_collection billing_address_collection in
    let body = Request.add_form_encoded_body_param body "cancel_url" (fun x -> x) cancel_url in
    let body = Request.maybe_add_form_encoded_body_param body "client_reference_id" (fun x -> x) client_reference_id in
    let body = Request.maybe_add_form_encoded_body_param body "customer" (fun x -> x) customer in
    let body = Request.maybe_add_form_encoded_body_param body "customer_email" (fun x -> x) customer_email in
    let body = Request.add_form_encoded_body_param_list body "discounts" (List.map .show).show discounts in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.add_form_encoded_body_param_list body "line_items" (List.map .show).show line_items in
    let body = Request.maybe_add_form_encoded_body_param body "locale" Enums.show_locale locale in
    let body = Request.maybe_add_form_encoded_body_param body "mode" Enums.show_mode mode in
    let body = Request.maybe_add_form_encoded_body_param body "payment_intent_data" .show payment_intent_data in
    let body = Request.add_form_encoded_body_param_list body "payment_method_types" (List.map Enums.show_payment_method_types) payment_method_types in
    let body = Request.maybe_add_form_encoded_body_param body "setup_intent_data" .show setup_intent_data in
    let body = Request.maybe_add_form_encoded_body_param body "shipping_address_collection" .show shipping_address_collection in
    let body = Request.maybe_add_form_encoded_body_param body "submit_type" Enums.show_submit_type submit_type in
    let body = Request.maybe_add_form_encoded_body_param body "subscription_data" .show subscription_data in
    let body = Request.add_form_encoded_body_param body "success_url" (fun x -> x) success_url in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Checkout_session.of_yojson) resp body

let post_coupons ~duration ?amount_off ?applies_to ?currency ?duration_in_months ?(expand = []) ?id ?max_redemptions ?metadata ?name ?percent_off ?redeem_by () =
    let open Lwt in
    let uri = Request.build_uri "/v1/coupons" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "amount_off" Int32.to_string amount_off in
    let body = Request.maybe_add_form_encoded_body_param body "applies_to" .show applies_to in
    let body = Request.maybe_add_form_encoded_body_param body "currency" (fun x -> x) currency in
    let body = Request.add_form_encoded_body_param body "duration" Enums.show_duration duration in
    let body = Request.maybe_add_form_encoded_body_param body "duration_in_months" Int32.to_string duration_in_months in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "id" (fun x -> x) id in
    let body = Request.maybe_add_form_encoded_body_param body "max_redemptions" Int32.to_string max_redemptions in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "name" (fun x -> x) name in
    let body = Request.maybe_add_form_encoded_body_param body "percent_off" string_of_float percent_off in
    let body = Request.maybe_add_form_encoded_body_param body "redeem_by" Int32.to_string redeem_by in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Coupon.of_yojson) resp body

let post_coupons_coupon ~coupon ?(expand = []) ?metadata ?name () =
    let open Lwt in
    let uri = Request.build_uri "/v1/coupons/{coupon}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "coupon" (fun x -> x) coupon in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "name" (fun x -> x) name in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Coupon.of_yojson) resp body

let post_credit_notes ~invoice ?amount ?credit_amount ?(expand = []) ?(lines = []) ?memo ?out_of_band_amount ?reason ?refund ?refund_amount () =
    let open Lwt in
    let uri = Request.build_uri "/v1/credit_notes" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "amount" Int32.to_string amount in
    let body = Request.maybe_add_form_encoded_body_param body "credit_amount" Int32.to_string credit_amount in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.add_form_encoded_body_param body "invoice" (fun x -> x) invoice in
    let body = Request.add_form_encoded_body_param_list body "lines" (List.map .show).show lines in
    let body = Request.maybe_add_form_encoded_body_param body "memo" (fun x -> x) memo in
    let body = Request.maybe_add_form_encoded_body_param body "out_of_band_amount" Int32.to_string out_of_band_amount in
    let body = Request.maybe_add_form_encoded_body_param body "reason" Enums.show_reason reason in
    let body = Request.maybe_add_form_encoded_body_param body "refund" (fun x -> x) refund in
    let body = Request.maybe_add_form_encoded_body_param body "refund_amount" Int32.to_string refund_amount in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Credit_note.of_yojson) resp body

let post_credit_notes_id ~id ?(expand = []) ?memo () =
    let open Lwt in
    let uri = Request.build_uri "/v1/credit_notes/{id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "memo" (fun x -> x) memo in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Credit_note.of_yojson) resp body

let post_credit_notes_id_void ~id ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/credit_notes/{id}/void" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Credit_note.of_yojson) resp body

let post_customers ?address ?balance ?coupon ?description ?email ?(expand = []) ?invoice_prefix ?invoice_settings ?metadata ?name ?next_invoice_sequence ?payment_method ?phone ?(preferred_locales = []) ?promotion_code ?shipping ?source ?tax_exempt ?(tax_id_data = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/customers" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "address" .show address in
    let body = Request.maybe_add_form_encoded_body_param body "balance" Int32.to_string balance in
    let body = Request.maybe_add_form_encoded_body_param body "coupon" (fun x -> x) coupon in
    let body = Request.maybe_add_form_encoded_body_param body "description" (fun x -> x) description in
    let body = Request.maybe_add_form_encoded_body_param body "email" (fun x -> x) email in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "invoice_prefix" (fun x -> x) invoice_prefix in
    let body = Request.maybe_add_form_encoded_body_param body "invoice_settings" .show invoice_settings in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "name" (fun x -> x) name in
    let body = Request.maybe_add_form_encoded_body_param body "next_invoice_sequence" Int32.to_string next_invoice_sequence in
    let body = Request.maybe_add_form_encoded_body_param body "payment_method" (fun x -> x) payment_method in
    let body = Request.maybe_add_form_encoded_body_param body "phone" (fun x -> x) phone in
    let body = Request.add_form_encoded_body_param_list body "preferred_locales" (List.map (fun x -> x))(fun x -> x) preferred_locales in
    let body = Request.maybe_add_form_encoded_body_param body "promotion_code" (fun x -> x) promotion_code in
    let body = Request.maybe_add_form_encoded_body_param body "shipping" .show shipping in
    let body = Request.maybe_add_form_encoded_body_param body "source" (fun x -> x) source in
    let body = Request.maybe_add_form_encoded_body_param body "tax_exempt" Enums.show_tax_exempt tax_exempt in
    let body = Request.add_form_encoded_body_param_list body "tax_id_data" (List.map .show).show tax_id_data in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Customer.of_yojson) resp body

let post_customers_customer ~customer ?address ?balance ?bank_account ?card ?coupon ?default_alipay_account ?default_bank_account ?default_card ?default_source ?description ?email ?(expand = []) ?invoice_prefix ?invoice_settings ?metadata ?name ?next_invoice_sequence ?phone ?(preferred_locales = []) ?promotion_code ?shipping ?source ?tax_exempt ?trial_end () =
    let open Lwt in
    let uri = Request.build_uri "/v1/customers/{customer}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "customer" (fun x -> x) customer in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "address" .show address in
    let body = Request.maybe_add_form_encoded_body_param body "balance" Int32.to_string balance in
    let body = Request.maybe_add_form_encoded_body_param body "bank_account" .show bank_account in
    let body = Request.maybe_add_form_encoded_body_param body "card" .show card in
    let body = Request.maybe_add_form_encoded_body_param body "coupon" (fun x -> x) coupon in
    let body = Request.maybe_add_form_encoded_body_param body "default_alipay_account" (fun x -> x) default_alipay_account in
    let body = Request.maybe_add_form_encoded_body_param body "default_bank_account" (fun x -> x) default_bank_account in
    let body = Request.maybe_add_form_encoded_body_param body "default_card" (fun x -> x) default_card in
    let body = Request.maybe_add_form_encoded_body_param body "default_source" (fun x -> x) default_source in
    let body = Request.maybe_add_form_encoded_body_param body "description" (fun x -> x) description in
    let body = Request.maybe_add_form_encoded_body_param body "email" (fun x -> x) email in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "invoice_prefix" (fun x -> x) invoice_prefix in
    let body = Request.maybe_add_form_encoded_body_param body "invoice_settings" .show invoice_settings in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "name" (fun x -> x) name in
    let body = Request.maybe_add_form_encoded_body_param body "next_invoice_sequence" Int32.to_string next_invoice_sequence in
    let body = Request.maybe_add_form_encoded_body_param body "phone" (fun x -> x) phone in
    let body = Request.add_form_encoded_body_param_list body "preferred_locales" (List.map (fun x -> x))(fun x -> x) preferred_locales in
    let body = Request.maybe_add_form_encoded_body_param body "promotion_code" (fun x -> x) promotion_code in
    let body = Request.maybe_add_form_encoded_body_param body "shipping" .show shipping in
    let body = Request.maybe_add_form_encoded_body_param body "source" (fun x -> x) source in
    let body = Request.maybe_add_form_encoded_body_param body "tax_exempt" Enums.show_tax_exempt tax_exempt in
    let body = Request.maybe_add_form_encoded_body_param body "trial_end" .show trial_end in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Customer.of_yojson) resp body

let post_customers_customer_balance_transactions ~customer ~amount ~currency ?description ?(expand = []) ?metadata () =
    let open Lwt in
    let uri = Request.build_uri "/v1/customers/{customer}/balance_transactions" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "customer" (fun x -> x) customer in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param body "amount" Int32.to_string amount in
    let body = Request.add_form_encoded_body_param body "currency" (fun x -> x) currency in
    let body = Request.maybe_add_form_encoded_body_param body "description" (fun x -> x) description in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Customer_balance_transaction.of_yojson) resp body

let post_customers_customer_balance_transactions_transaction ~customer ~transaction ?description ?(expand = []) ?metadata () =
    let open Lwt in
    let uri = Request.build_uri "/v1/customers/{customer}/balance_transactions/{transaction}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "customer" (fun x -> x) customer in
    let uri = Request.replace_path_param uri "transaction" (fun x -> x) transaction in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "description" (fun x -> x) description in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Customer_balance_transaction.of_yojson) resp body

let post_customers_customer_bank_accounts ~customer ?alipay_account ?bank_account ?card ?(expand = []) ?source () =
    let open Lwt in
    let uri = Request.build_uri "/v1/customers/{customer}/bank_accounts" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "customer" (fun x -> x) customer in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "alipay_account" (fun x -> x) alipay_account in
    let body = Request.maybe_add_form_encoded_body_param body "bank_account" .show bank_account in
    let body = Request.maybe_add_form_encoded_body_param body "card" .show card in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "source" (fun x -> x) source in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Payment_source.of_yojson) resp body

let post_customers_customer_bank_accounts_id ~customer ~id ?account_holder_name ?account_holder_type ?address_city ?address_country ?address_line1 ?address_line2 ?address_state ?address_zip ?exp_month ?exp_year ?(expand = []) ?metadata ?name ?owner () =
    let open Lwt in
    let uri = Request.build_uri "/v1/customers/{customer}/bank_accounts/{id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "customer" (fun x -> x) customer in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "account_holder_name" (fun x -> x) account_holder_name in
    let body = Request.maybe_add_form_encoded_body_param body "account_holder_type" Enums.show_issuing_cardholder_type account_holder_type in
    let body = Request.maybe_add_form_encoded_body_param body "address_city" (fun x -> x) address_city in
    let body = Request.maybe_add_form_encoded_body_param body "address_country" (fun x -> x) address_country in
    let body = Request.maybe_add_form_encoded_body_param body "address_line1" (fun x -> x) address_line1 in
    let body = Request.maybe_add_form_encoded_body_param body "address_line2" (fun x -> x) address_line2 in
    let body = Request.maybe_add_form_encoded_body_param body "address_state" (fun x -> x) address_state in
    let body = Request.maybe_add_form_encoded_body_param body "address_zip" (fun x -> x) address_zip in
    let body = Request.maybe_add_form_encoded_body_param body "exp_month" (fun x -> x) exp_month in
    let body = Request.maybe_add_form_encoded_body_param body "exp_year" (fun x -> x) exp_year in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "name" (fun x -> x) name in
    let body = Request.maybe_add_form_encoded_body_param body "owner" .show owner in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Any_ofcardbank_accountsource.of_yojson) resp body

let post_customers_customer_bank_accounts_id_verify ~customer ~id ?(amounts = []) ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/customers/{customer}/bank_accounts/{id}/verify" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "customer" (fun x -> x) customer in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "amounts" (List.map Int32.to_string)Int32.to_string amounts in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Bank_account.of_yojson) resp body

let post_customers_customer_cards ~customer ?alipay_account ?bank_account ?card ?(expand = []) ?source () =
    let open Lwt in
    let uri = Request.build_uri "/v1/customers/{customer}/cards" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "customer" (fun x -> x) customer in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "alipay_account" (fun x -> x) alipay_account in
    let body = Request.maybe_add_form_encoded_body_param body "bank_account" .show bank_account in
    let body = Request.maybe_add_form_encoded_body_param body "card" .show card in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "source" (fun x -> x) source in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Payment_source.of_yojson) resp body

let post_customers_customer_cards_id ~customer ~id ?account_holder_name ?account_holder_type ?address_city ?address_country ?address_line1 ?address_line2 ?address_state ?address_zip ?exp_month ?exp_year ?(expand = []) ?metadata ?name ?owner () =
    let open Lwt in
    let uri = Request.build_uri "/v1/customers/{customer}/cards/{id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "customer" (fun x -> x) customer in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "account_holder_name" (fun x -> x) account_holder_name in
    let body = Request.maybe_add_form_encoded_body_param body "account_holder_type" Enums.show_issuing_cardholder_type account_holder_type in
    let body = Request.maybe_add_form_encoded_body_param body "address_city" (fun x -> x) address_city in
    let body = Request.maybe_add_form_encoded_body_param body "address_country" (fun x -> x) address_country in
    let body = Request.maybe_add_form_encoded_body_param body "address_line1" (fun x -> x) address_line1 in
    let body = Request.maybe_add_form_encoded_body_param body "address_line2" (fun x -> x) address_line2 in
    let body = Request.maybe_add_form_encoded_body_param body "address_state" (fun x -> x) address_state in
    let body = Request.maybe_add_form_encoded_body_param body "address_zip" (fun x -> x) address_zip in
    let body = Request.maybe_add_form_encoded_body_param body "exp_month" (fun x -> x) exp_month in
    let body = Request.maybe_add_form_encoded_body_param body "exp_year" (fun x -> x) exp_year in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "name" (fun x -> x) name in
    let body = Request.maybe_add_form_encoded_body_param body "owner" .show owner in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Any_ofcardbank_accountsource.of_yojson) resp body

let post_customers_customer_sources ~customer ?alipay_account ?bank_account ?card ?(expand = []) ?source () =
    let open Lwt in
    let uri = Request.build_uri "/v1/customers/{customer}/sources" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "customer" (fun x -> x) customer in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "alipay_account" (fun x -> x) alipay_account in
    let body = Request.maybe_add_form_encoded_body_param body "bank_account" .show bank_account in
    let body = Request.maybe_add_form_encoded_body_param body "card" .show card in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "source" (fun x -> x) source in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Payment_source.of_yojson) resp body

let post_customers_customer_sources_id ~customer ~id ?account_holder_name ?account_holder_type ?address_city ?address_country ?address_line1 ?address_line2 ?address_state ?address_zip ?exp_month ?exp_year ?(expand = []) ?metadata ?name ?owner () =
    let open Lwt in
    let uri = Request.build_uri "/v1/customers/{customer}/sources/{id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "customer" (fun x -> x) customer in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "account_holder_name" (fun x -> x) account_holder_name in
    let body = Request.maybe_add_form_encoded_body_param body "account_holder_type" Enums.show_issuing_cardholder_type account_holder_type in
    let body = Request.maybe_add_form_encoded_body_param body "address_city" (fun x -> x) address_city in
    let body = Request.maybe_add_form_encoded_body_param body "address_country" (fun x -> x) address_country in
    let body = Request.maybe_add_form_encoded_body_param body "address_line1" (fun x -> x) address_line1 in
    let body = Request.maybe_add_form_encoded_body_param body "address_line2" (fun x -> x) address_line2 in
    let body = Request.maybe_add_form_encoded_body_param body "address_state" (fun x -> x) address_state in
    let body = Request.maybe_add_form_encoded_body_param body "address_zip" (fun x -> x) address_zip in
    let body = Request.maybe_add_form_encoded_body_param body "exp_month" (fun x -> x) exp_month in
    let body = Request.maybe_add_form_encoded_body_param body "exp_year" (fun x -> x) exp_year in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "name" (fun x -> x) name in
    let body = Request.maybe_add_form_encoded_body_param body "owner" .show owner in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Any_ofcardbank_accountsource.of_yojson) resp body

let post_customers_customer_sources_id_verify ~customer ~id ?(amounts = []) ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/customers/{customer}/sources/{id}/verify" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "customer" (fun x -> x) customer in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "amounts" (List.map Int32.to_string)Int32.to_string amounts in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Bank_account.of_yojson) resp body

let post_customers_customer_subscriptions ~customer ?(add_invoice_items = []) ?application_fee_percent ?backdate_start_date ?billing_cycle_anchor ?billing_thresholds ?cancel_at ?cancel_at_period_end ?collection_method ?coupon ?days_until_due ?default_payment_method ?default_source ?default_tax_rates ?(expand = []) ?(items = []) ?metadata ?off_session ?payment_behavior ?pending_invoice_item_interval ?promotion_code ?proration_behavior ?transfer_data ?trial_end ?trial_from_plan ?trial_period_days () =
    let open Lwt in
    let uri = Request.build_uri "/v1/customers/{customer}/subscriptions" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "customer" (fun x -> x) customer in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "add_invoice_items" (List.map .show).show add_invoice_items in
    let body = Request.maybe_add_form_encoded_body_param body "application_fee_percent" string_of_float application_fee_percent in
    let body = Request.maybe_add_form_encoded_body_param body "backdate_start_date" Int32.to_string backdate_start_date in
    let body = Request.maybe_add_form_encoded_body_param body "billing_cycle_anchor" Int32.to_string billing_cycle_anchor in
    let body = Request.maybe_add_form_encoded_body_param body "billing_thresholds" .show billing_thresholds in
    let body = Request.maybe_add_form_encoded_body_param body "cancel_at" Int32.to_string cancel_at in
    let body = Request.maybe_add_form_encoded_body_param body "cancel_at_period_end" string_of_bool cancel_at_period_end in
    let body = Request.maybe_add_form_encoded_body_param body "collection_method" Enums.show_collection_method collection_method in
    let body = Request.maybe_add_form_encoded_body_param body "coupon" (fun x -> x) coupon in
    let body = Request.maybe_add_form_encoded_body_param body "days_until_due" Int32.to_string days_until_due in
    let body = Request.maybe_add_form_encoded_body_param body "default_payment_method" (fun x -> x) default_payment_method in
    let body = Request.maybe_add_form_encoded_body_param body "default_source" (fun x -> x) default_source in
    let body = Request.maybe_add_form_encoded_body_param body "default_tax_rates" .show default_tax_rates in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.add_form_encoded_body_param_list body "items" (List.map .show).show items in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "off_session" string_of_bool off_session in
    let body = Request.maybe_add_form_encoded_body_param body "payment_behavior" Enums.show_payment_behavior payment_behavior in
    let body = Request.maybe_add_form_encoded_body_param body "pending_invoice_item_interval" .show pending_invoice_item_interval in
    let body = Request.maybe_add_form_encoded_body_param body "promotion_code" (fun x -> x) promotion_code in
    let body = Request.maybe_add_form_encoded_body_param body "proration_behavior" Enums.show_proration_behavior proration_behavior in
    let body = Request.maybe_add_form_encoded_body_param body "transfer_data" .show transfer_data in
    let body = Request.maybe_add_form_encoded_body_param body "trial_end" .show trial_end in
    let body = Request.maybe_add_form_encoded_body_param body "trial_from_plan" string_of_bool trial_from_plan in
    let body = Request.maybe_add_form_encoded_body_param body "trial_period_days" Int32.to_string trial_period_days in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Subscription.of_yojson) resp body

let post_customers_customer_subscriptions_subscription_exposed_id ~customer ~subscription_exposed_id ?(add_invoice_items = []) ?application_fee_percent ?billing_cycle_anchor ?billing_thresholds ?cancel_at ?cancel_at_period_end ?collection_method ?coupon ?days_until_due ?default_payment_method ?default_source ?default_tax_rates ?(expand = []) ?(items = []) ?metadata ?off_session ?pause_collection ?payment_behavior ?pending_invoice_item_interval ?promotion_code ?proration_behavior ?proration_date ?transfer_data ?trial_end ?trial_from_plan () =
    let open Lwt in
    let uri = Request.build_uri "/v1/customers/{customer}/subscriptions/{subscription_exposed_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "customer" (fun x -> x) customer in
    let uri = Request.replace_path_param uri "subscription_exposed_id" (fun x -> x) subscription_exposed_id in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "add_invoice_items" (List.map .show).show add_invoice_items in
    let body = Request.maybe_add_form_encoded_body_param body "application_fee_percent" string_of_float application_fee_percent in
    let body = Request.maybe_add_form_encoded_body_param body "billing_cycle_anchor" Enums.show_inline_object_64_billing_cycle_anchor billing_cycle_anchor in
    let body = Request.maybe_add_form_encoded_body_param body "billing_thresholds" .show billing_thresholds in
    let body = Request.maybe_add_form_encoded_body_param body "cancel_at" .show cancel_at in
    let body = Request.maybe_add_form_encoded_body_param body "cancel_at_period_end" string_of_bool cancel_at_period_end in
    let body = Request.maybe_add_form_encoded_body_param body "collection_method" Enums.show_collection_method collection_method in
    let body = Request.maybe_add_form_encoded_body_param body "coupon" (fun x -> x) coupon in
    let body = Request.maybe_add_form_encoded_body_param body "days_until_due" Int32.to_string days_until_due in
    let body = Request.maybe_add_form_encoded_body_param body "default_payment_method" (fun x -> x) default_payment_method in
    let body = Request.maybe_add_form_encoded_body_param body "default_source" (fun x -> x) default_source in
    let body = Request.maybe_add_form_encoded_body_param body "default_tax_rates" .show default_tax_rates in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.add_form_encoded_body_param_list body "items" (List.map .show).show items in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "off_session" string_of_bool off_session in
    let body = Request.maybe_add_form_encoded_body_param body "pause_collection" .show pause_collection in
    let body = Request.maybe_add_form_encoded_body_param body "payment_behavior" Enums.show_payment_behavior payment_behavior in
    let body = Request.maybe_add_form_encoded_body_param body "pending_invoice_item_interval" .show pending_invoice_item_interval in
    let body = Request.maybe_add_form_encoded_body_param body "promotion_code" (fun x -> x) promotion_code in
    let body = Request.maybe_add_form_encoded_body_param body "proration_behavior" Enums.show_proration_behavior proration_behavior in
    let body = Request.maybe_add_form_encoded_body_param body "proration_date" Int32.to_string proration_date in
    let body = Request.maybe_add_form_encoded_body_param body "transfer_data" .show transfer_data in
    let body = Request.maybe_add_form_encoded_body_param body "trial_end" .show trial_end in
    let body = Request.maybe_add_form_encoded_body_param body "trial_from_plan" string_of_bool trial_from_plan in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Subscription.of_yojson) resp body

let post_customers_customer_tax_ids ~customer ~_type ~value ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/customers/{customer}/tax_ids" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "customer" (fun x -> x) customer in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.add_form_encoded_body_param body "_type" Enums.show_data_params_type _type in
    let body = Request.add_form_encoded_body_param body "value" (fun x -> x) value in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Tax_id.of_yojson) resp body

let post_disputes_dispute ~dispute ?evidence ?(expand = []) ?metadata ?submit () =
    let open Lwt in
    let uri = Request.build_uri "/v1/disputes/{dispute}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "dispute" (fun x -> x) dispute in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "evidence" .show evidence in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "submit" string_of_bool submit in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Dispute.of_yojson) resp body

let post_disputes_dispute_close ~dispute ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/disputes/{dispute}/close" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "dispute" (fun x -> x) dispute in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Dispute.of_yojson) resp body

let post_ephemeral_keys ?customer ?(expand = []) ?issuing_card () =
    let open Lwt in
    let uri = Request.build_uri "/v1/ephemeral_keys" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "customer" (fun x -> x) customer in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "issuing_card" (fun x -> x) issuing_card in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Ephemeral_key.of_yojson) resp body

let post_file_links ~file ?(expand = []) ?expires_at ?metadata () =
    let open Lwt in
    let uri = Request.build_uri "/v1/file_links" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "expires_at" Int32.to_string expires_at in
    let body = Request.add_form_encoded_body_param body "file" (fun x -> x) file in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap File_link.of_yojson) resp body

let post_file_links_link ~link ?(expand = []) ?expires_at ?metadata () =
    let open Lwt in
    let uri = Request.build_uri "/v1/file_links/{link}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "link" (fun x -> x) link in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "expires_at" .show expires_at in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap File_link.of_yojson) resp body

let post_files ~file ~purpose ?(expand = []) ?file_link_data () =
    let open Lwt in
    let uri = Request.build_uri "/v1/files" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.add_form_encoded_body_param body "file" (fun x -> x) file in
    let body = Request.maybe_add_form_encoded_body_param body "file_link_data" .show file_link_data in
    let body = Request.add_form_encoded_body_param body "purpose" Enums.show_file_purpose purpose in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.to_string) resp body

let post_invoiceitems ~customer ?amount ?currency ?description ?discountable ?discounts ?(expand = []) ?invoice ?metadata ?period ?price ?price_data ?quantity ?subscription ?(tax_rates = []) ?unit_amount ?unit_amount_decimal () =
    let open Lwt in
    let uri = Request.build_uri "/v1/invoiceitems" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "amount" Int32.to_string amount in
    let body = Request.maybe_add_form_encoded_body_param body "currency" (fun x -> x) currency in
    let body = Request.add_form_encoded_body_param body "customer" (fun x -> x) customer in
    let body = Request.maybe_add_form_encoded_body_param body "description" (fun x -> x) description in
    let body = Request.maybe_add_form_encoded_body_param body "discountable" string_of_bool discountable in
    let body = Request.maybe_add_form_encoded_body_param body "discounts" .show discounts in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "invoice" (fun x -> x) invoice in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "period" .show period in
    let body = Request.maybe_add_form_encoded_body_param body "price" (fun x -> x) price in
    let body = Request.maybe_add_form_encoded_body_param body "price_data" .show price_data in
    let body = Request.maybe_add_form_encoded_body_param body "quantity" Int32.to_string quantity in
    let body = Request.maybe_add_form_encoded_body_param body "subscription" (fun x -> x) subscription in
    let body = Request.add_form_encoded_body_param_list body "tax_rates" (List.map (fun x -> x))(fun x -> x) tax_rates in
    let body = Request.maybe_add_form_encoded_body_param body "unit_amount" Int32.to_string unit_amount in
    let body = Request.maybe_add_form_encoded_body_param body "unit_amount_decimal" (fun x -> x) unit_amount_decimal in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Invoiceitem.of_yojson) resp body

let post_invoiceitems_invoiceitem ~invoiceitem ?amount ?description ?discountable ?discounts ?(expand = []) ?metadata ?period ?price ?price_data ?quantity ?tax_rates ?unit_amount ?unit_amount_decimal () =
    let open Lwt in
    let uri = Request.build_uri "/v1/invoiceitems/{invoiceitem}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "invoiceitem" (fun x -> x) invoiceitem in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "amount" Int32.to_string amount in
    let body = Request.maybe_add_form_encoded_body_param body "description" (fun x -> x) description in
    let body = Request.maybe_add_form_encoded_body_param body "discountable" string_of_bool discountable in
    let body = Request.maybe_add_form_encoded_body_param body "discounts" .show discounts in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "period" .show period in
    let body = Request.maybe_add_form_encoded_body_param body "price" (fun x -> x) price in
    let body = Request.maybe_add_form_encoded_body_param body "price_data" .show price_data in
    let body = Request.maybe_add_form_encoded_body_param body "quantity" Int32.to_string quantity in
    let body = Request.maybe_add_form_encoded_body_param body "tax_rates" .show tax_rates in
    let body = Request.maybe_add_form_encoded_body_param body "unit_amount" Int32.to_string unit_amount in
    let body = Request.maybe_add_form_encoded_body_param body "unit_amount_decimal" (fun x -> x) unit_amount_decimal in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Invoiceitem.of_yojson) resp body

let post_invoices ~customer ?account_tax_ids ?application_fee_amount ?auto_advance ?collection_method ?custom_fields ?days_until_due ?default_payment_method ?default_source ?(default_tax_rates = []) ?description ?discounts ?due_date ?(expand = []) ?footer ?metadata ?statement_descriptor ?subscription ?transfer_data () =
    let open Lwt in
    let uri = Request.build_uri "/v1/invoices" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "account_tax_ids" .show account_tax_ids in
    let body = Request.maybe_add_form_encoded_body_param body "application_fee_amount" Int32.to_string application_fee_amount in
    let body = Request.maybe_add_form_encoded_body_param body "auto_advance" string_of_bool auto_advance in
    let body = Request.maybe_add_form_encoded_body_param body "collection_method" Enums.show_collection_method collection_method in
    let body = Request.maybe_add_form_encoded_body_param body "custom_fields" .show custom_fields in
    let body = Request.add_form_encoded_body_param body "customer" (fun x -> x) customer in
    let body = Request.maybe_add_form_encoded_body_param body "days_until_due" Int32.to_string days_until_due in
    let body = Request.maybe_add_form_encoded_body_param body "default_payment_method" (fun x -> x) default_payment_method in
    let body = Request.maybe_add_form_encoded_body_param body "default_source" (fun x -> x) default_source in
    let body = Request.add_form_encoded_body_param_list body "default_tax_rates" (List.map (fun x -> x))(fun x -> x) default_tax_rates in
    let body = Request.maybe_add_form_encoded_body_param body "description" (fun x -> x) description in
    let body = Request.maybe_add_form_encoded_body_param body "discounts" .show discounts in
    let body = Request.maybe_add_form_encoded_body_param body "due_date" Int32.to_string due_date in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "footer" (fun x -> x) footer in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "statement_descriptor" (fun x -> x) statement_descriptor in
    let body = Request.maybe_add_form_encoded_body_param body "subscription" (fun x -> x) subscription in
    let body = Request.maybe_add_form_encoded_body_param body "transfer_data" .show transfer_data in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Invoice.of_yojson) resp body

let post_invoices_invoice ~invoice ?account_tax_ids ?application_fee_amount ?auto_advance ?collection_method ?custom_fields ?days_until_due ?default_payment_method ?default_source ?default_tax_rates ?description ?discounts ?due_date ?(expand = []) ?footer ?metadata ?statement_descriptor ?transfer_data () =
    let open Lwt in
    let uri = Request.build_uri "/v1/invoices/{invoice}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "invoice" (fun x -> x) invoice in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "account_tax_ids" .show account_tax_ids in
    let body = Request.maybe_add_form_encoded_body_param body "application_fee_amount" Int32.to_string application_fee_amount in
    let body = Request.maybe_add_form_encoded_body_param body "auto_advance" string_of_bool auto_advance in
    let body = Request.maybe_add_form_encoded_body_param body "collection_method" Enums.show_collection_method collection_method in
    let body = Request.maybe_add_form_encoded_body_param body "custom_fields" .show custom_fields in
    let body = Request.maybe_add_form_encoded_body_param body "days_until_due" Int32.to_string days_until_due in
    let body = Request.maybe_add_form_encoded_body_param body "default_payment_method" (fun x -> x) default_payment_method in
    let body = Request.maybe_add_form_encoded_body_param body "default_source" (fun x -> x) default_source in
    let body = Request.maybe_add_form_encoded_body_param body "default_tax_rates" .show default_tax_rates in
    let body = Request.maybe_add_form_encoded_body_param body "description" (fun x -> x) description in
    let body = Request.maybe_add_form_encoded_body_param body "discounts" .show discounts in
    let body = Request.maybe_add_form_encoded_body_param body "due_date" Int32.to_string due_date in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "footer" (fun x -> x) footer in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "statement_descriptor" (fun x -> x) statement_descriptor in
    let body = Request.maybe_add_form_encoded_body_param body "transfer_data" .show transfer_data in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Invoice.of_yojson) resp body

let post_invoices_invoice_finalize ~invoice ?auto_advance ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/invoices/{invoice}/finalize" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "invoice" (fun x -> x) invoice in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "auto_advance" string_of_bool auto_advance in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Invoice.of_yojson) resp body

let post_invoices_invoice_mark_uncollectible ~invoice ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/invoices/{invoice}/mark_uncollectible" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "invoice" (fun x -> x) invoice in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Invoice.of_yojson) resp body

let post_invoices_invoice_pay ~invoice ?(expand = []) ?forgive ?off_session ?paid_out_of_band ?payment_method ?source () =
    let open Lwt in
    let uri = Request.build_uri "/v1/invoices/{invoice}/pay" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "invoice" (fun x -> x) invoice in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "forgive" string_of_bool forgive in
    let body = Request.maybe_add_form_encoded_body_param body "off_session" string_of_bool off_session in
    let body = Request.maybe_add_form_encoded_body_param body "paid_out_of_band" string_of_bool paid_out_of_band in
    let body = Request.maybe_add_form_encoded_body_param body "payment_method" (fun x -> x) payment_method in
    let body = Request.maybe_add_form_encoded_body_param body "source" (fun x -> x) source in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Invoice.of_yojson) resp body

let post_invoices_invoice_send ~invoice ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/invoices/{invoice}/send" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "invoice" (fun x -> x) invoice in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Invoice.of_yojson) resp body

let post_invoices_invoice_void ~invoice ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/invoices/{invoice}/void" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "invoice" (fun x -> x) invoice in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Invoice.of_yojson) resp body

let post_issuing_authorizations_authorization ~authorization ?(expand = []) ?metadata () =
    let open Lwt in
    let uri = Request.build_uri "/v1/issuing/authorizations/{authorization}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "authorization" (fun x -> x) authorization in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Issuing_authorization.of_yojson) resp body

let post_issuing_authorizations_authorization_approve ~authorization ?amount ?(expand = []) ?metadata () =
    let open Lwt in
    let uri = Request.build_uri "/v1/issuing/authorizations/{authorization}/approve" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "authorization" (fun x -> x) authorization in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "amount" Int32.to_string amount in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Issuing_authorization.of_yojson) resp body

let post_issuing_authorizations_authorization_decline ~authorization ?(expand = []) ?metadata () =
    let open Lwt in
    let uri = Request.build_uri "/v1/issuing/authorizations/{authorization}/decline" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "authorization" (fun x -> x) authorization in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Issuing_authorization.of_yojson) resp body

let post_issuing_cardholders ~billing ~name ~_type ?company ?email ?(expand = []) ?individual ?phone_number ?spending_controls ?status () =
    let open Lwt in
    let uri = Request.build_uri "/v1/issuing/cardholders" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param body "billing" .show billing in
    let body = Request.maybe_add_form_encoded_body_param body "company" .show company in
    let body = Request.maybe_add_form_encoded_body_param body "email" (fun x -> x) email in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "individual" .show individual in
    let body = Request.add_form_encoded_body_param body "name" (fun x -> x) name in
    let body = Request.maybe_add_form_encoded_body_param body "phone_number" (fun x -> x) phone_number in
    let body = Request.maybe_add_form_encoded_body_param body "spending_controls" .show spending_controls in
    let body = Request.maybe_add_form_encoded_body_param body "status" Enums.show_inline_object_86_status status in
    let body = Request.add_form_encoded_body_param body "_type" Enums.show_issuing_cardholder_type _type in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Issuing_cardholder.of_yojson) resp body

let post_issuing_cardholders_cardholder ~cardholder ?billing ?company ?email ?(expand = []) ?individual ?phone_number ?spending_controls ?status () =
    let open Lwt in
    let uri = Request.build_uri "/v1/issuing/cardholders/{cardholder}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "cardholder" (fun x -> x) cardholder in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "billing" .show billing in
    let body = Request.maybe_add_form_encoded_body_param body "company" .show company in
    let body = Request.maybe_add_form_encoded_body_param body "email" (fun x -> x) email in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "individual" .show individual in
    let body = Request.maybe_add_form_encoded_body_param body "phone_number" (fun x -> x) phone_number in
    let body = Request.maybe_add_form_encoded_body_param body "spending_controls" .show spending_controls in
    let body = Request.maybe_add_form_encoded_body_param body "status" Enums.show_inline_object_86_status status in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Issuing_cardholder.of_yojson) resp body

let post_issuing_cards ~currency ~_type ?cardholder ?(expand = []) ?replacement_for ?replacement_reason ?shipping ?spending_controls ?status () =
    let open Lwt in
    let uri = Request.build_uri "/v1/issuing/cards" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "cardholder" (fun x -> x) cardholder in
    let body = Request.add_form_encoded_body_param body "currency" (fun x -> x) currency in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "replacement_for" (fun x -> x) replacement_for in
    let body = Request.maybe_add_form_encoded_body_param body "replacement_reason" Enums.show_replacement_reason replacement_reason in
    let body = Request.maybe_add_form_encoded_body_param body "shipping" .show shipping in
    let body = Request.maybe_add_form_encoded_body_param body "spending_controls" .show spending_controls in
    let body = Request.maybe_add_form_encoded_body_param body "status" Enums.show_inline_object_86_status status in
    let body = Request.add_form_encoded_body_param body "_type" Enums.show_issuing_card_type _type in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Issuing_card.of_yojson) resp body

let post_issuing_cards_card ~card ?cancellation_reason ?(expand = []) ?metadata ?spending_controls ?status () =
    let open Lwt in
    let uri = Request.build_uri "/v1/issuing/cards/{card}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "card" (fun x -> x) card in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "cancellation_reason" Enums.show_issuing_card_cancellation_reason cancellation_reason in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "spending_controls" .show spending_controls in
    let body = Request.maybe_add_form_encoded_body_param body "status" Enums.show_issuing_card_status status in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Issuing_card.of_yojson) resp body

let post_issuing_disputes ~transaction ?evidence ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/issuing/disputes" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "evidence" .show evidence in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.add_form_encoded_body_param body "transaction" (fun x -> x) transaction in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Issuing_dispute.of_yojson) resp body

let post_issuing_disputes_dispute ~dispute ?evidence ?(expand = []) ?metadata () =
    let open Lwt in
    let uri = Request.build_uri "/v1/issuing/disputes/{dispute}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "dispute" (fun x -> x) dispute in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "evidence" .show evidence in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Issuing_dispute.of_yojson) resp body

let post_issuing_disputes_dispute_submit ~dispute ?(expand = []) ?metadata () =
    let open Lwt in
    let uri = Request.build_uri "/v1/issuing/disputes/{dispute}/submit" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "dispute" (fun x -> x) dispute in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Issuing_dispute.of_yojson) resp body

let post_issuing_settlements_settlement ~settlement ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/issuing/settlements/{settlement}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "settlement" (fun x -> x) settlement in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Issuing_settlement.of_yojson) resp body

let post_issuing_transactions_transaction ~transaction ?(expand = []) ?metadata () =
    let open Lwt in
    let uri = Request.build_uri "/v1/issuing/transactions/{transaction}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "transaction" (fun x -> x) transaction in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Issuing_transaction.of_yojson) resp body

let post_orders ~currency ?coupon ?customer ?email ?(expand = []) ?(items = []) ?shipping () =
    let open Lwt in
    let uri = Request.build_uri "/v1/orders" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "coupon" (fun x -> x) coupon in
    let body = Request.add_form_encoded_body_param body "currency" (fun x -> x) currency in
    let body = Request.maybe_add_form_encoded_body_param body "customer" (fun x -> x) customer in
    let body = Request.maybe_add_form_encoded_body_param body "email" (fun x -> x) email in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.add_form_encoded_body_param_list body "items" (List.map .show).show items in
    let body = Request.maybe_add_form_encoded_body_param body "shipping" .show shipping in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Order.of_yojson) resp body

let post_orders_id ~id ?coupon ?(expand = []) ?metadata ?selected_shipping_method ?shipping ?status () =
    let open Lwt in
    let uri = Request.build_uri "/v1/orders/{id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "coupon" (fun x -> x) coupon in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "selected_shipping_method" (fun x -> x) selected_shipping_method in
    let body = Request.maybe_add_form_encoded_body_param body "shipping" .show shipping in
    let body = Request.maybe_add_form_encoded_body_param body "status" Enums.show_inline_object_96_status status in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Order.of_yojson) resp body

let post_orders_id_pay ~id ?application_fee ?customer ?email ?(expand = []) ?source () =
    let open Lwt in
    let uri = Request.build_uri "/v1/orders/{id}/pay" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "application_fee" Int32.to_string application_fee in
    let body = Request.maybe_add_form_encoded_body_param body "customer" (fun x -> x) customer in
    let body = Request.maybe_add_form_encoded_body_param body "email" (fun x -> x) email in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "source" (fun x -> x) source in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Order.of_yojson) resp body

let post_orders_id_returns ~id ?(expand = []) ?items () =
    let open Lwt in
    let uri = Request.build_uri "/v1/orders/{id}/returns" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "items" .show items in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Order_return.of_yojson) resp body

let post_payment_intents ~amount ~currency ?application_fee_amount ?capture_method ?confirm ?confirmation_method ?customer ?description ?error_on_requires_action ?(expand = []) ?mandate ?mandate_data ?off_session ?on_behalf_of ?payment_method ?payment_method_data ?payment_method_options ?(payment_method_types = []) ?receipt_email ?return_url ?setup_future_usage ?shipping ?statement_descriptor ?statement_descriptor_suffix ?transfer_data ?transfer_group ?use_stripe_sdk () =
    let open Lwt in
    let uri = Request.build_uri "/v1/payment_intents" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param body "amount" Int32.to_string amount in
    let body = Request.maybe_add_form_encoded_body_param body "application_fee_amount" Int32.to_string application_fee_amount in
    let body = Request.maybe_add_form_encoded_body_param body "capture_method" Enums.show_capture_method capture_method in
    let body = Request.maybe_add_form_encoded_body_param body "confirm" string_of_bool confirm in
    let body = Request.maybe_add_form_encoded_body_param body "confirmation_method" Enums.show_capture_method confirmation_method in
    let body = Request.add_form_encoded_body_param body "currency" (fun x -> x) currency in
    let body = Request.maybe_add_form_encoded_body_param body "customer" (fun x -> x) customer in
    let body = Request.maybe_add_form_encoded_body_param body "description" (fun x -> x) description in
    let body = Request.maybe_add_form_encoded_body_param body "error_on_requires_action" string_of_bool error_on_requires_action in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "mandate" (fun x -> x) mandate in
    let body = Request.maybe_add_form_encoded_body_param body "mandate_data" .show mandate_data in
    let body = Request.maybe_add_form_encoded_body_param body "off_session" .show off_session in
    let body = Request.maybe_add_form_encoded_body_param body "on_behalf_of" (fun x -> x) on_behalf_of in
    let body = Request.maybe_add_form_encoded_body_param body "payment_method" (fun x -> x) payment_method in
    let body = Request.maybe_add_form_encoded_body_param body "payment_method_data" .show payment_method_data in
    let body = Request.maybe_add_form_encoded_body_param body "payment_method_options" .show payment_method_options in
    let body = Request.add_form_encoded_body_param_list body "payment_method_types" (List.map (fun x -> x))(fun x -> x) payment_method_types in
    let body = Request.maybe_add_form_encoded_body_param body "receipt_email" (fun x -> x) receipt_email in
    let body = Request.maybe_add_form_encoded_body_param body "return_url" (fun x -> x) return_url in
    let body = Request.maybe_add_form_encoded_body_param body "setup_future_usage" Enums.show_payment_intent_setup_future_usage setup_future_usage in
    let body = Request.maybe_add_form_encoded_body_param body "shipping" .show shipping in
    let body = Request.maybe_add_form_encoded_body_param body "statement_descriptor" (fun x -> x) statement_descriptor in
    let body = Request.maybe_add_form_encoded_body_param body "statement_descriptor_suffix" (fun x -> x) statement_descriptor_suffix in
    let body = Request.maybe_add_form_encoded_body_param body "transfer_data" .show transfer_data in
    let body = Request.maybe_add_form_encoded_body_param body "transfer_group" (fun x -> x) transfer_group in
    let body = Request.maybe_add_form_encoded_body_param body "use_stripe_sdk" string_of_bool use_stripe_sdk in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Payment_intent.of_yojson) resp body

let post_payment_intents_intent ~intent ?amount ?application_fee_amount ?currency ?customer ?description ?(expand = []) ?metadata ?payment_method ?payment_method_data ?payment_method_options ?(payment_method_types = []) ?receipt_email ?setup_future_usage ?shipping ?statement_descriptor ?statement_descriptor_suffix ?transfer_data ?transfer_group () =
    let open Lwt in
    let uri = Request.build_uri "/v1/payment_intents/{intent}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "intent" (fun x -> x) intent in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "amount" Int32.to_string amount in
    let body = Request.maybe_add_form_encoded_body_param body "application_fee_amount" .show application_fee_amount in
    let body = Request.maybe_add_form_encoded_body_param body "currency" (fun x -> x) currency in
    let body = Request.maybe_add_form_encoded_body_param body "customer" (fun x -> x) customer in
    let body = Request.maybe_add_form_encoded_body_param body "description" (fun x -> x) description in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "payment_method" (fun x -> x) payment_method in
    let body = Request.maybe_add_form_encoded_body_param body "payment_method_data" .show payment_method_data in
    let body = Request.maybe_add_form_encoded_body_param body "payment_method_options" .show payment_method_options in
    let body = Request.add_form_encoded_body_param_list body "payment_method_types" (List.map (fun x -> x))(fun x -> x) payment_method_types in
    let body = Request.maybe_add_form_encoded_body_param body "receipt_email" .show receipt_email in
    let body = Request.maybe_add_form_encoded_body_param body "setup_future_usage" Enums.show_setup_future_usage setup_future_usage in
    let body = Request.maybe_add_form_encoded_body_param body "shipping" .show shipping in
    let body = Request.maybe_add_form_encoded_body_param body "statement_descriptor" (fun x -> x) statement_descriptor in
    let body = Request.maybe_add_form_encoded_body_param body "statement_descriptor_suffix" (fun x -> x) statement_descriptor_suffix in
    let body = Request.maybe_add_form_encoded_body_param body "transfer_data" .show transfer_data in
    let body = Request.maybe_add_form_encoded_body_param body "transfer_group" (fun x -> x) transfer_group in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Payment_intent.of_yojson) resp body

let post_payment_intents_intent_cancel ~intent ?cancellation_reason ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/payment_intents/{intent}/cancel" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "intent" (fun x -> x) intent in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "cancellation_reason" Enums.show_cancellation_reason cancellation_reason in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Payment_intent.of_yojson) resp body

let post_payment_intents_intent_capture ~intent ?amount_to_capture ?application_fee_amount ?(expand = []) ?statement_descriptor ?statement_descriptor_suffix ?transfer_data () =
    let open Lwt in
    let uri = Request.build_uri "/v1/payment_intents/{intent}/capture" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "intent" (fun x -> x) intent in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "amount_to_capture" Int32.to_string amount_to_capture in
    let body = Request.maybe_add_form_encoded_body_param body "application_fee_amount" Int32.to_string application_fee_amount in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "statement_descriptor" (fun x -> x) statement_descriptor in
    let body = Request.maybe_add_form_encoded_body_param body "statement_descriptor_suffix" (fun x -> x) statement_descriptor_suffix in
    let body = Request.maybe_add_form_encoded_body_param body "transfer_data" .show transfer_data in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Payment_intent.of_yojson) resp body

let post_payment_intents_intent_confirm ~intent ?client_secret ?error_on_requires_action ?(expand = []) ?mandate ?mandate_data ?off_session ?payment_method ?payment_method_data ?payment_method_options ?(payment_method_types = []) ?receipt_email ?return_url ?setup_future_usage ?shipping ?use_stripe_sdk () =
    let open Lwt in
    let uri = Request.build_uri "/v1/payment_intents/{intent}/confirm" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "intent" (fun x -> x) intent in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "client_secret" (fun x -> x) client_secret in
    let body = Request.maybe_add_form_encoded_body_param body "error_on_requires_action" string_of_bool error_on_requires_action in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "mandate" (fun x -> x) mandate in
    let body = Request.maybe_add_form_encoded_body_param body "mandate_data" .show mandate_data in
    let body = Request.maybe_add_form_encoded_body_param body "off_session" .show off_session in
    let body = Request.maybe_add_form_encoded_body_param body "payment_method" (fun x -> x) payment_method in
    let body = Request.maybe_add_form_encoded_body_param body "payment_method_data" .show payment_method_data in
    let body = Request.maybe_add_form_encoded_body_param body "payment_method_options" .show payment_method_options in
    let body = Request.add_form_encoded_body_param_list body "payment_method_types" (List.map (fun x -> x))(fun x -> x) payment_method_types in
    let body = Request.maybe_add_form_encoded_body_param body "receipt_email" .show receipt_email in
    let body = Request.maybe_add_form_encoded_body_param body "return_url" (fun x -> x) return_url in
    let body = Request.maybe_add_form_encoded_body_param body "setup_future_usage" Enums.show_setup_future_usage setup_future_usage in
    let body = Request.maybe_add_form_encoded_body_param body "shipping" .show shipping in
    let body = Request.maybe_add_form_encoded_body_param body "use_stripe_sdk" string_of_bool use_stripe_sdk in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Payment_intent.of_yojson) resp body

let post_payment_methods ?alipay ?au_becs_debit ?bacs_debit ?bancontact ?billing_details ?card ?customer ?eps ?(expand = []) ?fpx ?giropay ?grabpay ?ideal ?interac_present ?oxxo ?p24 ?payment_method ?sepa_debit ?sofort ?_type () =
    let open Lwt in
    let uri = Request.build_uri "/v1/payment_methods" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "alipay"  alipay in
    let body = Request.maybe_add_form_encoded_body_param body "au_becs_debit" .show au_becs_debit in
    let body = Request.maybe_add_form_encoded_body_param body "bacs_debit" .show bacs_debit in
    let body = Request.maybe_add_form_encoded_body_param body "bancontact"  bancontact in
    let body = Request.maybe_add_form_encoded_body_param body "billing_details" .show billing_details in
    let body = Request.maybe_add_form_encoded_body_param body "card" .show card in
    let body = Request.maybe_add_form_encoded_body_param body "customer" (fun x -> x) customer in
    let body = Request.maybe_add_form_encoded_body_param body "eps" .show eps in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "fpx" .show fpx in
    let body = Request.maybe_add_form_encoded_body_param body "giropay"  giropay in
    let body = Request.maybe_add_form_encoded_body_param body "grabpay"  grabpay in
    let body = Request.maybe_add_form_encoded_body_param body "ideal" .show ideal in
    let body = Request.maybe_add_form_encoded_body_param body "interac_present"  interac_present in
    let body = Request.maybe_add_form_encoded_body_param body "oxxo"  oxxo in
    let body = Request.maybe_add_form_encoded_body_param body "p24" .show p24 in
    let body = Request.maybe_add_form_encoded_body_param body "payment_method" (fun x -> x) payment_method in
    let body = Request.maybe_add_form_encoded_body_param body "sepa_debit" .show sepa_debit in
    let body = Request.maybe_add_form_encoded_body_param body "sofort" .show sofort in
    let body = Request.maybe_add_form_encoded_body_param body "_type" Enums.show_inline_object_104_type _type in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Payment_method.of_yojson) resp body

let post_payment_methods_payment_method ~payment_method ?billing_details ?card ?(expand = []) ?metadata () =
    let open Lwt in
    let uri = Request.build_uri "/v1/payment_methods/{payment_method}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "payment_method" (fun x -> x) payment_method in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "billing_details" .show billing_details in
    let body = Request.maybe_add_form_encoded_body_param body "card" .show card in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Payment_method.of_yojson) resp body

let post_payment_methods_payment_method_attach ~payment_method ~customer ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/payment_methods/{payment_method}/attach" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "payment_method" (fun x -> x) payment_method in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param body "customer" (fun x -> x) customer in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Payment_method.of_yojson) resp body

let post_payment_methods_payment_method_detach ~payment_method ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/payment_methods/{payment_method}/detach" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "payment_method" (fun x -> x) payment_method in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Payment_method.of_yojson) resp body

let post_payouts ~amount ~currency ?description ?destination ?(expand = []) ?_method ?source_type ?statement_descriptor () =
    let open Lwt in
    let uri = Request.build_uri "/v1/payouts" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param body "amount" Int32.to_string amount in
    let body = Request.add_form_encoded_body_param body "currency" (fun x -> x) currency in
    let body = Request.maybe_add_form_encoded_body_param body "description" (fun x -> x) description in
    let body = Request.maybe_add_form_encoded_body_param body "destination" (fun x -> x) destination in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "_method" Enums.show_available_payout_methods _method in
    let body = Request.maybe_add_form_encoded_body_param body "source_type" Enums.show_source_type source_type in
    let body = Request.maybe_add_form_encoded_body_param body "statement_descriptor" (fun x -> x) statement_descriptor in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Payout.of_yojson) resp body

let post_payouts_payout ~payout ?(expand = []) ?metadata () =
    let open Lwt in
    let uri = Request.build_uri "/v1/payouts/{payout}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "payout" (fun x -> x) payout in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Payout.of_yojson) resp body

let post_payouts_payout_cancel ~payout ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/payouts/{payout}/cancel" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "payout" (fun x -> x) payout in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Payout.of_yojson) resp body

let post_payouts_payout_reverse ~payout ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/payouts/{payout}/reverse" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "payout" (fun x -> x) payout in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Payout.of_yojson) resp body

let post_plans ~currency ~interval ?active ?aggregate_usage ?amount ?amount_decimal ?billing_scheme ?(expand = []) ?id ?interval_count ?metadata ?nickname ?product ?(tiers = []) ?tiers_mode ?transform_usage ?trial_period_days ?usage_type () =
    let open Lwt in
    let uri = Request.build_uri "/v1/plans" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "active" string_of_bool active in
    let body = Request.maybe_add_form_encoded_body_param body "aggregate_usage" Enums.show_aggregate_usage aggregate_usage in
    let body = Request.maybe_add_form_encoded_body_param body "amount" Int32.to_string amount in
    let body = Request.maybe_add_form_encoded_body_param body "amount_decimal" (fun x -> x) amount_decimal in
    let body = Request.maybe_add_form_encoded_body_param body "billing_scheme" Enums.show_billing_scheme billing_scheme in
    let body = Request.add_form_encoded_body_param body "currency" (fun x -> x) currency in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "id" (fun x -> x) id in
    let body = Request.add_form_encoded_body_param body "interval" Enums.show_interval interval in
    let body = Request.maybe_add_form_encoded_body_param body "interval_count" Int32.to_string interval_count in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "nickname" (fun x -> x) nickname in
    let body = Request.maybe_add_form_encoded_body_param body "product" .show product in
    let body = Request.add_form_encoded_body_param_list body "tiers" (List.map .show).show tiers in
    let body = Request.maybe_add_form_encoded_body_param body "tiers_mode" Enums.show_tiers_mode tiers_mode in
    let body = Request.maybe_add_form_encoded_body_param body "transform_usage" .show transform_usage in
    let body = Request.maybe_add_form_encoded_body_param body "trial_period_days" Int32.to_string trial_period_days in
    let body = Request.maybe_add_form_encoded_body_param body "usage_type" Enums.show_usage_type usage_type in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Plan.of_yojson) resp body

let post_plans_plan ~plan ?active ?(expand = []) ?metadata ?nickname ?product ?trial_period_days () =
    let open Lwt in
    let uri = Request.build_uri "/v1/plans/{plan}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "plan" (fun x -> x) plan in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "active" string_of_bool active in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "nickname" (fun x -> x) nickname in
    let body = Request.maybe_add_form_encoded_body_param body "product" (fun x -> x) product in
    let body = Request.maybe_add_form_encoded_body_param body "trial_period_days" Int32.to_string trial_period_days in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Plan.of_yojson) resp body

let post_prices ~currency ?active ?billing_scheme ?(expand = []) ?lookup_key ?nickname ?product ?product_data ?recurring ?(tiers = []) ?tiers_mode ?transfer_lookup_key ?transform_quantity ?unit_amount ?unit_amount_decimal () =
    let open Lwt in
    let uri = Request.build_uri "/v1/prices" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "active" string_of_bool active in
    let body = Request.maybe_add_form_encoded_body_param body "billing_scheme" Enums.show_billing_scheme billing_scheme in
    let body = Request.add_form_encoded_body_param body "currency" (fun x -> x) currency in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "lookup_key" (fun x -> x) lookup_key in
    let body = Request.maybe_add_form_encoded_body_param body "nickname" (fun x -> x) nickname in
    let body = Request.maybe_add_form_encoded_body_param body "product" (fun x -> x) product in
    let body = Request.maybe_add_form_encoded_body_param body "product_data" .show product_data in
    let body = Request.maybe_add_form_encoded_body_param body "recurring" .show recurring in
    let body = Request.add_form_encoded_body_param_list body "tiers" (List.map .show).show tiers in
    let body = Request.maybe_add_form_encoded_body_param body "tiers_mode" Enums.show_tiers_mode tiers_mode in
    let body = Request.maybe_add_form_encoded_body_param body "transfer_lookup_key" string_of_bool transfer_lookup_key in
    let body = Request.maybe_add_form_encoded_body_param body "transform_quantity" .show transform_quantity in
    let body = Request.maybe_add_form_encoded_body_param body "unit_amount" Int32.to_string unit_amount in
    let body = Request.maybe_add_form_encoded_body_param body "unit_amount_decimal" (fun x -> x) unit_amount_decimal in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Price.of_yojson) resp body

let post_prices_price ~price ?active ?(expand = []) ?lookup_key ?metadata ?nickname ?transfer_lookup_key () =
    let open Lwt in
    let uri = Request.build_uri "/v1/prices/{price}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "price" (fun x -> x) price in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "active" string_of_bool active in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "lookup_key" (fun x -> x) lookup_key in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "nickname" (fun x -> x) nickname in
    let body = Request.maybe_add_form_encoded_body_param body "transfer_lookup_key" string_of_bool transfer_lookup_key in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Price.of_yojson) resp body

let post_products ~name ?active ?(attributes = []) ?caption ?(deactivate_on = []) ?description ?(expand = []) ?id ?(images = []) ?package_dimensions ?shippable ?statement_descriptor ?unit_label ?url () =
    let open Lwt in
    let uri = Request.build_uri "/v1/products" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "active" string_of_bool active in
    let body = Request.add_form_encoded_body_param_list body "attributes" (List.map (fun x -> x))(fun x -> x) attributes in
    let body = Request.maybe_add_form_encoded_body_param body "caption" (fun x -> x) caption in
    let body = Request.add_form_encoded_body_param_list body "deactivate_on" (List.map (fun x -> x))(fun x -> x) deactivate_on in
    let body = Request.maybe_add_form_encoded_body_param body "description" (fun x -> x) description in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "id" (fun x -> x) id in
    let body = Request.add_form_encoded_body_param_list body "images" (List.map (fun x -> x))(fun x -> x) images in
    let body = Request.add_form_encoded_body_param body "name" (fun x -> x) name in
    let body = Request.maybe_add_form_encoded_body_param body "package_dimensions" .show package_dimensions in
    let body = Request.maybe_add_form_encoded_body_param body "shippable" string_of_bool shippable in
    let body = Request.maybe_add_form_encoded_body_param body "statement_descriptor" (fun x -> x) statement_descriptor in
    let body = Request.maybe_add_form_encoded_body_param body "unit_label" (fun x -> x) unit_label in
    let body = Request.maybe_add_form_encoded_body_param body "url" (fun x -> x) url in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Product.of_yojson) resp body

let post_products_id ~id ?active ?attributes ?caption ?(deactivate_on = []) ?description ?(expand = []) ?images ?metadata ?name ?package_dimensions ?shippable ?statement_descriptor ?unit_label ?url () =
    let open Lwt in
    let uri = Request.build_uri "/v1/products/{id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "active" string_of_bool active in
    let body = Request.maybe_add_form_encoded_body_param body "attributes" .show attributes in
    let body = Request.maybe_add_form_encoded_body_param body "caption" (fun x -> x) caption in
    let body = Request.add_form_encoded_body_param_list body "deactivate_on" (List.map (fun x -> x))(fun x -> x) deactivate_on in
    let body = Request.maybe_add_form_encoded_body_param body "description" (fun x -> x) description in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "images" .show images in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "name" (fun x -> x) name in
    let body = Request.maybe_add_form_encoded_body_param body "package_dimensions" .show package_dimensions in
    let body = Request.maybe_add_form_encoded_body_param body "shippable" string_of_bool shippable in
    let body = Request.maybe_add_form_encoded_body_param body "statement_descriptor" (fun x -> x) statement_descriptor in
    let body = Request.maybe_add_form_encoded_body_param body "unit_label" (fun x -> x) unit_label in
    let body = Request.maybe_add_form_encoded_body_param body "url" (fun x -> x) url in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Product.of_yojson) resp body

let post_promotion_codes ~coupon ?active ?code ?customer ?(expand = []) ?expires_at ?max_redemptions ?restrictions () =
    let open Lwt in
    let uri = Request.build_uri "/v1/promotion_codes" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "active" string_of_bool active in
    let body = Request.maybe_add_form_encoded_body_param body "code" (fun x -> x) code in
    let body = Request.add_form_encoded_body_param body "coupon" (fun x -> x) coupon in
    let body = Request.maybe_add_form_encoded_body_param body "customer" (fun x -> x) customer in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "expires_at" Int32.to_string expires_at in
    let body = Request.maybe_add_form_encoded_body_param body "max_redemptions" Int32.to_string max_redemptions in
    let body = Request.maybe_add_form_encoded_body_param body "restrictions" .show restrictions in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Promotion_code.of_yojson) resp body

let post_promotion_codes_promotion_code ~promotion_code ?active ?(expand = []) ?metadata () =
    let open Lwt in
    let uri = Request.build_uri "/v1/promotion_codes/{promotion_code}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "promotion_code" (fun x -> x) promotion_code in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "active" string_of_bool active in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Promotion_code.of_yojson) resp body

let post_radar_value_list_items ~value ~value_list ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/radar/value_list_items" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.add_form_encoded_body_param body "value" (fun x -> x) value in
    let body = Request.add_form_encoded_body_param body "value_list" (fun x -> x) value_list in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Radar_value_list_item.of_yojson) resp body

let post_radar_value_lists ~alias ~name ?(expand = []) ?item_type () =
    let open Lwt in
    let uri = Request.build_uri "/v1/radar/value_lists" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param body "alias" (fun x -> x) alias in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "item_type" Enums.show_item_type item_type in
    let body = Request.add_form_encoded_body_param body "name" (fun x -> x) name in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Radar_value_list.of_yojson) resp body

let post_radar_value_lists_value_list ~value_list ?alias ?(expand = []) ?name () =
    let open Lwt in
    let uri = Request.build_uri "/v1/radar/value_lists/{value_list}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "value_list" (fun x -> x) value_list in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "alias" (fun x -> x) alias in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "name" (fun x -> x) name in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Radar_value_list.of_yojson) resp body

let post_recipients ~name ~_type ?bank_account ?card ?description ?email ?(expand = []) ?metadata ?tax_id () =
    let open Lwt in
    let uri = Request.build_uri "/v1/recipients" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "bank_account" (fun x -> x) bank_account in
    let body = Request.maybe_add_form_encoded_body_param body "card" (fun x -> x) card in
    let body = Request.maybe_add_form_encoded_body_param body "description" (fun x -> x) description in
    let body = Request.maybe_add_form_encoded_body_param body "email" (fun x -> x) email in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.add_form_encoded_body_param body "name" (fun x -> x) name in
    let body = Request.maybe_add_form_encoded_body_param body "tax_id" (fun x -> x) tax_id in
    let body = Request.add_form_encoded_body_param body "_type" (fun x -> x) _type in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Recipient.of_yojson) resp body

let post_recipients_id ~id ?bank_account ?card ?default_card ?description ?email ?(expand = []) ?metadata ?name ?tax_id () =
    let open Lwt in
    let uri = Request.build_uri "/v1/recipients/{id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "bank_account" (fun x -> x) bank_account in
    let body = Request.maybe_add_form_encoded_body_param body "card" (fun x -> x) card in
    let body = Request.maybe_add_form_encoded_body_param body "default_card" (fun x -> x) default_card in
    let body = Request.maybe_add_form_encoded_body_param body "description" (fun x -> x) description in
    let body = Request.maybe_add_form_encoded_body_param body "email" (fun x -> x) email in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "name" (fun x -> x) name in
    let body = Request.maybe_add_form_encoded_body_param body "tax_id" (fun x -> x) tax_id in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Recipient.of_yojson) resp body

let post_refunds ?amount ?charge ?(expand = []) ?metadata ?payment_intent ?reason ?refund_application_fee ?reverse_transfer () =
    let open Lwt in
    let uri = Request.build_uri "/v1/refunds" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "amount" Int32.to_string amount in
    let body = Request.maybe_add_form_encoded_body_param body "charge" (fun x -> x) charge in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "payment_intent" (fun x -> x) payment_intent in
    let body = Request.maybe_add_form_encoded_body_param body "reason" Enums.show_inline_object_39_reason reason in
    let body = Request.maybe_add_form_encoded_body_param body "refund_application_fee" string_of_bool refund_application_fee in
    let body = Request.maybe_add_form_encoded_body_param body "reverse_transfer" string_of_bool reverse_transfer in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Refund.of_yojson) resp body

let post_refunds_refund ~refund ?(expand = []) ?metadata () =
    let open Lwt in
    let uri = Request.build_uri "/v1/refunds/{refund}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "refund" (fun x -> x) refund in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Refund.of_yojson) resp body

let post_reporting_report_runs ~report_type ?(expand = []) ?parameters () =
    let open Lwt in
    let uri = Request.build_uri "/v1/reporting/report_runs" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "parameters" .show parameters in
    let body = Request.add_form_encoded_body_param body "report_type" (fun x -> x) report_type in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Reporting_report_run.of_yojson) resp body

let post_reviews_review_approve ~review ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/reviews/{review}/approve" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "review" (fun x -> x) review in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Review.of_yojson) resp body

let post_setup_intents ?confirm ?customer ?description ?(expand = []) ?mandate_data ?on_behalf_of ?payment_method ?payment_method_options ?(payment_method_types = []) ?return_url ?single_use ?usage () =
    let open Lwt in
    let uri = Request.build_uri "/v1/setup_intents" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "confirm" string_of_bool confirm in
    let body = Request.maybe_add_form_encoded_body_param body "customer" (fun x -> x) customer in
    let body = Request.maybe_add_form_encoded_body_param body "description" (fun x -> x) description in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "mandate_data" .show mandate_data in
    let body = Request.maybe_add_form_encoded_body_param body "on_behalf_of" (fun x -> x) on_behalf_of in
    let body = Request.maybe_add_form_encoded_body_param body "payment_method" (fun x -> x) payment_method in
    let body = Request.maybe_add_form_encoded_body_param body "payment_method_options" .show payment_method_options in
    let body = Request.add_form_encoded_body_param_list body "payment_method_types" (List.map (fun x -> x))(fun x -> x) payment_method_types in
    let body = Request.maybe_add_form_encoded_body_param body "return_url" (fun x -> x) return_url in
    let body = Request.maybe_add_form_encoded_body_param body "single_use" .show single_use in
    let body = Request.maybe_add_form_encoded_body_param body "usage" Enums.show_payment_intent_setup_future_usage usage in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Setup_intent.of_yojson) resp body

let post_setup_intents_intent ~intent ?customer ?description ?(expand = []) ?metadata ?payment_method ?payment_method_options ?(payment_method_types = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/setup_intents/{intent}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "intent" (fun x -> x) intent in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "customer" (fun x -> x) customer in
    let body = Request.maybe_add_form_encoded_body_param body "description" (fun x -> x) description in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "payment_method" (fun x -> x) payment_method in
    let body = Request.maybe_add_form_encoded_body_param body "payment_method_options" .show payment_method_options in
    let body = Request.add_form_encoded_body_param_list body "payment_method_types" (List.map (fun x -> x))(fun x -> x) payment_method_types in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Setup_intent.of_yojson) resp body

let post_setup_intents_intent_cancel ~intent ?cancellation_reason ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/setup_intents/{intent}/cancel" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "intent" (fun x -> x) intent in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "cancellation_reason" Enums.show_setup_intent_cancellation_reason cancellation_reason in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Setup_intent.of_yojson) resp body

let post_setup_intents_intent_confirm ~intent ?client_secret ?(expand = []) ?mandate_data ?payment_method ?payment_method_options ?return_url () =
    let open Lwt in
    let uri = Request.build_uri "/v1/setup_intents/{intent}/confirm" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "intent" (fun x -> x) intent in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "client_secret" (fun x -> x) client_secret in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "mandate_data" .show mandate_data in
    let body = Request.maybe_add_form_encoded_body_param body "payment_method" (fun x -> x) payment_method in
    let body = Request.maybe_add_form_encoded_body_param body "payment_method_options" .show payment_method_options in
    let body = Request.maybe_add_form_encoded_body_param body "return_url" (fun x -> x) return_url in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Setup_intent.of_yojson) resp body

let post_skus ~currency ~inventory ~price ~product ?active ?(expand = []) ?id ?image ?package_dimensions () =
    let open Lwt in
    let uri = Request.build_uri "/v1/skus" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "active" string_of_bool active in
    let body = Request.add_form_encoded_body_param body "currency" (fun x -> x) currency in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "id" (fun x -> x) id in
    let body = Request.maybe_add_form_encoded_body_param body "image" (fun x -> x) image in
    let body = Request.add_form_encoded_body_param body "inventory" .show inventory in
    let body = Request.maybe_add_form_encoded_body_param body "package_dimensions" .show package_dimensions in
    let body = Request.add_form_encoded_body_param body "price" Int32.to_string price in
    let body = Request.add_form_encoded_body_param body "product" (fun x -> x) product in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Sku.of_yojson) resp body

let post_skus_id ~id ?active ?currency ?(expand = []) ?image ?inventory ?metadata ?package_dimensions ?price ?product () =
    let open Lwt in
    let uri = Request.build_uri "/v1/skus/{id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "active" string_of_bool active in
    let body = Request.maybe_add_form_encoded_body_param body "currency" (fun x -> x) currency in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "image" (fun x -> x) image in
    let body = Request.maybe_add_form_encoded_body_param body "inventory" .show inventory in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "package_dimensions" .show package_dimensions in
    let body = Request.maybe_add_form_encoded_body_param body "price" Int32.to_string price in
    let body = Request.maybe_add_form_encoded_body_param body "product" (fun x -> x) product in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Sku.of_yojson) resp body

let post_sources ?amount ?currency ?customer ?(expand = []) ?flow ?mandate ?original_source ?owner ?receiver ?redirect ?source_order ?statement_descriptor ?token ?_type ?usage () =
    let open Lwt in
    let uri = Request.build_uri "/v1/sources" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "amount" Int32.to_string amount in
    let body = Request.maybe_add_form_encoded_body_param body "currency" (fun x -> x) currency in
    let body = Request.maybe_add_form_encoded_body_param body "customer" (fun x -> x) customer in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "flow" Enums.show_flow flow in
    let body = Request.maybe_add_form_encoded_body_param body "mandate" .show mandate in
    let body = Request.maybe_add_form_encoded_body_param body "original_source" (fun x -> x) original_source in
    let body = Request.maybe_add_form_encoded_body_param body "owner" .show owner in
    let body = Request.maybe_add_form_encoded_body_param body "receiver" .show receiver in
    let body = Request.maybe_add_form_encoded_body_param body "redirect" .show redirect in
    let body = Request.maybe_add_form_encoded_body_param body "source_order" .show source_order in
    let body = Request.maybe_add_form_encoded_body_param body "statement_descriptor" (fun x -> x) statement_descriptor in
    let body = Request.maybe_add_form_encoded_body_param body "token" (fun x -> x) token in
    let body = Request.maybe_add_form_encoded_body_param body "_type" (fun x -> x) _type in
    let body = Request.maybe_add_form_encoded_body_param body "usage" Enums.show_usage usage in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Source.of_yojson) resp body

let post_sources_source ~source ?amount ?(expand = []) ?mandate ?metadata ?owner ?source_order () =
    let open Lwt in
    let uri = Request.build_uri "/v1/sources/{source}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "source" (fun x -> x) source in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "amount" Int32.to_string amount in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "mandate" .show mandate in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "owner" .show owner in
    let body = Request.maybe_add_form_encoded_body_param body "source_order" .show source_order in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Source.of_yojson) resp body

let post_sources_source_verify ~source ~values ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/sources/{source}/verify" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "source" (fun x -> x) source in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.add_form_encoded_body_param_list body "values" (List.map (fun x -> x))(fun x -> x) values in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Source.of_yojson) resp body

let post_subscription_items ~subscription ?billing_thresholds ?(expand = []) ?payment_behavior ?price ?price_data ?proration_behavior ?proration_date ?quantity ?tax_rates () =
    let open Lwt in
    let uri = Request.build_uri "/v1/subscription_items" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "billing_thresholds" .show billing_thresholds in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "payment_behavior" Enums.show_payment_behavior payment_behavior in
    let body = Request.maybe_add_form_encoded_body_param body "price" (fun x -> x) price in
    let body = Request.maybe_add_form_encoded_body_param body "price_data" .show price_data in
    let body = Request.maybe_add_form_encoded_body_param body "proration_behavior" Enums.show_proration_behavior proration_behavior in
    let body = Request.maybe_add_form_encoded_body_param body "proration_date" Int32.to_string proration_date in
    let body = Request.maybe_add_form_encoded_body_param body "quantity" Int32.to_string quantity in
    let body = Request.add_form_encoded_body_param body "subscription" (fun x -> x) subscription in
    let body = Request.maybe_add_form_encoded_body_param body "tax_rates" .show tax_rates in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Subscription_item.of_yojson) resp body

let post_subscription_items_item ~item ?billing_thresholds ?(expand = []) ?metadata ?off_session ?payment_behavior ?price ?price_data ?proration_behavior ?proration_date ?quantity ?tax_rates () =
    let open Lwt in
    let uri = Request.build_uri "/v1/subscription_items/{item}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "item" (fun x -> x) item in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "billing_thresholds" .show billing_thresholds in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "off_session" string_of_bool off_session in
    let body = Request.maybe_add_form_encoded_body_param body "payment_behavior" Enums.show_payment_behavior payment_behavior in
    let body = Request.maybe_add_form_encoded_body_param body "price" (fun x -> x) price in
    let body = Request.maybe_add_form_encoded_body_param body "price_data" .show price_data in
    let body = Request.maybe_add_form_encoded_body_param body "proration_behavior" Enums.show_proration_behavior proration_behavior in
    let body = Request.maybe_add_form_encoded_body_param body "proration_date" Int32.to_string proration_date in
    let body = Request.maybe_add_form_encoded_body_param body "quantity" Int32.to_string quantity in
    let body = Request.maybe_add_form_encoded_body_param body "tax_rates" .show tax_rates in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Subscription_item.of_yojson) resp body

let post_subscription_items_subscription_item_usage_records ~subscription_item ~quantity ~timestamp ?action ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/subscription_items/{subscription_item}/usage_records" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "subscription_item" (fun x -> x) subscription_item in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "action" Enums.show_action action in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.add_form_encoded_body_param body "quantity" Int32.to_string quantity in
    let body = Request.add_form_encoded_body_param body "timestamp" Int32.to_string timestamp in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Usage_record.of_yojson) resp body

let post_subscription_schedules ?customer ?default_settings ?end_behavior ?(expand = []) ?from_subscription ?metadata ?(phases = []) ?start_date () =
    let open Lwt in
    let uri = Request.build_uri "/v1/subscription_schedules" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "customer" (fun x -> x) customer in
    let body = Request.maybe_add_form_encoded_body_param body "default_settings" .show default_settings in
    let body = Request.maybe_add_form_encoded_body_param body "end_behavior" Enums.show_end_behavior end_behavior in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "from_subscription" (fun x -> x) from_subscription in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.add_form_encoded_body_param_list body "phases" (List.map .show).show phases in
    let body = Request.maybe_add_form_encoded_body_param body "start_date" .show start_date in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Subscription_schedule.of_yojson) resp body

let post_subscription_schedules_schedule ~schedule ?default_settings ?end_behavior ?(expand = []) ?metadata ?(phases = []) ?proration_behavior () =
    let open Lwt in
    let uri = Request.build_uri "/v1/subscription_schedules/{schedule}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "schedule" (fun x -> x) schedule in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "default_settings" .show default_settings in
    let body = Request.maybe_add_form_encoded_body_param body "end_behavior" Enums.show_end_behavior end_behavior in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.add_form_encoded_body_param_list body "phases" (List.map .show).show phases in
    let body = Request.maybe_add_form_encoded_body_param body "proration_behavior" Enums.show_proration_behavior proration_behavior in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Subscription_schedule.of_yojson) resp body

let post_subscription_schedules_schedule_cancel ~schedule ?(expand = []) ?invoice_now ?prorate () =
    let open Lwt in
    let uri = Request.build_uri "/v1/subscription_schedules/{schedule}/cancel" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "schedule" (fun x -> x) schedule in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "invoice_now" string_of_bool invoice_now in
    let body = Request.maybe_add_form_encoded_body_param body "prorate" string_of_bool prorate in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Subscription_schedule.of_yojson) resp body

let post_subscription_schedules_schedule_release ~schedule ?(expand = []) ?preserve_cancel_date () =
    let open Lwt in
    let uri = Request.build_uri "/v1/subscription_schedules/{schedule}/release" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "schedule" (fun x -> x) schedule in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "preserve_cancel_date" string_of_bool preserve_cancel_date in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Subscription_schedule.of_yojson) resp body

let post_subscriptions ~customer ?(add_invoice_items = []) ?application_fee_percent ?backdate_start_date ?billing_cycle_anchor ?billing_thresholds ?cancel_at ?cancel_at_period_end ?collection_method ?coupon ?days_until_due ?default_payment_method ?default_source ?default_tax_rates ?(expand = []) ?(items = []) ?metadata ?off_session ?payment_behavior ?pending_invoice_item_interval ?promotion_code ?proration_behavior ?transfer_data ?trial_end ?trial_from_plan ?trial_period_days () =
    let open Lwt in
    let uri = Request.build_uri "/v1/subscriptions" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "add_invoice_items" (List.map .show).show add_invoice_items in
    let body = Request.maybe_add_form_encoded_body_param body "application_fee_percent" string_of_float application_fee_percent in
    let body = Request.maybe_add_form_encoded_body_param body "backdate_start_date" Int32.to_string backdate_start_date in
    let body = Request.maybe_add_form_encoded_body_param body "billing_cycle_anchor" Int32.to_string billing_cycle_anchor in
    let body = Request.maybe_add_form_encoded_body_param body "billing_thresholds" .show billing_thresholds in
    let body = Request.maybe_add_form_encoded_body_param body "cancel_at" Int32.to_string cancel_at in
    let body = Request.maybe_add_form_encoded_body_param body "cancel_at_period_end" string_of_bool cancel_at_period_end in
    let body = Request.maybe_add_form_encoded_body_param body "collection_method" Enums.show_collection_method collection_method in
    let body = Request.maybe_add_form_encoded_body_param body "coupon" (fun x -> x) coupon in
    let body = Request.add_form_encoded_body_param body "customer" (fun x -> x) customer in
    let body = Request.maybe_add_form_encoded_body_param body "days_until_due" Int32.to_string days_until_due in
    let body = Request.maybe_add_form_encoded_body_param body "default_payment_method" (fun x -> x) default_payment_method in
    let body = Request.maybe_add_form_encoded_body_param body "default_source" (fun x -> x) default_source in
    let body = Request.maybe_add_form_encoded_body_param body "default_tax_rates" .show default_tax_rates in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.add_form_encoded_body_param_list body "items" (List.map .show).show items in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "off_session" string_of_bool off_session in
    let body = Request.maybe_add_form_encoded_body_param body "payment_behavior" Enums.show_payment_behavior payment_behavior in
    let body = Request.maybe_add_form_encoded_body_param body "pending_invoice_item_interval" .show pending_invoice_item_interval in
    let body = Request.maybe_add_form_encoded_body_param body "promotion_code" (fun x -> x) promotion_code in
    let body = Request.maybe_add_form_encoded_body_param body "proration_behavior" Enums.show_proration_behavior proration_behavior in
    let body = Request.maybe_add_form_encoded_body_param body "transfer_data" .show transfer_data in
    let body = Request.maybe_add_form_encoded_body_param body "trial_end" .show trial_end in
    let body = Request.maybe_add_form_encoded_body_param body "trial_from_plan" string_of_bool trial_from_plan in
    let body = Request.maybe_add_form_encoded_body_param body "trial_period_days" Int32.to_string trial_period_days in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Subscription.of_yojson) resp body

let post_subscriptions_subscription_exposed_id ~subscription_exposed_id ?(add_invoice_items = []) ?application_fee_percent ?billing_cycle_anchor ?billing_thresholds ?cancel_at ?cancel_at_period_end ?collection_method ?coupon ?days_until_due ?default_payment_method ?default_source ?default_tax_rates ?(expand = []) ?(items = []) ?metadata ?off_session ?pause_collection ?payment_behavior ?pending_invoice_item_interval ?promotion_code ?proration_behavior ?proration_date ?transfer_data ?trial_end ?trial_from_plan () =
    let open Lwt in
    let uri = Request.build_uri "/v1/subscriptions/{subscription_exposed_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "subscription_exposed_id" (fun x -> x) subscription_exposed_id in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "add_invoice_items" (List.map .show).show add_invoice_items in
    let body = Request.maybe_add_form_encoded_body_param body "application_fee_percent" string_of_float application_fee_percent in
    let body = Request.maybe_add_form_encoded_body_param body "billing_cycle_anchor" Enums.show_inline_object_64_billing_cycle_anchor billing_cycle_anchor in
    let body = Request.maybe_add_form_encoded_body_param body "billing_thresholds" .show billing_thresholds in
    let body = Request.maybe_add_form_encoded_body_param body "cancel_at" .show cancel_at in
    let body = Request.maybe_add_form_encoded_body_param body "cancel_at_period_end" string_of_bool cancel_at_period_end in
    let body = Request.maybe_add_form_encoded_body_param body "collection_method" Enums.show_collection_method collection_method in
    let body = Request.maybe_add_form_encoded_body_param body "coupon" (fun x -> x) coupon in
    let body = Request.maybe_add_form_encoded_body_param body "days_until_due" Int32.to_string days_until_due in
    let body = Request.maybe_add_form_encoded_body_param body "default_payment_method" (fun x -> x) default_payment_method in
    let body = Request.maybe_add_form_encoded_body_param body "default_source" (fun x -> x) default_source in
    let body = Request.maybe_add_form_encoded_body_param body "default_tax_rates" .show default_tax_rates in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.add_form_encoded_body_param_list body "items" (List.map .show).show items in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "off_session" string_of_bool off_session in
    let body = Request.maybe_add_form_encoded_body_param body "pause_collection" .show pause_collection in
    let body = Request.maybe_add_form_encoded_body_param body "payment_behavior" Enums.show_payment_behavior payment_behavior in
    let body = Request.maybe_add_form_encoded_body_param body "pending_invoice_item_interval" .show pending_invoice_item_interval in
    let body = Request.maybe_add_form_encoded_body_param body "promotion_code" (fun x -> x) promotion_code in
    let body = Request.maybe_add_form_encoded_body_param body "proration_behavior" Enums.show_proration_behavior proration_behavior in
    let body = Request.maybe_add_form_encoded_body_param body "proration_date" Int32.to_string proration_date in
    let body = Request.maybe_add_form_encoded_body_param body "transfer_data" .show transfer_data in
    let body = Request.maybe_add_form_encoded_body_param body "trial_end" .show trial_end in
    let body = Request.maybe_add_form_encoded_body_param body "trial_from_plan" string_of_bool trial_from_plan in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Subscription.of_yojson) resp body

let post_tax_rates ~display_name ~inclusive ~percentage ?active ?description ?(expand = []) ?jurisdiction () =
    let open Lwt in
    let uri = Request.build_uri "/v1/tax_rates" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "active" string_of_bool active in
    let body = Request.maybe_add_form_encoded_body_param body "description" (fun x -> x) description in
    let body = Request.add_form_encoded_body_param body "display_name" (fun x -> x) display_name in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.add_form_encoded_body_param body "inclusive" string_of_bool inclusive in
    let body = Request.maybe_add_form_encoded_body_param body "jurisdiction" (fun x -> x) jurisdiction in
    let body = Request.add_form_encoded_body_param body "percentage" string_of_float percentage in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Tax_rate.of_yojson) resp body

let post_tax_rates_tax_rate ~tax_rate ?active ?description ?display_name ?(expand = []) ?jurisdiction ?metadata () =
    let open Lwt in
    let uri = Request.build_uri "/v1/tax_rates/{tax_rate}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "tax_rate" (fun x -> x) tax_rate in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "active" string_of_bool active in
    let body = Request.maybe_add_form_encoded_body_param body "description" (fun x -> x) description in
    let body = Request.maybe_add_form_encoded_body_param body "display_name" (fun x -> x) display_name in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "jurisdiction" (fun x -> x) jurisdiction in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Tax_rate.of_yojson) resp body

let post_terminal_connection_tokens ?(expand = []) ?location () =
    let open Lwt in
    let uri = Request.build_uri "/v1/terminal/connection_tokens" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "location" (fun x -> x) location in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Terminal_connection_token.of_yojson) resp body

let post_terminal_locations ~address ~display_name ?(expand = []) ?metadata () =
    let open Lwt in
    let uri = Request.build_uri "/v1/terminal/locations" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param body "address" .show address in
    let body = Request.add_form_encoded_body_param body "display_name" (fun x -> x) display_name in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Terminal_location.of_yojson) resp body

let post_terminal_locations_location ~location ?address ?display_name ?(expand = []) ?metadata () =
    let open Lwt in
    let uri = Request.build_uri "/v1/terminal/locations/{location}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "location" (fun x -> x) location in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "address" .show address in
    let body = Request.maybe_add_form_encoded_body_param body "display_name" (fun x -> x) display_name in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Terminal_location.of_yojson) resp body

let post_terminal_readers ~registration_code ?(expand = []) ?label ?location ?metadata () =
    let open Lwt in
    let uri = Request.build_uri "/v1/terminal/readers" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "label" (fun x -> x) label in
    let body = Request.maybe_add_form_encoded_body_param body "location" (fun x -> x) location in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.add_form_encoded_body_param body "registration_code" (fun x -> x) registration_code in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Terminal_reader.of_yojson) resp body

let post_terminal_readers_reader ~reader ?(expand = []) ?label ?metadata () =
    let open Lwt in
    let uri = Request.build_uri "/v1/terminal/readers/{reader}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "reader" (fun x -> x) reader in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "label" (fun x -> x) label in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Terminal_reader.of_yojson) resp body

let post_tokens ?account ?bank_account ?card ?customer ?cvc_update ?(expand = []) ?person ?pii () =
    let open Lwt in
    let uri = Request.build_uri "/v1/tokens" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "account" .show account in
    let body = Request.maybe_add_form_encoded_body_param body "bank_account" .show bank_account in
    let body = Request.maybe_add_form_encoded_body_param body "card" .show card in
    let body = Request.maybe_add_form_encoded_body_param body "customer" (fun x -> x) customer in
    let body = Request.maybe_add_form_encoded_body_param body "cvc_update" .show cvc_update in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "person" .show person in
    let body = Request.maybe_add_form_encoded_body_param body "pii" .show pii in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Token.of_yojson) resp body

let post_topups ~amount ~currency ?description ?(expand = []) ?metadata ?source ?statement_descriptor ?transfer_group () =
    let open Lwt in
    let uri = Request.build_uri "/v1/topups" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param body "amount" Int32.to_string amount in
    let body = Request.add_form_encoded_body_param body "currency" (fun x -> x) currency in
    let body = Request.maybe_add_form_encoded_body_param body "description" (fun x -> x) description in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "source" (fun x -> x) source in
    let body = Request.maybe_add_form_encoded_body_param body "statement_descriptor" (fun x -> x) statement_descriptor in
    let body = Request.maybe_add_form_encoded_body_param body "transfer_group" (fun x -> x) transfer_group in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Topup.of_yojson) resp body

let post_topups_topup ~topup ?description ?(expand = []) ?metadata () =
    let open Lwt in
    let uri = Request.build_uri "/v1/topups/{topup}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "topup" (fun x -> x) topup in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "description" (fun x -> x) description in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Topup.of_yojson) resp body

let post_topups_topup_cancel ~topup ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/topups/{topup}/cancel" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "topup" (fun x -> x) topup in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Topup.of_yojson) resp body

let post_transfers ~currency ~destination ?amount ?description ?(expand = []) ?source_transaction ?source_type ?transfer_group () =
    let open Lwt in
    let uri = Request.build_uri "/v1/transfers" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "amount" Int32.to_string amount in
    let body = Request.add_form_encoded_body_param body "currency" (fun x -> x) currency in
    let body = Request.maybe_add_form_encoded_body_param body "description" (fun x -> x) description in
    let body = Request.add_form_encoded_body_param body "destination" (fun x -> x) destination in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "source_transaction" (fun x -> x) source_transaction in
    let body = Request.maybe_add_form_encoded_body_param body "source_type" Enums.show_source_type source_type in
    let body = Request.maybe_add_form_encoded_body_param body "transfer_group" (fun x -> x) transfer_group in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Transfer.of_yojson) resp body

let post_transfers_id_reversals ~id ?amount ?description ?(expand = []) ?metadata ?refund_application_fee () =
    let open Lwt in
    let uri = Request.build_uri "/v1/transfers/{id}/reversals" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "amount" Int32.to_string amount in
    let body = Request.maybe_add_form_encoded_body_param body "description" (fun x -> x) description in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "refund_application_fee" string_of_bool refund_application_fee in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Transfer_reversal.of_yojson) resp body

let post_transfers_transfer ~transfer ?description ?(expand = []) ?metadata () =
    let open Lwt in
    let uri = Request.build_uri "/v1/transfers/{transfer}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "transfer" (fun x -> x) transfer in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "description" (fun x -> x) description in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Transfer.of_yojson) resp body

let post_transfers_transfer_reversals_id ~id ~transfer ?(expand = []) ?metadata () =
    let open Lwt in
    let uri = Request.build_uri "/v1/transfers/{transfer}/reversals/{id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let uri = Request.replace_path_param uri "transfer" (fun x -> x) transfer in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Transfer_reversal.of_yojson) resp body

let post_webhook_endpoints ~enabled_events ~url ?api_version ?connect ?description ?(expand = []) ?metadata () =
    let open Lwt in
    let uri = Request.build_uri "/v1/webhook_endpoints" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "api_version" Enums.show_api_version api_version in
    let body = Request.maybe_add_form_encoded_body_param body "connect" string_of_bool connect in
    let body = Request.maybe_add_form_encoded_body_param body "description" (fun x -> x) description in
    let body = Request.add_form_encoded_body_param_list body "enabled_events" (List.map Enums.show_enabled_events) enabled_events in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.add_form_encoded_body_param body "url" (fun x -> x) url in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Webhook_endpoint.of_yojson) resp body

let post_webhook_endpoints_webhook_endpoint ~webhook_endpoint ?description ?disabled ?(enabled_events = []) ?(expand = []) ?metadata ?url () =
    let open Lwt in
    let uri = Request.build_uri "/v1/webhook_endpoints/{webhook_endpoint}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "webhook_endpoint" (fun x -> x) webhook_endpoint in
    let body = Request.init_form_encoded_body () in
    let body = Request.maybe_add_form_encoded_body_param body "description" (fun x -> x) description in
    let body = Request.maybe_add_form_encoded_body_param body "disabled" string_of_bool disabled in
    let body = Request.add_form_encoded_body_param_list body "enabled_events" (List.map Enums.show_enabled_events) enabled_events in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.maybe_add_form_encoded_body_param body "metadata" .show metadata in
    let body = Request.maybe_add_form_encoded_body_param body "url" (fun x -> x) url in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Webhook_endpoint.of_yojson) resp body

let put_account_logout ~account ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/account/logout" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param body "account" (fun x -> x) account in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body  resp body

let put_accounts_account_logout ~account ?(expand = []) () =
    let open Lwt in
    let uri = Request.build_uri "/v1/accounts/{account}/logout" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "account" (fun x -> x) account in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param_list body "expand" (List.map (fun x -> x))(fun x -> x) expand in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body  resp body

