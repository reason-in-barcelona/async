(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 * Schema Issuing_settlement.t : When a non-stripe BIN is used, any use of an [issued card](https://stripe.com/docs/issuing) must be settled directly with the card network. The net amount owed is represented by an Issuing `Settlement` object.
 *)

type t = {
    (* The Bank Identification Number reflecting this settlement record. *)
    bin: string;
    (* The date that the transactions are cleared and posted to user's accounts. *)
    clearing_date: int32;
    (* Time at which the object was created. Measured in seconds since the Unix epoch. *)
    created: int32;
    (* Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). *)
    currency: string;
    (* Unique identifier for the object. *)
    id: string;
    (* The total interchange received as reimbursement for the transactions. *)
    interchange_fees: int32;
    (* Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. *)
    livemode: bool;
    (* Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. *)
    metadata: (string * string) list;
    (* The total net amount required to settle with the network. *)
    net_total: int32;
    (* The card network for this settlement report. One of [\''visa\''] *)
    network: Enums.network[@default `Visa];
    (* The total amount of fees owed to the network. *)
    network_fees: int32;
    (* The Settlement Identification Number assigned by the network. *)
    network_settlement_identifier: string;
    (* String representing the object's type. Objects of the same type share the same value. *)
    _object: Enums.issuing_settlement_object[@default `IssuingPeriodsettlement];
    (* One of `international` or `uk_national_net`. *)
    settlement_service: string;
    (* The total number of transactions reflected in this settlement. *)
    transaction_count: int32;
    (* The total transaction amount reflected in this settlement. *)
    transaction_volume: int32;
} [@@deriving yojson { strict = false }, show ];;

(** When a non-stripe BIN is used, any use of an [issued card](https://stripe.com/docs/issuing) must be settled directly with the card network. The net amount owed is represented by an Issuing `Settlement` object. *)
let create (bin : string) (clearing_date : int32) (created : int32) (currency : string) (id : string) (interchange_fees : int32) (livemode : bool) (metadata : (string * string) list) (net_total : int32) (network : Enums.network) (network_fees : int32) (network_settlement_identifier : string) (_object : Enums.issuing_settlement_object) (settlement_service : string) (transaction_count : int32) (transaction_volume : int32) : t = {
    bin = bin;
    clearing_date = clearing_date;
    created = created;
    currency = currency;
    id = id;
    interchange_fees = interchange_fees;
    livemode = livemode;
    metadata = metadata;
    net_total = net_total;
    network = network;
    network_fees = network_fees;
    network_settlement_identifier = network_settlement_identifier;
    _object = _object;
    settlement_service = settlement_service;
    transaction_count = transaction_count;
    transaction_volume = transaction_volume;
}

