(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 * Schema Customer.t : `Customer` objects allow you to perform recurring charges, and to track multiple charges, that are associated with the same customer. The API allows you to create, delete, and update your customers. You can retrieve individual customers as well as a list of all your customers.  Related guide: [Save a card during payment](https://stripe.com/docs/payments/save-during-payment).
 *)

type t = {
    (* The customer's address. *)
    address: Any_ofaddress.t option [@default None];
    (* Current balance, if any, being stored on the customer. If negative, the customer has credit to apply to their next invoice. If positive, the customer has an amount owed that will be added to their next invoice. The balance does not refer to any unpaid invoices; it solely takes into account amounts that have yet to be successfully applied to any invoice. This balance is only taken into account as invoices are finalized. *)
    balance: int32 option [@default None];
    (* Time at which the object was created. Measured in seconds since the Unix epoch. *)
    created: int32;
    (* Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) the customer can be charged in for recurring billing purposes. *)
    currency: string option [@default None];
    (* ID of the default payment source for the customer.  If you are using payment methods created via the PaymentMethods API, see the [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) field instead. *)
    default_source: Any_ofstringalipay_accountbank_accountbitcoin_receivercardsource.t option [@default None];
    (* When the customer's latest invoice is billed by charging automatically, `delinquent` is `true` if the invoice's latest charge failed. When the customer's latest invoice is billed by sending an invoice, `delinquent` is `true` if the invoice isn't paid by its due date.  If an invoice is marked uncollectible by [dunning](https://stripe.com/docs/billing/automatic-collection), `delinquent` doesn't get reset to `false`. *)
    delinquent: bool option [@default None];
    (* An arbitrary string attached to the object. Often useful for displaying to users. *)
    description: string option [@default None];
    (* Describes the current discount active on the customer, if there is one. *)
    discount: Any_ofdiscount.t option [@default None];
    (* The customer's email address. *)
    email: string option [@default None];
    (* Unique identifier for the object. *)
    id: string;
    (* The prefix for the customer used to generate unique invoice numbers. *)
    invoice_prefix: string option [@default None];
    invoice_settings: Invoice_setting_customer_setting.t option [@default None];
    (* Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. *)
    livemode: bool;
    (* Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. *)
    metadata: (string * string) list;
    (* The customer's full name or business name. *)
    name: string option [@default None];
    (* The suffix of the customer's next invoice number, e.g., 0001. *)
    next_invoice_sequence: int32 option [@default None];
    (* String representing the object's type. Objects of the same type share the same value. *)
    _object: Enums.customer_object[@default `Customer];
    (* The customer's phone number. *)
    phone: string option [@default None];
    (* The customer's preferred locales (languages), ordered by preference. *)
    preferred_locales: string list;
    (* Mailing and shipping address for the customer. Appears on invoices emailed to this customer. *)
    shipping: Any_ofshipping.t option [@default None];
    sources: Apms_sources_source_list_1.t option [@default None];
    subscriptions: Subscription_list_1.t option [@default None];
    (* Describes the customer's tax exemption status. One of `none`, `exempt`, or `reverse`. When set to `reverse`, invoice and receipt PDFs include the text **\''Reverse charge\''**. *)
    tax_exempt: Enums.customer_tax_exempt option [@default None];
    tax_ids: Tax_i_ds_list_1.t option [@default None];
} [@@deriving yojson { strict = false }, show ];;

(** `Customer` objects allow you to perform recurring charges, and to track multiple charges, that are associated with the same customer. The API allows you to create, delete, and update your customers. You can retrieve individual customers as well as a list of all your customers.  Related guide: [Save a card during payment](https://stripe.com/docs/payments/save-during-payment). *)
let create (created : int32) (id : string) (livemode : bool) (_object : Enums.customer_object) : t = {
    address = None;
    balance = None;
    created = created;
    currency = None;
    default_source = None;
    delinquent = None;
    description = None;
    discount = None;
    email = None;
    id = id;
    invoice_prefix = None;
    invoice_settings = None;
    livemode = livemode;
    metadata = [];
    name = None;
    next_invoice_sequence = None;
    _object = _object;
    phone = None;
    preferred_locales = [];
    shipping = None;
    sources = None;
    subscriptions = None;
    tax_exempt = None;
    tax_ids = None;
}

