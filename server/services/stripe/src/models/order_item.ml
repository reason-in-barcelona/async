(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 * Schema Order_item.t : A representation of the constituent items of any given order. Can be used to represent [SKUs](https://stripe.com/docs/api#skus), shipping costs, or taxes owed on the order.  Related guide: [Orders](https://stripe.com/docs/orders/guide).
 *)

type t = {
    (* A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for Â¥1, Japanese Yen being a zero-decimal currency) representing the total amount for the line item. *)
    amount: int32;
    (* Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). *)
    currency: string;
    (* Description of the line item, meant to be displayable to the user (e.g., `\''Express shipping\''`). *)
    description: string;
    (* String representing the object's type. Objects of the same type share the same value. *)
    _object: Enums.order_item_object[@default `Order_item];
    (* The ID of the associated object for this line item. Expandable if not null (e.g., expandable to a SKU). *)
    parent: Any_ofstringsku.t option [@default None];
    (* A positive integer representing the number of instances of `parent` that are included in this order item. Applicable/present only if `type` is `sku`. *)
    quantity: int32 option [@default None];
    (* The type of line item. One of `sku`, `tax`, `shipping`, or `discount`. *)
    _type: string;
} [@@deriving yojson { strict = false }, show ];;

(** A representation of the constituent items of any given order. Can be used to represent [SKUs](https://stripe.com/docs/api#skus), shipping costs, or taxes owed on the order.  Related guide: [Orders](https://stripe.com/docs/orders/guide). *)
let create (amount : int32) (currency : string) (description : string) (_object : Enums.order_item_object) (_type : string) : t = {
    amount = amount;
    currency = currency;
    description = description;
    _object = _object;
    parent = None;
    quantity = None;
    _type = _type;
}

