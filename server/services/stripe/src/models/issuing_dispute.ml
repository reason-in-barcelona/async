(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 * Schema Issuing_dispute.t : As a [card issuer](https://stripe.com/docs/issuing), you can dispute transactions that the cardholder does not recognize, suspects to be fraudulent, or has other issues with.  Related guide: [Disputing Transactions](https://stripe.com/docs/issuing/purchases/disputes)
 *)

type t = {
    (* Disputed amount. Usually the amount of the `disputed_transaction`, but can differ (usually because of currency fluctuation). *)
    amount: int32 option [@default None];
    (* List of balance transactions associated with the dispute. *)
    balance_transactions: Balance_transaction.t list;
    (* Time at which the object was created. Measured in seconds since the Unix epoch. *)
    created: int32 option [@default None];
    (* The currency the `disputed_transaction` was made in. *)
    currency: string option [@default None];
    evidence: Issuing_dispute_evidence.t option [@default None];
    (* Unique identifier for the object. *)
    id: string;
    (* Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. *)
    livemode: bool;
    (* Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. *)
    metadata: (string * string) list;
    (* String representing the object's type. Objects of the same type share the same value. *)
    _object: Enums.issuing_dispute_object[@default `IssuingPerioddispute];
    (* Current status of the dispute. *)
    status: Enums.issuing_dispute_status option [@default None];
    (* The transaction being disputed. *)
    transaction: Any_ofstringissuing_transaction.t;
} [@@deriving yojson { strict = false }, show ];;

(** As a [card issuer](https://stripe.com/docs/issuing), you can dispute transactions that the cardholder does not recognize, suspects to be fraudulent, or has other issues with.  Related guide: [Disputing Transactions](https://stripe.com/docs/issuing/purchases/disputes) *)
let create (id : string) (livemode : bool) (_object : Enums.issuing_dispute_object) (transaction : Any_ofstringissuing_transaction.t) : t = {
    amount = None;
    balance_transactions = [];
    created = None;
    currency = None;
    evidence = None;
    id = id;
    livemode = livemode;
    metadata = [];
    _object = _object;
    status = None;
    transaction = transaction;
}

