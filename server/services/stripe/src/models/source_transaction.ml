(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 * Schema Source_transaction.t : Some payment methods have no required amount that a customer must send. Customers can be instructed to send any amount, and it can be made up of multiple transactions. As such, sources can have multiple associated transactions.
 *)

type t = {
    ach_credit_transfer: Source_transaction_ach_credit_transfer_data.t option [@default None];
    (* A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for Â¥1, Japanese Yen being a zero-decimal currency) representing the amount your customer has pushed to the receiver. *)
    amount: int32;
    chf_credit_transfer: Source_transaction_chf_credit_transfer_data.t option [@default None];
    (* Time at which the object was created. Measured in seconds since the Unix epoch. *)
    created: int32;
    (* Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). *)
    currency: string;
    gbp_credit_transfer: Source_transaction_gbp_credit_transfer_data.t option [@default None];
    (* Unique identifier for the object. *)
    id: string;
    (* Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. *)
    livemode: bool;
    (* String representing the object's type. Objects of the same type share the same value. *)
    _object: Enums.source_transaction_object[@default `Source_transaction];
    paper_check: Source_transaction_paper_check_data.t option [@default None];
    sepa_credit_transfer: Source_transaction_sepa_credit_transfer_data.t option [@default None];
    (* The ID of the source this transaction is attached to. *)
    source: string;
    (* The status of the transaction, one of `succeeded`, `pending`, or `failed`. *)
    status: string;
    (* The type of source this transaction is attached to. *)
    _type: Enums.source_transaction_type;
} [@@deriving yojson { strict = false }, show ];;

(** Some payment methods have no required amount that a customer must send. Customers can be instructed to send any amount, and it can be made up of multiple transactions. As such, sources can have multiple associated transactions. *)
let create (amount : int32) (created : int32) (currency : string) (id : string) (livemode : bool) (_object : Enums.source_transaction_object) (source : string) (status : string) (_type : Enums.source_transaction_type) : t = {
    ach_credit_transfer = None;
    amount = amount;
    chf_credit_transfer = None;
    created = created;
    currency = currency;
    gbp_credit_transfer = None;
    id = id;
    livemode = livemode;
    _object = _object;
    paper_check = None;
    sepa_credit_transfer = None;
    source = source;
    status = status;
    _type = _type;
}

