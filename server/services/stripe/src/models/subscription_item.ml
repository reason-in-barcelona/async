(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 * Schema Subscription_item.t : Subscription items allow you to create customer subscriptions with more than one plan, making it easy to represent complex billing relationships.
 *)

type t = {
    (* Define thresholds at which an invoice will be sent, and the related subscription advanced to a new billing period *)
    billing_thresholds: Any_ofsubscription_item_billing_thresholds.t option [@default None];
    (* Time at which the object was created. Measured in seconds since the Unix epoch. *)
    created: int32;
    (* Unique identifier for the object. *)
    id: string;
    (* Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. *)
    metadata: (string * string) list;
    (* String representing the object's type. Objects of the same type share the same value. *)
    _object: Enums.deleted_subscription_item_object[@default `Subscription_item];
    price: Price.t;
    (* The [quantity](https://stripe.com/docs/subscriptions/quantities) of the plan to which the customer should be subscribed. *)
    quantity: int32 option [@default None];
    (* The `subscription` this `subscription_item` belongs to. *)
    subscription: string;
    (* The tax rates which apply to this `subscription_item`. When set, the `default_tax_rates` on the subscription do not apply to this `subscription_item`. *)
    tax_rates: Tax_rate.t list;
} [@@deriving yojson { strict = false }, show ];;

(** Subscription items allow you to create customer subscriptions with more than one plan, making it easy to represent complex billing relationships. *)
let create (created : int32) (id : string) (metadata : (string * string) list) (_object : Enums.deleted_subscription_item_object) (price : Price.t) (subscription : string) : t = {
    billing_thresholds = None;
    created = created;
    id = id;
    metadata = metadata;
    _object = _object;
    price = price;
    quantity = None;
    subscription = subscription;
    tax_rates = [];
}

