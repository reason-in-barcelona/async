(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 * Schema Billing_portal_session.t : A session describes the instantiation of the customer portal for a particular customer. By visiting the session's URL, the customer can manage their subscriptions and billing details. For security reasons, sessions are short-lived and will expire if the customer does not visit the URL. Create sessions on-demand when customers intend to manage their subscriptions and billing details.  Integration guide: [Billing customer portal](https://stripe.com/docs/billing/subscriptions/integrating-customer-portal).
 *)

type t = {
    (* Time at which the object was created. Measured in seconds since the Unix epoch. *)
    created: int32;
    (* The ID of the customer for this session. *)
    customer: string;
    (* Unique identifier for the object. *)
    id: string;
    (* Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. *)
    livemode: bool;
    (* String representing the object's type. Objects of the same type share the same value. *)
    _object: Enums.billing_portal_session_object[@default `Billing_portalPeriodsession];
    (* The URL to which Stripe should send customers when they click on the link to return to your website. *)
    return_url: string;
    (* The short-lived URL of the session giving customers access to the customer portal. *)
    url: string;
} [@@deriving yojson { strict = false }, show ];;

(** A session describes the instantiation of the customer portal for a particular customer. By visiting the session's URL, the customer can manage their subscriptions and billing details. For security reasons, sessions are short-lived and will expire if the customer does not visit the URL. Create sessions on-demand when customers intend to manage their subscriptions and billing details.  Integration guide: [Billing customer portal](https://stripe.com/docs/billing/subscriptions/integrating-customer-portal). *)
let create (created : int32) (customer : string) (id : string) (livemode : bool) (_object : Enums.billing_portal_session_object) (return_url : string) (url : string) : t = {
    created = created;
    customer = customer;
    id = id;
    livemode = livemode;
    _object = _object;
    return_url = return_url;
    url = url;
}

