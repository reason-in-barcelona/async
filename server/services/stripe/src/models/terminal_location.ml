(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 * Schema Terminal_location.t : A Location represents a grouping of readers.  Related guide: [Fleet Management](https://stripe.com/docs/terminal/readers/fleet-management#create).
 *)

type t = {
    address: Address.t;
    (* The display name of the location. *)
    display_name: string;
    (* Unique identifier for the object. *)
    id: string;
    (* Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. *)
    livemode: bool;
    (* Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. *)
    metadata: (string * string) list;
    (* String representing the object's type. Objects of the same type share the same value. *)
    _object: Enums.deleted_terminal_location_object[@default `TerminalPeriodlocation];
} [@@deriving yojson { strict = false }, show ];;

(** A Location represents a grouping of readers.  Related guide: [Fleet Management](https://stripe.com/docs/terminal/readers/fleet-management#create). *)
let create (address : Address.t) (display_name : string) (id : string) (livemode : bool) (metadata : (string * string) list) (_object : Enums.deleted_terminal_location_object) : t = {
    address = address;
    display_name = display_name;
    id = id;
    livemode = livemode;
    metadata = metadata;
    _object = _object;
}

