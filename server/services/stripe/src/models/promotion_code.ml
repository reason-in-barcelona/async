(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 * Schema Promotion_code.t : A Promotion Code represents a customer-redeemable code for a coupon. It can be used to create multiple codes for a single coupon.
 *)

type t = {
    (* Whether the promotion code is currently active. A promotion code is only active if the coupon is also valid. *)
    active: bool;
    (* The customer-facing code. Regardless of case, this code must be unique across all active promotion codes for each customer. *)
    code: string;
    coupon: Coupon.t;
    (* Time at which the object was created. Measured in seconds since the Unix epoch. *)
    created: int32;
    (* The customer that this promotion code can be used by. *)
    customer: Any_ofstringcustomerdeleted_customer.t option [@default None];
    (* Date at which the promotion code can no longer be redeemed. *)
    expires_at: int32 option [@default None];
    (* Unique identifier for the object. *)
    id: string;
    (* Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. *)
    livemode: bool;
    (* Maximum number of times this promotion code can be redeemed. *)
    max_redemptions: int32 option [@default None];
    (* Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. *)
    metadata: (string * string) list;
    (* String representing the object's type. Objects of the same type share the same value. *)
    _object: Enums.promotion_code_object[@default `Promotion_code];
    restrictions: Promotion_codes_resource_restrictions.t;
    (* Number of times this promotion code has been used. *)
    times_redeemed: int32;
} [@@deriving yojson { strict = false }, show ];;

(** A Promotion Code represents a customer-redeemable code for a coupon. It can be used to create multiple codes for a single coupon. *)
let create (active : bool) (code : string) (coupon : Coupon.t) (created : int32) (id : string) (livemode : bool) (_object : Enums.promotion_code_object) (restrictions : Promotion_codes_resource_restrictions.t) (times_redeemed : int32) : t = {
    active = active;
    code = code;
    coupon = coupon;
    created = created;
    customer = None;
    expires_at = None;
    id = id;
    livemode = livemode;
    max_redemptions = None;
    metadata = [];
    _object = _object;
    restrictions = restrictions;
    times_redeemed = times_redeemed;
}

