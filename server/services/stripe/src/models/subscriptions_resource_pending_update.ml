(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 * Schema Subscriptions_resource_pending_update.t : Pending Updates store the changes pending from a previous update that will be applied to the Subscription upon successful payment.
 *)

type t = {
    (* If the update is applied, determines the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices. *)
    billing_cycle_anchor: int32 option [@default None];
    (* The point after which the changes reflected by this update will be discarded and no longer applied. *)
    expires_at: int32;
    (* List of subscription items, each with an attached plan, that will be set if the update is applied. *)
    subscription_items: Subscription_item.t list;
    (* Unix timestamp representing the end of the trial period the customer will get before being charged for the first time, if the update is applied. *)
    trial_end: int32 option [@default None];
    (* Indicates if a plan's `trial_period_days` should be applied to the subscription. Setting `trial_end` per subscription is preferred, and this defaults to `false`. Setting this flag to `true` together with `trial_end` is not allowed. *)
    trial_from_plan: bool option [@default None];
} [@@deriving yojson { strict = false }, show ];;

(** Pending Updates store the changes pending from a previous update that will be applied to the Subscription upon successful payment. *)
let create (expires_at : int32) : t = {
    billing_cycle_anchor = None;
    expires_at = expires_at;
    subscription_items = [];
    trial_end = None;
    trial_from_plan = None;
}

