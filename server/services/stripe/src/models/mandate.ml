(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 * Schema Mandate.t : A Mandate is a record of the permission a customer has given you to debit their payment method.
 *)

type t = {
    customer_acceptance: Customer_acceptance.t;
    (* Unique identifier for the object. *)
    id: string;
    (* Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. *)
    livemode: bool;
    multi_use: Yojson.Safe.t option [@default None];
    (* String representing the object's type. Objects of the same type share the same value. *)
    _object: Enums.mandate_object[@default `Mandate];
    (* ID of the payment method associated with this mandate. *)
    payment_method: Any_ofstringpayment_method.t;
    payment_method_details: Mandate_payment_method_details.t;
    single_use: Mandate_single_use.t option [@default None];
    (* The status of the mandate, which indicates whether it can be used to initiate a payment. *)
    status: Enums.au_becs_debit_payments;
    (* The type of the mandate. *)
    _type: Enums.mandate_type;
} [@@deriving yojson { strict = false }, show ];;

(** A Mandate is a record of the permission a customer has given you to debit their payment method. *)
let create (customer_acceptance : Customer_acceptance.t) (id : string) (livemode : bool) (_object : Enums.mandate_object) (payment_method : Any_ofstringpayment_method.t) (payment_method_details : Mandate_payment_method_details.t) (status : Enums.au_becs_debit_payments) (_type : Enums.mandate_type) : t = {
    customer_acceptance = customer_acceptance;
    id = id;
    livemode = livemode;
    multi_use = None;
    _object = _object;
    payment_method = payment_method;
    payment_method_details = payment_method_details;
    single_use = None;
    status = status;
    _type = _type;
}

