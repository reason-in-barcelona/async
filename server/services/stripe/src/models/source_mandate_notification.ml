(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 * Schema Source_mandate_notification.t : Source mandate notifications should be created when a notification related to a source mandate must be sent to the payer. They will trigger a webhook or deliver an email to the customer.
 *)

type t = {
    acss_debit: Source_mandate_notification_acss_debit_data.t option [@default None];
    (* A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for Â¥1, Japanese Yen being a zero-decimal currency) representing the amount associated with the mandate notification. The amount is expressed in the currency of the underlying source. Required if the notification type is `debit_initiated`. *)
    amount: int32 option [@default None];
    bacs_debit: Source_mandate_notification_bacs_debit_data.t option [@default None];
    (* Time at which the object was created. Measured in seconds since the Unix epoch. *)
    created: int32;
    (* Unique identifier for the object. *)
    id: string;
    (* Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. *)
    livemode: bool;
    (* String representing the object's type. Objects of the same type share the same value. *)
    _object: Enums.source_mandate_notification_object[@default `Source_mandate_notification];
    (* The reason of the mandate notification. Valid reasons are `mandate_confirmed` or `debit_initiated`. *)
    reason: string;
    sepa_debit: Source_mandate_notification_sepa_debit_data.t option [@default None];
    source: Source.t;
    (* The status of the mandate notification. Valid statuses are `pending` or `submitted`. *)
    status: string;
    (* The type of source this mandate notification is attached to. Should be the source type identifier code for the payment method, such as `three_d_secure`. *)
    _type: string;
} [@@deriving yojson { strict = false }, show ];;

(** Source mandate notifications should be created when a notification related to a source mandate must be sent to the payer. They will trigger a webhook or deliver an email to the customer. *)
let create (created : int32) (id : string) (livemode : bool) (_object : Enums.source_mandate_notification_object) (reason : string) (source : Source.t) (status : string) (_type : string) : t = {
    acss_debit = None;
    amount = None;
    bacs_debit = None;
    created = created;
    id = id;
    livemode = livemode;
    _object = _object;
    reason = reason;
    sepa_debit = None;
    source = source;
    status = status;
    _type = _type;
}

