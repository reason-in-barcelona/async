(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 * Schema Order_return.t : A return represents the full or partial return of a number of [order items](https://stripe.com/docs/api#order_items). Returns always belong to an order, and may optionally contain a refund.  Related guide: [Handling Returns](https://stripe.com/docs/orders/guide#handling-returns).
 *)

type t = {
    (* A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for Â¥1, Japanese Yen being a zero-decimal currency) representing the total amount for the returned line item. *)
    amount: int32;
    (* Time at which the object was created. Measured in seconds since the Unix epoch. *)
    created: int32;
    (* Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). *)
    currency: string;
    (* Unique identifier for the object. *)
    id: string;
    (* The items included in this order return. *)
    items: Order_item.t list;
    (* Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. *)
    livemode: bool;
    (* String representing the object's type. Objects of the same type share the same value. *)
    _object: Enums.order_return_object[@default `Order_return];
    (* The order that this return includes items from. *)
    order: Any_ofstringorder.t option [@default None];
    (* The ID of the refund issued for this return. *)
    refund: Any_ofstringrefund.t option [@default None];
} [@@deriving yojson { strict = false }, show ];;

(** A return represents the full or partial return of a number of [order items](https://stripe.com/docs/api#order_items). Returns always belong to an order, and may optionally contain a refund.  Related guide: [Handling Returns](https://stripe.com/docs/orders/guide#handling-returns). *)
let create (amount : int32) (created : int32) (currency : string) (id : string) (items : Order_item.t list) (livemode : bool) (_object : Enums.order_return_object) : t = {
    amount = amount;
    created = created;
    currency = currency;
    id = id;
    items = items;
    livemode = livemode;
    _object = _object;
    order = None;
    refund = None;
}

