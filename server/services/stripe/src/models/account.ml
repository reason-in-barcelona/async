(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 * Schema Account.t : This is an object representing a Stripe account. You can retrieve it to see properties on the account like its current e-mail address or if the account is enabled yet to make live charges.  Some properties, marked below, are available only to platforms that want to [create and manage Express or Custom accounts](https://stripe.com/docs/connect/accounts).
 *)

type t = {
    (* Business information about the account. *)
    business_profile: Any_ofaccount_business_profile.t option [@default None];
    (* The business type. *)
    business_type: Enums.business_type option [@default None];
    capabilities: Account_capabilities.t option [@default None];
    (* Whether the account can create live charges. *)
    charges_enabled: bool option [@default None];
    company: Legal_entity_company.t option [@default None];
    (* The account's country. *)
    country: string option [@default None];
    (* Time at which the object was created. Measured in seconds since the Unix epoch. *)
    created: int32 option [@default None];
    (* Three-letter ISO currency code representing the default currency for the account. This must be a currency that [Stripe supports in the account's country](https://stripe.com/docs/payouts). *)
    default_currency: string option [@default None];
    (* Whether account details have been submitted. Standard accounts cannot receive payouts before this is true. *)
    details_submitted: bool option [@default None];
    (* The primary user's email address. *)
    email: string option [@default None];
    external_accounts: External_account_list_1.t option [@default None];
    (* Unique identifier for the object. *)
    id: string;
    individual: Person.t option [@default None];
    (* Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. *)
    metadata: (string * string) list;
    (* String representing the object's type. Objects of the same type share the same value. *)
    _object: Enums.account_object[@default `Account];
    (* Whether Stripe can send payouts to this account. *)
    payouts_enabled: bool option [@default None];
    requirements: Account_requirements.t option [@default None];
    (* Options for customizing how the account functions within Stripe. *)
    settings: Any_ofaccount_settings.t option [@default None];
    tos_acceptance: Account_tos_acceptance.t option [@default None];
    (* The Stripe account type. Can be `standard`, `express`, or `custom`. *)
    _type: Enums.type_0 option [@default None];
} [@@deriving yojson { strict = false }, show ];;

(** This is an object representing a Stripe account. You can retrieve it to see properties on the account like its current e-mail address or if the account is enabled yet to make live charges.  Some properties, marked below, are available only to platforms that want to [create and manage Express or Custom accounts](https://stripe.com/docs/connect/accounts). *)
let create (id : string) (_object : Enums.account_object) : t = {
    business_profile = None;
    business_type = None;
    capabilities = None;
    charges_enabled = None;
    company = None;
    country = None;
    created = None;
    default_currency = None;
    details_submitted = None;
    email = None;
    external_accounts = None;
    id = id;
    individual = None;
    metadata = [];
    _object = _object;
    payouts_enabled = None;
    requirements = None;
    settings = None;
    tos_acceptance = None;
    _type = None;
}

