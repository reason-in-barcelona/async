(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 * Schema Workflow_run.t : An invocation of a workflow
 *)

type t = {
    (* The ID of the workflow run. *)
    id: int32;
    (* The name of the workflow run. *)
    name: string option [@default None];
    node_id: string;
    head_branch: string option;
    (* The SHA of the head commit that points to the version of the worflow being run. *)
    head_sha: string;
    (* The auto incrementing run number for the workflow run. *)
    run_number: int32;
    event: string;
    status: string option;
    conclusion: string option;
    (* The ID of the parent workflow. *)
    workflow_id: int32;
    (* The URL to the workflow run. *)
    url: string;
    html_url: string;
    pull_requests: Pull_request_minimal.t list;
    created_at: string option;
    updated_at: string option;
    (* The URL to the jobs for the workflow run. *)
    jobs_url: string;
    (* The URL to download the logs for the workflow run. *)
    logs_url: string;
    (* The URL to the associated check suite. *)
    check_suite_url: string;
    (* The URL to the artifacts for the workflow run. *)
    artifacts_url: string;
    (* The URL to cancel the workflow run. *)
    cancel_url: string;
    (* The URL to rerun the workflow run. *)
    rerun_url: string;
    (* The URL to the workflow. *)
    workflow_url: string;
    head_commit: Simple_commit.t;
    repository: Minimal_repository.t;
    head_repository: Minimal_repository.t;
    head_repository_id: int32 option [@default None];
} [@@deriving yojson { strict = false }, show ];;

(** An invocation of a workflow *)
let create (id : int32) (node_id : string) (head_branch : string option) (head_sha : string) (run_number : int32) (event : string) (status : string option) (conclusion : string option) (workflow_id : int32) (url : string) (html_url : string) (pull_requests : Pull_request_minimal.t list) (created_at : string option) (updated_at : string option) (jobs_url : string) (logs_url : string) (check_suite_url : string) (artifacts_url : string) (cancel_url : string) (rerun_url : string) (workflow_url : string) (head_commit : Simple_commit.t) (repository : Minimal_repository.t) (head_repository : Minimal_repository.t) : t = {
    id = id;
    name = None;
    node_id = node_id;
    head_branch = head_branch;
    head_sha = head_sha;
    run_number = run_number;
    event = event;
    status = status;
    conclusion = conclusion;
    workflow_id = workflow_id;
    url = url;
    html_url = html_url;
    pull_requests = pull_requests;
    created_at = created_at;
    updated_at = updated_at;
    jobs_url = jobs_url;
    logs_url = logs_url;
    check_suite_url = check_suite_url;
    artifacts_url = artifacts_url;
    cancel_url = cancel_url;
    rerun_url = rerun_url;
    workflow_url = workflow_url;
    head_commit = head_commit;
    repository = repository;
    head_repository = head_repository;
    head_repository_id = None;
}

