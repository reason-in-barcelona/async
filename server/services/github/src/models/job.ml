(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 * Schema Job.t : Information of a job execution in a workflow run
 *)

type t = {
    (* The id of the job. *)
    id: int32;
    (* The id of the associated workflow run. *)
    run_id: int32;
    run_url: string;
    node_id: string;
    (* The SHA of the commit that is being run. *)
    head_sha: string;
    url: string;
    html_url: string option;
    (* The phase of the lifecycle that the job is currently in. *)
    status: Enums.job_status;
    (* The outcome of the job. *)
    conclusion: string option;
    (* The time that the job started, in ISO 8601 format. *)
    started_at: string;
    (* The time that the job finished, in ISO 8601 format. *)
    completed_at: string option;
    (* The name of the job. *)
    name: string;
    (* Steps in this job. *)
    steps: Job_steps.t list;
    check_run_url: string;
} [@@deriving yojson { strict = false }, show ];;

(** Information of a job execution in a workflow run *)
let create (id : int32) (run_id : int32) (run_url : string) (node_id : string) (head_sha : string) (url : string) (html_url : string option) (status : Enums.job_status) (conclusion : string option) (started_at : string) (completed_at : string option) (name : string) (check_run_url : string) : t = {
    id = id;
    run_id = run_id;
    run_url = run_url;
    node_id = node_id;
    head_sha = head_sha;
    url = url;
    html_url = html_url;
    status = status;
    conclusion = conclusion;
    started_at = started_at;
    completed_at = completed_at;
    name = name;
    steps = [];
    check_run_url = check_run_url;
}

