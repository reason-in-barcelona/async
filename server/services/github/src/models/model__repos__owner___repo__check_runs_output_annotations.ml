(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 *)

type t = {
    (* The path of the file to add an annotation to. For example, `assets/css/main.css`. *)
    path: string;
    (* The start line of the annotation. *)
    start_line: int32;
    (* The end line of the annotation. *)
    end_line: int32;
    (* The start column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values. *)
    start_column: int32 option [@default None];
    (* The end column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values. *)
    end_column: int32 option [@default None];
    (* The level of the annotation. Can be one of `notice`, `warning`, or `failure`. *)
    annotation_level: Enums.annotation_level;
    (* A short description of the feedback for these lines of code. The maximum size is 64 KB. *)
    message: string;
    (* The title that represents the annotation. The maximum size is 255 characters. *)
    title: string option [@default None];
    (* Details about this annotation. The maximum size is 64 KB. *)
    raw_details: string option [@default None];
} [@@deriving yojson { strict = false }, show ];;

let create (path : string) (start_line : int32) (end_line : int32) (annotation_level : Enums.annotation_level) (message : string) : t = {
    path = path;
    start_line = start_line;
    end_line = end_line;
    start_column = None;
    end_column = None;
    annotation_level = annotation_level;
    message = message;
    title = None;
    raw_details = None;
}

