(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 *)

type t = {
    (* The file referenced in the tree. *)
    path: string option [@default None];
    (* The file mode; one of `100644` for file (blob), `100755` for executable (blob), `040000` for subdirectory (tree), `160000` for submodule (commit), or `120000` for a blob that specifies the path of a symlink. *)
    mode: Enums.repos__owner___repo__git_trees_tree_mode option [@default None];
    (* Either `blob`, `tree`, or `commit`. *)
    _type: Enums.repos__owner___repo__git_trees_tree_type option [@default None];
    (* The SHA1 checksum ID of the object in the tree. Also called `tree.sha`. If the value is `null` then the file will be deleted.      **Note:** Use either `tree.sha` or `content` to specify the contents of the entry. Using both `tree.sha` and `content` will return an error. *)
    sha: string option [@default None];
    (* The content you want this file to have. GitHub will write this blob out and use that SHA for this entry. Use either this, or `tree.sha`.      **Note:** Use either `tree.sha` or `content` to specify the contents of the entry. Using both `tree.sha` and `content` will return an error. *)
    content: string option [@default None];
} [@@deriving yojson { strict = false }, show ];;

let create () : t = {
    path = None;
    mode = None;
    _type = None;
    sha = None;
    content = None;
}

