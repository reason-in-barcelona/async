(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 * Schema Gpg_key.t : A unique encryption key
 *)

type t = {
    id: int32;
    primary_key_id: int32 option;
    key_id: string;
    public_key: string;
    emails: Gpg_key_emails.t list;
    subkeys: Gpg_key_subkeys.t list;
    can_sign: bool;
    can_encrypt_comms: bool;
    can_encrypt_storage: bool;
    can_certify: bool;
    created_at: string;
    expires_at: string option;
    raw_key: string option;
} [@@deriving yojson { strict = false }, show ];;

(** A unique encryption key *)
let create (id : int32) (primary_key_id : int32 option) (key_id : string) (public_key : string) (emails : Gpg_key_emails.t list) (subkeys : Gpg_key_subkeys.t list) (can_sign : bool) (can_encrypt_comms : bool) (can_encrypt_storage : bool) (can_certify : bool) (created_at : string) (expires_at : string option) (raw_key : string option) : t = {
    id = id;
    primary_key_id = primary_key_id;
    key_id = key_id;
    public_key = public_key;
    emails = emails;
    subkeys = subkeys;
    can_sign = can_sign;
    can_encrypt_comms = can_encrypt_comms;
    can_encrypt_storage = can_encrypt_storage;
    can_certify = can_certify;
    created_at = created_at;
    expires_at = expires_at;
    raw_key = raw_key;
}

