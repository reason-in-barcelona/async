(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 * Schema Deployment.t : A request for a specific ref(branch,sha,tag) to be deployed
 *)

type t = {
    url: string;
    (* Unique identifier of the deployment *)
    id: int32;
    node_id: string;
    sha: string;
    (* The ref to deploy. This can be a branch, tag, or sha. *)
    ref: string;
    (* Parameter to specify a task to execute *)
    task: string;
    payload: Yojson.Safe.t;
    original_environment: string option [@default None];
    (* Name for the target deployment environment. *)
    environment: string;
    description: string option;
    creator: Simple_user.t option;
    created_at: string;
    updated_at: string;
    statuses_url: string;
    repository_url: string;
    (* Specifies if the given environment is will no longer exist at some point in the future. Default: false. *)
    transient_environment: bool option [@default None];
    (* Specifies if the given environment is one that end-users directly interact with. Default: false. *)
    production_environment: bool option [@default None];
    performed_via_github_app: Integration.t option [@default None];
} [@@deriving yojson { strict = false }, show ];;

(** A request for a specific ref(branch,sha,tag) to be deployed *)
let create (url : string) (id : int32) (node_id : string) (sha : string) (ref : string) (task : string) (payload : Yojson.Safe.t) (environment : string) (description : string option) (creator : Simple_user.t option) (created_at : string) (updated_at : string) (statuses_url : string) (repository_url : string) : t = {
    url = url;
    id = id;
    node_id = node_id;
    sha = sha;
    ref = ref;
    task = task;
    payload = payload;
    original_environment = None;
    environment = environment;
    description = description;
    creator = creator;
    created_at = created_at;
    updated_at = updated_at;
    statuses_url = statuses_url;
    repository_url = repository_url;
    transient_environment = None;
    production_environment = None;
    performed_via_github_app = None;
}

