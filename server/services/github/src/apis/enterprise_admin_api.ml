(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 *)

let enterprise_admin_add_authorized_ssh_key ~inline_object_152_t () =
    let open Lwt in
    let uri = Request.build_uri "/setup/api/settings/authorized-keys" in
    let headers = Request.default_headers in
    let body = Request.write_as_json_body Inline_object_152.to_yojson inline_object_152_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as_list_of (JsonSupport.unwrap Ssh_key.of_yojson) resp body

let enterprise_admin_add_org_access_to_self_hosted_runner_group_in_enterprise ~enterprise ~runner_group_id ~org_id =
    let open Lwt in
    let uri = Request.build_uri "/enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/organizations/{org_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "enterprise" (fun x -> x) enterprise in
    let uri = Request.replace_path_param uri "runner_group_id" Int32.to_string runner_group_id in
    let uri = Request.replace_path_param uri "org_id" Int32.to_string org_id in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let enterprise_admin_add_self_hosted_runner_to_group_for_enterprise ~enterprise ~runner_group_id ~runner_id =
    let open Lwt in
    let uri = Request.build_uri "/enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/runners/{runner_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "enterprise" (fun x -> x) enterprise in
    let uri = Request.replace_path_param uri "runner_group_id" Int32.to_string runner_group_id in
    let uri = Request.replace_path_param uri "runner_id" Int32.to_string runner_id in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let enterprise_admin_create_enterprise_server_license ~inline_object_154_t () =
    let open Lwt in
    let uri = Request.build_uri "/setup/api/start" in
    let headers = Request.default_headers in
    let body = Request.write_as_json_body Inline_object_154.to_yojson inline_object_154_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.handle_unit_response resp

let enterprise_admin_create_global_webhook ~accept ~inline_object_t () =
    let open Lwt in
    let uri = Request.build_uri "/admin/hooks" in
    let headers = Request.default_headers in
    let headers = Request.add_header headers "accept" (fun x -> x) accept in
    let body = Request.write_as_json_body Inline_object.to_yojson inline_object_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Global_hook.of_yojson) resp body

let enterprise_admin_create_impersonation_o_auth_token ~username ~inline_object_12_t () =
    let open Lwt in
    let uri = Request.build_uri "/admin/users/{username}/authorizations" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "username" (fun x -> x) username in
    let body = Request.write_as_json_body Inline_object_12.to_yojson inline_object_12_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Authorization.of_yojson) resp body

let enterprise_admin_create_org ~inline_object_4_t () =
    let open Lwt in
    let uri = Request.build_uri "/admin/organizations" in
    let headers = Request.default_headers in
    let body = Request.write_as_json_body Inline_object_4.to_yojson inline_object_4_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Organization_simple.of_yojson) resp body

let enterprise_admin_create_pre_receive_environment ~inline_object_6_t () =
    let open Lwt in
    let uri = Request.build_uri "/admin/pre-receive-environments" in
    let headers = Request.default_headers in
    let body = Request.write_as_json_body Inline_object_6.to_yojson inline_object_6_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Pre_receive_environment.of_yojson) resp body

let enterprise_admin_create_pre_receive_hook ~inline_object_8_t () =
    let open Lwt in
    let uri = Request.build_uri "/admin/pre-receive-hooks" in
    let headers = Request.default_headers in
    let body = Request.write_as_json_body Inline_object_8.to_yojson inline_object_8_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Pre_receive_hook.of_yojson) resp body

let enterprise_admin_create_registration_token_for_enterprise ~enterprise =
    let open Lwt in
    let uri = Request.build_uri "/enterprises/{enterprise}/actions/runners/registration-token" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "enterprise" (fun x -> x) enterprise in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Authentication_token.of_yojson) resp body

let enterprise_admin_create_remove_token_for_enterprise ~enterprise =
    let open Lwt in
    let uri = Request.build_uri "/enterprises/{enterprise}/actions/runners/remove-token" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "enterprise" (fun x -> x) enterprise in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Authentication_token.of_yojson) resp body

let enterprise_admin_create_self_hosted_runner_group_for_enterprise ~enterprise ~inline_object_23_t () =
    let open Lwt in
    let uri = Request.build_uri "/enterprises/{enterprise}/actions/runner-groups" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "enterprise" (fun x -> x) enterprise in
    let body = Request.write_as_json_body Inline_object_23.to_yojson inline_object_23_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Runner_groups_enterprise.of_yojson) resp body

let enterprise_admin_create_user ~inline_object_10_t () =
    let open Lwt in
    let uri = Request.build_uri "/admin/users" in
    let headers = Request.default_headers in
    let body = Request.write_as_json_body Inline_object_10.to_yojson inline_object_10_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Simple_user.of_yojson) resp body

let enterprise_admin_delete_global_webhook ~accept ~hook_id =
    let open Lwt in
    let uri = Request.build_uri "/admin/hooks/{hook_id}" in
    let headers = Request.default_headers in
    let headers = Request.add_header headers "accept" (fun x -> x) accept in
    let uri = Request.replace_path_param uri "hook_id" Int32.to_string hook_id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let enterprise_admin_delete_impersonation_o_auth_token ~username =
    let open Lwt in
    let uri = Request.build_uri "/admin/users/{username}/authorizations" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "username" (fun x -> x) username in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let enterprise_admin_delete_personal_access_token ~token_id =
    let open Lwt in
    let uri = Request.build_uri "/admin/tokens/{token_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "token_id" Int32.to_string token_id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let enterprise_admin_delete_pre_receive_environment ~pre_receive_environment_id =
    let open Lwt in
    let uri = Request.build_uri "/admin/pre-receive-environments/{pre_receive_environment_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "pre_receive_environment_id" Int32.to_string pre_receive_environment_id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let enterprise_admin_delete_pre_receive_hook ~pre_receive_hook_id =
    let open Lwt in
    let uri = Request.build_uri "/admin/pre-receive-hooks/{pre_receive_hook_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "pre_receive_hook_id" Int32.to_string pre_receive_hook_id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let enterprise_admin_delete_public_key ~key_ids =
    let open Lwt in
    let uri = Request.build_uri "/admin/keys/{key_ids}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "key_ids" (fun x -> x) key_ids in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let enterprise_admin_delete_self_hosted_runner_from_enterprise ~enterprise ~runner_id =
    let open Lwt in
    let uri = Request.build_uri "/enterprises/{enterprise}/actions/runners/{runner_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "enterprise" (fun x -> x) enterprise in
    let uri = Request.replace_path_param uri "runner_id" Int32.to_string runner_id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let enterprise_admin_delete_self_hosted_runner_group_from_enterprise ~enterprise ~runner_group_id =
    let open Lwt in
    let uri = Request.build_uri "/enterprises/{enterprise}/actions/runner-groups/{runner_group_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "enterprise" (fun x -> x) enterprise in
    let uri = Request.replace_path_param uri "runner_group_id" Int32.to_string runner_group_id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let enterprise_admin_delete_user ~username =
    let open Lwt in
    let uri = Request.build_uri "/admin/users/{username}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "username" (fun x -> x) username in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let enterprise_admin_demote_site_administrator ~username =
    let open Lwt in
    let uri = Request.build_uri "/users/{username}/site_admin" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "username" (fun x -> x) username in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let enterprise_admin_enable_or_disable_maintenance_mode ~inline_object_150_t () =
    let open Lwt in
    let uri = Request.build_uri "/setup/api/maintenance" in
    let headers = Request.default_headers in
    let body = Request.write_as_json_body Inline_object_150.to_yojson inline_object_150_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Maintenance_status.of_yojson) resp body

let enterprise_admin_get_all_authorized_ssh_keys () =
    let open Lwt in
    let uri = Request.build_uri "/setup/api/settings/authorized-keys" in
    let headers = Request.default_headers in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as_list_of (JsonSupport.unwrap Ssh_key.of_yojson) resp body

let enterprise_admin_get_configuration_status () =
    let open Lwt in
    let uri = Request.build_uri "/setup/api/configcheck" in
    let headers = Request.default_headers in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Configuration_status.of_yojson) resp body

let enterprise_admin_get_download_status_for_pre_receive_environment ~pre_receive_environment_id =
    let open Lwt in
    let uri = Request.build_uri "/admin/pre-receive-environments/{pre_receive_environment_id}/downloads/latest" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "pre_receive_environment_id" Int32.to_string pre_receive_environment_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Pre_receive_environment_download_status.of_yojson) resp body

let enterprise_admin_get_global_webhook ~accept ~hook_id =
    let open Lwt in
    let uri = Request.build_uri "/admin/hooks/{hook_id}" in
    let headers = Request.default_headers in
    let headers = Request.add_header headers "accept" (fun x -> x) accept in
    let uri = Request.replace_path_param uri "hook_id" Int32.to_string hook_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Global_hook.of_yojson) resp body

let enterprise_admin_get_license_information () =
    let open Lwt in
    let uri = Request.build_uri "/enterprise/settings/license" in
    let headers = Request.default_headers in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap License_info.of_yojson) resp body

let enterprise_admin_get_maintenance_status () =
    let open Lwt in
    let uri = Request.build_uri "/setup/api/maintenance" in
    let headers = Request.default_headers in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Maintenance_status.of_yojson) resp body

let enterprise_admin_get_pre_receive_environment ~pre_receive_environment_id =
    let open Lwt in
    let uri = Request.build_uri "/admin/pre-receive-environments/{pre_receive_environment_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "pre_receive_environment_id" Int32.to_string pre_receive_environment_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Pre_receive_environment.of_yojson) resp body

let enterprise_admin_get_pre_receive_hook ~pre_receive_hook_id =
    let open Lwt in
    let uri = Request.build_uri "/admin/pre-receive-hooks/{pre_receive_hook_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "pre_receive_hook_id" Int32.to_string pre_receive_hook_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Pre_receive_hook.of_yojson) resp body

let enterprise_admin_get_pre_receive_hook_for_org ~org ~pre_receive_hook_id =
    let open Lwt in
    let uri = Request.build_uri "/orgs/{org}/pre-receive-hooks/{pre_receive_hook_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "org" (fun x -> x) org in
    let uri = Request.replace_path_param uri "pre_receive_hook_id" Int32.to_string pre_receive_hook_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Org_pre_receive_hook.of_yojson) resp body

let enterprise_admin_get_pre_receive_hook_for_repo ~owner ~repo ~pre_receive_hook_id =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/pre-receive-hooks/{pre_receive_hook_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "pre_receive_hook_id" Int32.to_string pre_receive_hook_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Repository_pre_receive_hook.of_yojson) resp body

let enterprise_admin_get_self_hosted_runner_for_enterprise ~enterprise ~runner_id =
    let open Lwt in
    let uri = Request.build_uri "/enterprises/{enterprise}/actions/runners/{runner_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "enterprise" (fun x -> x) enterprise in
    let uri = Request.replace_path_param uri "runner_id" Int32.to_string runner_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Runner_no_labels.of_yojson) resp body

let enterprise_admin_get_self_hosted_runner_group_for_enterprise ~enterprise ~runner_group_id =
    let open Lwt in
    let uri = Request.build_uri "/enterprises/{enterprise}/actions/runner-groups/{runner_group_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "enterprise" (fun x -> x) enterprise in
    let uri = Request.replace_path_param uri "runner_group_id" Int32.to_string runner_group_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Runner_groups_enterprise.of_yojson) resp body

let enterprise_admin_get_settings () =
    let open Lwt in
    let uri = Request.build_uri "/setup/api/settings" in
    let headers = Request.default_headers in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Enterprise_settings.of_yojson) resp body

let enterprise_admin_get_type_stats ~_type =
    let open Lwt in
    let uri = Request.build_uri "/enterprise/stats/{type}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "type" (fun x -> x) _type in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Enterprise_overview.of_yojson) resp body

let enterprise_admin_list_global_webhooks ~accept ?(per_page = 30l) ?(page = 1l) () =
    let open Lwt in
    let uri = Request.build_uri "/admin/hooks" in
    let headers = Request.default_headers in
    let headers = Request.add_header headers "accept" (fun x -> x) accept in
    let uri = Request.add_query_param uri "per_page" Int32.to_string per_page in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as_list_of (JsonSupport.unwrap Global_hook.of_yojson) resp body

let enterprise_admin_list_org_access_to_self_hosted_runner_group_in_enterprise ~enterprise ~runner_group_id ?(per_page = 30l) ?(page = 1l) () =
    let open Lwt in
    let uri = Request.build_uri "/enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/organizations" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "enterprise" (fun x -> x) enterprise in
    let uri = Request.replace_path_param uri "runner_group_id" Int32.to_string runner_group_id in
    let uri = Request.add_query_param uri "per_page" Int32.to_string per_page in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200_2.of_yojson) resp body

let enterprise_admin_list_personal_access_tokens ?(per_page = 30l) ?(page = 1l) () =
    let open Lwt in
    let uri = Request.build_uri "/admin/tokens" in
    let headers = Request.default_headers in
    let uri = Request.add_query_param uri "per_page" Int32.to_string per_page in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as_list_of (JsonSupport.unwrap Authorization.of_yojson) resp body

let enterprise_admin_list_pre_receive_environments ?(per_page = 30l) ?(page = 1l) () =
    let open Lwt in
    let uri = Request.build_uri "/admin/pre-receive-environments" in
    let headers = Request.default_headers in
    let uri = Request.add_query_param uri "per_page" Int32.to_string per_page in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as_list_of (JsonSupport.unwrap Pre_receive_environment.of_yojson) resp body

let enterprise_admin_list_pre_receive_hooks ?(per_page = 30l) ?(page = 1l) () =
    let open Lwt in
    let uri = Request.build_uri "/admin/pre-receive-hooks" in
    let headers = Request.default_headers in
    let uri = Request.add_query_param uri "per_page" Int32.to_string per_page in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as_list_of (JsonSupport.unwrap Pre_receive_hook.of_yojson) resp body

let enterprise_admin_list_pre_receive_hooks_for_org ~org ?(per_page = 30l) ?(page = 1l) () =
    let open Lwt in
    let uri = Request.build_uri "/orgs/{org}/pre-receive-hooks" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "org" (fun x -> x) org in
    let uri = Request.add_query_param uri "per_page" Int32.to_string per_page in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as_list_of (JsonSupport.unwrap Org_pre_receive_hook.of_yojson) resp body

let enterprise_admin_list_pre_receive_hooks_for_repo ~owner ~repo ?(per_page = 30l) ?(page = 1l) () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/pre-receive-hooks" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.add_query_param uri "per_page" Int32.to_string per_page in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as_list_of (JsonSupport.unwrap Repository_pre_receive_hook.of_yojson) resp body

let enterprise_admin_list_public_keys ?(per_page = 30l) ?(page = 1l) () =
    let open Lwt in
    let uri = Request.build_uri "/admin/keys" in
    let headers = Request.default_headers in
    let uri = Request.add_query_param uri "per_page" Int32.to_string per_page in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as_list_of (JsonSupport.unwrap Enterprise_public_key.of_yojson) resp body

let enterprise_admin_list_runner_applications_for_enterprise ~enterprise =
    let open Lwt in
    let uri = Request.build_uri "/enterprises/{enterprise}/actions/runners/downloads" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "enterprise" (fun x -> x) enterprise in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as_list_of (JsonSupport.unwrap Runner_application.of_yojson) resp body

let enterprise_admin_list_self_hosted_runner_groups_for_enterprise ~enterprise ?(per_page = 30l) ?(page = 1l) () =
    let open Lwt in
    let uri = Request.build_uri "/enterprises/{enterprise}/actions/runner-groups" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "enterprise" (fun x -> x) enterprise in
    let uri = Request.add_query_param uri "per_page" Int32.to_string per_page in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200_1.of_yojson) resp body

let enterprise_admin_list_self_hosted_runners_for_enterprise ~enterprise ?(per_page = 30l) ?(page = 1l) () =
    let open Lwt in
    let uri = Request.build_uri "/enterprises/{enterprise}/actions/runners" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "enterprise" (fun x -> x) enterprise in
    let uri = Request.add_query_param uri "per_page" Int32.to_string per_page in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200_3.of_yojson) resp body

let enterprise_admin_list_self_hosted_runners_in_group_for_enterprise ~enterprise ~runner_group_id ?(per_page = 30l) ?(page = 1l) () =
    let open Lwt in
    let uri = Request.build_uri "/enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/runners" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "enterprise" (fun x -> x) enterprise in
    let uri = Request.replace_path_param uri "runner_group_id" Int32.to_string runner_group_id in
    let uri = Request.add_query_param uri "per_page" Int32.to_string per_page in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200_3.of_yojson) resp body

let enterprise_admin_ping_global_webhook ~accept ~hook_id =
    let open Lwt in
    let uri = Request.build_uri "/admin/hooks/{hook_id}/pings" in
    let headers = Request.default_headers in
    let headers = Request.add_header headers "accept" (fun x -> x) accept in
    let uri = Request.replace_path_param uri "hook_id" Int32.to_string hook_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let enterprise_admin_promote_user_to_be_site_administrator ~username =
    let open Lwt in
    let uri = Request.build_uri "/users/{username}/site_admin" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "username" (fun x -> x) username in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let enterprise_admin_remove_authorized_ssh_key ~inline_object_153_t () =
    let open Lwt in
    let uri = Request.build_uri "/setup/api/settings/authorized-keys" in
    let headers = Request.default_headers in
    let body = Request.write_as_json_body Inline_object_153.to_yojson inline_object_153_t in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as_list_of (JsonSupport.unwrap Ssh_key.of_yojson) resp body

let enterprise_admin_remove_org_access_to_self_hosted_runner_group_in_enterprise ~enterprise ~runner_group_id ~org_id =
    let open Lwt in
    let uri = Request.build_uri "/enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/organizations/{org_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "enterprise" (fun x -> x) enterprise in
    let uri = Request.replace_path_param uri "runner_group_id" Int32.to_string runner_group_id in
    let uri = Request.replace_path_param uri "org_id" Int32.to_string org_id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let enterprise_admin_remove_pre_receive_hook_enforcement_for_org ~org ~pre_receive_hook_id =
    let open Lwt in
    let uri = Request.build_uri "/orgs/{org}/pre-receive-hooks/{pre_receive_hook_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "org" (fun x -> x) org in
    let uri = Request.replace_path_param uri "pre_receive_hook_id" Int32.to_string pre_receive_hook_id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Org_pre_receive_hook.of_yojson) resp body

let enterprise_admin_remove_pre_receive_hook_enforcement_for_repo ~owner ~repo ~pre_receive_hook_id =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/pre-receive-hooks/{pre_receive_hook_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "pre_receive_hook_id" Int32.to_string pre_receive_hook_id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Repository_pre_receive_hook.of_yojson) resp body

let enterprise_admin_remove_self_hosted_runner_from_group_for_enterprise ~enterprise ~runner_group_id ~runner_id =
    let open Lwt in
    let uri = Request.build_uri "/enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/runners/{runner_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "enterprise" (fun x -> x) enterprise in
    let uri = Request.replace_path_param uri "runner_group_id" Int32.to_string runner_group_id in
    let uri = Request.replace_path_param uri "runner_id" Int32.to_string runner_id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let enterprise_admin_set_org_access_to_self_hosted_runner_group_in_enterprise ~enterprise ~runner_group_id ~inline_object_25_t () =
    let open Lwt in
    let uri = Request.build_uri "/enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/organizations" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "enterprise" (fun x -> x) enterprise in
    let uri = Request.replace_path_param uri "runner_group_id" Int32.to_string runner_group_id in
    let body = Request.write_as_json_body Inline_object_25.to_yojson inline_object_25_t in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers ~body >>= fun (resp, body) ->
    Request.handle_unit_response resp

let enterprise_admin_set_self_hosted_runners_in_group_for_enterprise ~enterprise ~runner_group_id ~inline_object_26_t () =
    let open Lwt in
    let uri = Request.build_uri "/enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/runners" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "enterprise" (fun x -> x) enterprise in
    let uri = Request.replace_path_param uri "runner_group_id" Int32.to_string runner_group_id in
    let body = Request.write_as_json_body Inline_object_26.to_yojson inline_object_26_t in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers ~body >>= fun (resp, body) ->
    Request.handle_unit_response resp

let enterprise_admin_set_settings ~inline_object_151_t () =
    let open Lwt in
    let uri = Request.build_uri "/setup/api/settings" in
    let headers = Request.default_headers in
    let body = Request.write_as_json_body Inline_object_151.to_yojson inline_object_151_t in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers ~body >>= fun (resp, body) ->
    Request.handle_unit_response resp

let enterprise_admin_start_configuration_process () =
    let open Lwt in
    let uri = Request.build_uri "/setup/api/configure" in
    let headers = Request.default_headers in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let enterprise_admin_start_pre_receive_environment_download ~pre_receive_environment_id =
    let open Lwt in
    let uri = Request.build_uri "/admin/pre-receive-environments/{pre_receive_environment_id}/downloads" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "pre_receive_environment_id" Int32.to_string pre_receive_environment_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Pre_receive_environment_download_status.of_yojson) resp body

let enterprise_admin_suspend_user ~username ~inline_object_172_t () =
    let open Lwt in
    let uri = Request.build_uri "/users/{username}/suspended" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "username" (fun x -> x) username in
    let body = Request.write_as_json_body Inline_object_172.to_yojson inline_object_172_t in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers ~body >>= fun (resp, body) ->
    Request.handle_unit_response resp

let enterprise_admin_sync_ldap_mapping_for_team ~team_id =
    let open Lwt in
    let uri = Request.build_uri "/admin/ldap/teams/{team_id}/sync" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "team_id" Int32.to_string team_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_201.of_yojson) resp body

let enterprise_admin_sync_ldap_mapping_for_user ~username =
    let open Lwt in
    let uri = Request.build_uri "/admin/ldap/users/{username}/sync" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "username" (fun x -> x) username in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_201.of_yojson) resp body

let enterprise_admin_unsuspend_user ~username ~inline_object_173_t () =
    let open Lwt in
    let uri = Request.build_uri "/users/{username}/suspended" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "username" (fun x -> x) username in
    let body = Request.write_as_json_body Inline_object_173.to_yojson inline_object_173_t in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers ~body >>= fun (resp, body) ->
    Request.handle_unit_response resp

let enterprise_admin_update_global_webhook ~accept ~hook_id ~inline_object_1_t () =
    let open Lwt in
    let uri = Request.build_uri "/admin/hooks/{hook_id}" in
    let headers = Request.default_headers in
    let headers = Request.add_header headers "accept" (fun x -> x) accept in
    let uri = Request.replace_path_param uri "hook_id" Int32.to_string hook_id in
    let body = Request.write_as_json_body Inline_object_1.to_yojson inline_object_1_t in
    Cohttp_lwt_unix.Client.call `PATCH uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Global_hook_2.of_yojson) resp body

let enterprise_admin_update_ldap_mapping_for_team ~team_id ~inline_object_2_t () =
    let open Lwt in
    let uri = Request.build_uri "/admin/ldap/teams/{team_id}/mapping" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "team_id" Int32.to_string team_id in
    let body = Request.write_as_json_body Inline_object_2.to_yojson inline_object_2_t in
    Cohttp_lwt_unix.Client.call `PATCH uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Ldap_mapping_team.of_yojson) resp body

let enterprise_admin_update_ldap_mapping_for_user ~username ~inline_object_3_t () =
    let open Lwt in
    let uri = Request.build_uri "/admin/ldap/users/{username}/mapping" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "username" (fun x -> x) username in
    let body = Request.write_as_json_body Inline_object_3.to_yojson inline_object_3_t in
    Cohttp_lwt_unix.Client.call `PATCH uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Ldap_mapping_user.of_yojson) resp body

let enterprise_admin_update_org_name ~org ~inline_object_5_t () =
    let open Lwt in
    let uri = Request.build_uri "/admin/organizations/{org}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "org" (fun x -> x) org in
    let body = Request.write_as_json_body Inline_object_5.to_yojson inline_object_5_t in
    Cohttp_lwt_unix.Client.call `PATCH uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_202.of_yojson) resp body

let enterprise_admin_update_pre_receive_environment ~pre_receive_environment_id ~inline_object_7_t () =
    let open Lwt in
    let uri = Request.build_uri "/admin/pre-receive-environments/{pre_receive_environment_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "pre_receive_environment_id" Int32.to_string pre_receive_environment_id in
    let body = Request.write_as_json_body Inline_object_7.to_yojson inline_object_7_t in
    Cohttp_lwt_unix.Client.call `PATCH uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Pre_receive_environment.of_yojson) resp body

let enterprise_admin_update_pre_receive_hook ~pre_receive_hook_id ~inline_object_9_t () =
    let open Lwt in
    let uri = Request.build_uri "/admin/pre-receive-hooks/{pre_receive_hook_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "pre_receive_hook_id" Int32.to_string pre_receive_hook_id in
    let body = Request.write_as_json_body Inline_object_9.to_yojson inline_object_9_t in
    Cohttp_lwt_unix.Client.call `PATCH uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Pre_receive_hook.of_yojson) resp body

let enterprise_admin_update_pre_receive_hook_enforcement_for_org ~org ~pre_receive_hook_id ~inline_object_43_t () =
    let open Lwt in
    let uri = Request.build_uri "/orgs/{org}/pre-receive-hooks/{pre_receive_hook_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "org" (fun x -> x) org in
    let uri = Request.replace_path_param uri "pre_receive_hook_id" Int32.to_string pre_receive_hook_id in
    let body = Request.write_as_json_body Inline_object_43.to_yojson inline_object_43_t in
    Cohttp_lwt_unix.Client.call `PATCH uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Org_pre_receive_hook.of_yojson) resp body

let enterprise_admin_update_pre_receive_hook_enforcement_for_repo ~owner ~repo ~pre_receive_hook_id ~inline_object_126_t () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/pre-receive-hooks/{pre_receive_hook_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "pre_receive_hook_id" Int32.to_string pre_receive_hook_id in
    let body = Request.write_as_json_body Inline_object_126.to_yojson inline_object_126_t in
    Cohttp_lwt_unix.Client.call `PATCH uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Repository_pre_receive_hook.of_yojson) resp body

let enterprise_admin_update_self_hosted_runner_group_for_enterprise ~enterprise ~runner_group_id ~inline_object_24_t () =
    let open Lwt in
    let uri = Request.build_uri "/enterprises/{enterprise}/actions/runner-groups/{runner_group_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "enterprise" (fun x -> x) enterprise in
    let uri = Request.replace_path_param uri "runner_group_id" Int32.to_string runner_group_id in
    let body = Request.write_as_json_body Inline_object_24.to_yojson inline_object_24_t in
    Cohttp_lwt_unix.Client.call `PATCH uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Runner_groups_enterprise.of_yojson) resp body

let enterprise_admin_update_username_for_user ~username ~inline_object_11_t () =
    let open Lwt in
    let uri = Request.build_uri "/admin/users/{username}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "username" (fun x -> x) username in
    let body = Request.write_as_json_body Inline_object_11.to_yojson inline_object_11_t in
    Cohttp_lwt_unix.Client.call `PATCH uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_202.of_yojson) resp body

let enterprise_admin_upgrade_license ~inline_object_155_t () =
    let open Lwt in
    let uri = Request.build_uri "/setup/api/upgrade" in
    let headers = Request.default_headers in
    let body = Request.write_as_json_body Inline_object_155.to_yojson inline_object_155_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.handle_unit_response resp

