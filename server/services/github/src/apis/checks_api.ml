(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 *)

let checks_create ~owner ~repo ~inline_object_82_t () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/check-runs" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let body = Request.write_as_json_body Inline_object_82.to_yojson inline_object_82_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Check_run.of_yojson) resp body

let checks_create_suite ~owner ~repo ~inline_object_84_t () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/check-suites" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let body = Request.write_as_json_body Inline_object_84.to_yojson inline_object_84_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Check_suite.of_yojson) resp body

let checks_get ~owner ~repo ~check_run_id =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/check-runs/{check_run_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "check_run_id" Int32.to_string check_run_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Check_run.of_yojson) resp body

let checks_get_suite ~owner ~repo ~check_suite_id =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/check-suites/{check_suite_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "check_suite_id" Int32.to_string check_suite_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Check_suite.of_yojson) resp body

let checks_list_annotations ~owner ~repo ~check_run_id ?(per_page = 30l) ?(page = 1l) () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/check-runs/{check_run_id}/annotations" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "check_run_id" Int32.to_string check_run_id in
    let uri = Request.add_query_param uri "per_page" Int32.to_string per_page in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as_list_of (JsonSupport.unwrap Check_annotation.of_yojson) resp body

let checks_list_for_ref ~owner ~repo ~ref ?check_name ?status ?(filter = `Latest) ?(per_page = 30l) ?(page = 1l) () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/commits/{ref}/check-runs" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "ref" (fun x -> x) ref in
    let uri = Request.maybe_add_query_param uri "check_name" (fun x -> x) check_name in
    let uri = Request.maybe_add_query_param uri "status" Enums.show_job_status status in
    let uri = Request.add_query_param uri "filter" Enums.show_filter filter in
    let uri = Request.add_query_param uri "per_page" Int32.to_string per_page in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200_15.of_yojson) resp body

let checks_list_for_suite ~owner ~repo ~check_suite_id ?check_name ?status ?(filter = `Latest) ?(per_page = 30l) ?(page = 1l) () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "check_suite_id" Int32.to_string check_suite_id in
    let uri = Request.maybe_add_query_param uri "check_name" (fun x -> x) check_name in
    let uri = Request.maybe_add_query_param uri "status" Enums.show_job_status status in
    let uri = Request.add_query_param uri "filter" Enums.show_filter filter in
    let uri = Request.add_query_param uri "per_page" Int32.to_string per_page in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200_15.of_yojson) resp body

let checks_list_suites_for_ref ~owner ~repo ~ref ?app_id ?check_name ?(per_page = 30l) ?(page = 1l) () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/commits/{ref}/check-suites" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "ref" (fun x -> x) ref in
    let uri = Request.maybe_add_query_param uri "app_id" Int32.to_string app_id in
    let uri = Request.maybe_add_query_param uri "check_name" (fun x -> x) check_name in
    let uri = Request.add_query_param uri "per_page" Int32.to_string per_page in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200_16.of_yojson) resp body

let checks_rerequest_suite ~owner ~repo ~check_suite_id =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "check_suite_id" Int32.to_string check_suite_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let checks_set_suites_preferences ~owner ~repo ~inline_object_85_t () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/check-suites/preferences" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let body = Request.write_as_json_body Inline_object_85.to_yojson inline_object_85_t in
    Cohttp_lwt_unix.Client.call `PATCH uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Check_suite_preference.of_yojson) resp body

let checks_update ~owner ~repo ~check_run_id ~inline_object_83_t () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/check-runs/{check_run_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "check_run_id" Int32.to_string check_run_id in
    let body = Request.write_as_json_body Inline_object_83.to_yojson inline_object_83_t in
    Cohttp_lwt_unix.Client.call `PATCH uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Check_run.of_yojson) resp body

