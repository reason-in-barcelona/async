(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 *)

let apps_add_repo_to_installation ~installation_id ~repository_id =
    let open Lwt in
    let uri = Request.build_uri "/user/installations/{installation_id}/repositories/{repository_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "installation_id" Int32.to_string installation_id in
    let uri = Request.replace_path_param uri "repository_id" Int32.to_string repository_id in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let apps_check_authorization ~client_id ~access_token =
    let open Lwt in
    let uri = Request.build_uri "/applications/{client_id}/tokens/{access_token}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "client_id" (fun x -> x) client_id in
    let uri = Request.replace_path_param uri "access_token" (fun x -> x) access_token in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Authorization.of_yojson) resp body

let apps_check_token ~client_id ~inline_object_15_t () =
    let open Lwt in
    let uri = Request.build_uri "/applications/{client_id}/token" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "client_id" (fun x -> x) client_id in
    let body = Request.write_as_json_body Inline_object_15.to_yojson inline_object_15_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Authorization.of_yojson) resp body

let apps_create_content_attachment ~content_reference_id ~inline_object_22_t () =
    let open Lwt in
    let uri = Request.build_uri "/content_references/{content_reference_id}/attachments" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "content_reference_id" Int32.to_string content_reference_id in
    let body = Request.write_as_json_body Inline_object_22.to_yojson inline_object_22_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Content_reference_attachment.of_yojson) resp body

let apps_create_from_manifest ~code =
    let open Lwt in
    let uri = Request.build_uri "/app-manifests/{code}/conversions" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "code" (fun x -> x) code in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Integration.of_yojson) resp body

let apps_create_installation_access_token ~installation_id ~inline_object_13_t () =
    let open Lwt in
    let uri = Request.build_uri "/app/installations/{installation_id}/access_tokens" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "installation_id" Int32.to_string installation_id in
    let body = Request.write_as_json_body Inline_object_13.to_yojson inline_object_13_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Installation_token.of_yojson) resp body

let apps_delete_authorization ~client_id ~inline_object_14_t () =
    let open Lwt in
    let uri = Request.build_uri "/applications/{client_id}/grant" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "client_id" (fun x -> x) client_id in
    let body = Request.write_as_json_body Inline_object_14.to_yojson inline_object_14_t in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers ~body >>= fun (resp, body) ->
    Request.handle_unit_response resp

let apps_delete_installation ~installation_id =
    let open Lwt in
    let uri = Request.build_uri "/app/installations/{installation_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "installation_id" Int32.to_string installation_id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let apps_delete_token ~client_id ~inline_object_16_t () =
    let open Lwt in
    let uri = Request.build_uri "/applications/{client_id}/token" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "client_id" (fun x -> x) client_id in
    let body = Request.write_as_json_body Inline_object_16.to_yojson inline_object_16_t in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers ~body >>= fun (resp, body) ->
    Request.handle_unit_response resp

let apps_get_authenticated () =
    let open Lwt in
    let uri = Request.build_uri "/app" in
    let headers = Request.default_headers in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Integration.of_yojson) resp body

let apps_get_by_slug ~app_slug =
    let open Lwt in
    let uri = Request.build_uri "/apps/{app_slug}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "app_slug" (fun x -> x) app_slug in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Integration.of_yojson) resp body

let apps_get_installation ~installation_id =
    let open Lwt in
    let uri = Request.build_uri "/app/installations/{installation_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "installation_id" Int32.to_string installation_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Installation_ghes_2.of_yojson) resp body

let apps_get_org_installation ~org =
    let open Lwt in
    let uri = Request.build_uri "/orgs/{org}/installation" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "org" (fun x -> x) org in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Installation_ghes_2.of_yojson) resp body

let apps_get_repo_installation ~owner ~repo =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/installation" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Installation_ghes_2.of_yojson) resp body

let apps_get_user_installation ~username =
    let open Lwt in
    let uri = Request.build_uri "/users/{username}/installation" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "username" (fun x -> x) username in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Installation_ghes_2.of_yojson) resp body

let apps_list_installation_repos_for_authenticated_user ~installation_id ?(per_page = 30l) ?(page = 1l) () =
    let open Lwt in
    let uri = Request.build_uri "/user/installations/{installation_id}/repositories" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "installation_id" Int32.to_string installation_id in
    let uri = Request.add_query_param uri "per_page" Int32.to_string per_page in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200_24.of_yojson) resp body

let apps_list_installations ?(per_page = 30l) ?(page = 1l) ?since ?outdated () =
    let open Lwt in
    let uri = Request.build_uri "/app/installations" in
    let headers = Request.default_headers in
    let uri = Request.add_query_param uri "per_page" Int32.to_string per_page in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    let uri = Request.maybe_add_query_param uri "since" (fun x -> x) since in
    let uri = Request.maybe_add_query_param uri "outdated" (fun x -> x) outdated in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as_list_of (JsonSupport.unwrap Installation_ghes_2.of_yojson) resp body

let apps_list_installations_for_authenticated_user ?(per_page = 30l) ?(page = 1l) () =
    let open Lwt in
    let uri = Request.build_uri "/user/installations" in
    let headers = Request.default_headers in
    let uri = Request.add_query_param uri "per_page" Int32.to_string per_page in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200_9.of_yojson) resp body

let apps_list_repos_accessible_to_installation ?(per_page = 30l) ?(page = 1l) () =
    let open Lwt in
    let uri = Request.build_uri "/installation/repositories" in
    let headers = Request.default_headers in
    let uri = Request.add_query_param uri "per_page" Int32.to_string per_page in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_200_4.of_yojson) resp body

let apps_remove_repo_from_installation ~installation_id ~repository_id =
    let open Lwt in
    let uri = Request.build_uri "/user/installations/{installation_id}/repositories/{repository_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "installation_id" Int32.to_string installation_id in
    let uri = Request.replace_path_param uri "repository_id" Int32.to_string repository_id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let apps_reset_authorization ~client_id ~access_token =
    let open Lwt in
    let uri = Request.build_uri "/applications/{client_id}/tokens/{access_token}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "client_id" (fun x -> x) client_id in
    let uri = Request.replace_path_param uri "access_token" (fun x -> x) access_token in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Authorization.of_yojson) resp body

let apps_reset_token ~client_id ~inline_object_17_t () =
    let open Lwt in
    let uri = Request.build_uri "/applications/{client_id}/token" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "client_id" (fun x -> x) client_id in
    let body = Request.write_as_json_body Inline_object_17.to_yojson inline_object_17_t in
    Cohttp_lwt_unix.Client.call `PATCH uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Authorization.of_yojson) resp body

let apps_revoke_authorization_for_application ~client_id ~access_token =
    let open Lwt in
    let uri = Request.build_uri "/applications/{client_id}/tokens/{access_token}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "client_id" (fun x -> x) client_id in
    let uri = Request.replace_path_param uri "access_token" (fun x -> x) access_token in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let apps_revoke_grant_for_application ~client_id ~access_token =
    let open Lwt in
    let uri = Request.build_uri "/applications/{client_id}/grants/{access_token}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "client_id" (fun x -> x) client_id in
    let uri = Request.replace_path_param uri "access_token" (fun x -> x) access_token in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let apps_revoke_installation_access_token () =
    let open Lwt in
    let uri = Request.build_uri "/installation/token" in
    let headers = Request.default_headers in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

