(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 *)

let pulls_check_if_merged ~owner ~repo ~pull_number =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/pulls/{pull_number}/merge" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "pull_number" Int32.to_string pull_number in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let pulls_create ~owner ~repo ~inline_object_128_t () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/pulls" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let body = Request.write_as_json_body Inline_object_128.to_yojson inline_object_128_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Pull_request.of_yojson) resp body

let pulls_create_reply_for_review_comment ~owner ~repo ~pull_number ~comment_id ~inline_object_133_t () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "pull_number" Int32.to_string pull_number in
    let uri = Request.replace_path_param uri "comment_id" Int32.to_string comment_id in
    let body = Request.write_as_json_body Inline_object_133.to_yojson inline_object_133_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Pull_request_review_comment.of_yojson) resp body

let pulls_create_review ~owner ~repo ~pull_number ~inline_object_137_t () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/pulls/{pull_number}/reviews" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "pull_number" Int32.to_string pull_number in
    let body = Request.write_as_json_body Inline_object_137.to_yojson inline_object_137_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Pull_request_review.of_yojson) resp body

let pulls_create_review_comment ~owner ~repo ~pull_number ~inline_object_132_t () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/pulls/{pull_number}/comments" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "pull_number" Int32.to_string pull_number in
    let body = Request.write_as_json_body Inline_object_132.to_yojson inline_object_132_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Pull_request_review_comment.of_yojson) resp body

let pulls_delete_pending_review ~owner ~repo ~pull_number ~review_id =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "pull_number" Int32.to_string pull_number in
    let uri = Request.replace_path_param uri "review_id" Int32.to_string review_id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Pull_request_review.of_yojson) resp body

let pulls_delete_review_comment ~owner ~repo ~comment_id =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/pulls/comments/{comment_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "comment_id" Int32.to_string comment_id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let pulls_dismiss_review ~owner ~repo ~pull_number ~review_id ~inline_object_139_t () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "pull_number" Int32.to_string pull_number in
    let uri = Request.replace_path_param uri "review_id" Int32.to_string review_id in
    let body = Request.write_as_json_body Inline_object_139.to_yojson inline_object_139_t in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Pull_request_review.of_yojson) resp body

let pulls_get ~owner ~repo ~pull_number =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/pulls/{pull_number}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "pull_number" Int32.to_string pull_number in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Pull_request.of_yojson) resp body

let pulls_get_review ~owner ~repo ~pull_number ~review_id =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "pull_number" Int32.to_string pull_number in
    let uri = Request.replace_path_param uri "review_id" Int32.to_string review_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Pull_request_review.of_yojson) resp body

let pulls_get_review_comment ~owner ~repo ~comment_id =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/pulls/comments/{comment_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "comment_id" Int32.to_string comment_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Pull_request_review_comment.of_yojson) resp body

let pulls_list ~owner ~repo ?(state = `Open) ?head ?base ?(sort = `Created) ?direction ?(per_page = 30l) ?(page = 1l) () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/pulls" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.add_query_param uri "state" Enums.show_state_1 state in
    let uri = Request.maybe_add_query_param uri "head" (fun x -> x) head in
    let uri = Request.maybe_add_query_param uri "base" (fun x -> x) base in
    let uri = Request.add_query_param uri "sort" Enums.show_sort_1 sort in
    let uri = Request.maybe_add_query_param uri "direction" Enums.show_direction direction in
    let uri = Request.add_query_param uri "per_page" Int32.to_string per_page in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as_list_of (JsonSupport.unwrap Pull_request_simple.of_yojson) resp body

let pulls_list_comments_for_review ~owner ~repo ~pull_number ~review_id ?(per_page = 30l) ?(page = 1l) () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "pull_number" Int32.to_string pull_number in
    let uri = Request.replace_path_param uri "review_id" Int32.to_string review_id in
    let uri = Request.add_query_param uri "per_page" Int32.to_string per_page in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as_list_of (JsonSupport.unwrap Review_comment.of_yojson) resp body

let pulls_list_commits ~owner ~repo ~pull_number ?(per_page = 30l) ?(page = 1l) () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/pulls/{pull_number}/commits" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "pull_number" Int32.to_string pull_number in
    let uri = Request.add_query_param uri "per_page" Int32.to_string per_page in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as_list_of (JsonSupport.unwrap Commit.of_yojson) resp body

let pulls_list_files ~owner ~repo ~pull_number ?(per_page = 30l) ?(page = 1l) () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/pulls/{pull_number}/files" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "pull_number" Int32.to_string pull_number in
    let uri = Request.add_query_param uri "per_page" Int32.to_string per_page in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as_list_of (JsonSupport.unwrap Diff_entry.of_yojson) resp body

let pulls_list_requested_reviewers ~owner ~repo ~pull_number ?(per_page = 30l) ?(page = 1l) () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "pull_number" Int32.to_string pull_number in
    let uri = Request.add_query_param uri "per_page" Int32.to_string per_page in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Pull_request_review_request.of_yojson) resp body

let pulls_list_review_comments ~owner ~repo ~pull_number ?(sort = `Created) ?direction ?since ?(per_page = 30l) ?(page = 1l) () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/pulls/{pull_number}/comments" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "pull_number" Int32.to_string pull_number in
    let uri = Request.add_query_param uri "sort" Enums.show_sort_7 sort in
    let uri = Request.maybe_add_query_param uri "direction" Enums.show_direction direction in
    let uri = Request.maybe_add_query_param uri "since" (fun x -> x) since in
    let uri = Request.add_query_param uri "per_page" Int32.to_string per_page in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as_list_of (JsonSupport.unwrap Pull_request_review_comment.of_yojson) resp body

let pulls_list_review_comments_for_repo ~owner ~repo ?(sort = `Created) ?direction ?since ?(per_page = 30l) ?(page = 1l) () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/pulls/comments" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.add_query_param uri "sort" Enums.show_sort_7 sort in
    let uri = Request.maybe_add_query_param uri "direction" Enums.show_direction direction in
    let uri = Request.maybe_add_query_param uri "since" (fun x -> x) since in
    let uri = Request.add_query_param uri "per_page" Int32.to_string per_page in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as_list_of (JsonSupport.unwrap Pull_request_review_comment.of_yojson) resp body

let pulls_list_reviews ~owner ~repo ~pull_number ?(per_page = 30l) ?(page = 1l) () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/pulls/{pull_number}/reviews" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "pull_number" Int32.to_string pull_number in
    let uri = Request.add_query_param uri "per_page" Int32.to_string per_page in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as_list_of (JsonSupport.unwrap Pull_request_review.of_yojson) resp body

let pulls_merge ~owner ~repo ~pull_number ~inline_object_134_t () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/pulls/{pull_number}/merge" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "pull_number" Int32.to_string pull_number in
    let body = Request.write_as_json_body Inline_object_134.to_yojson inline_object_134_t in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Pull_request_merge_result.of_yojson) resp body

let pulls_remove_requested_reviewers ~owner ~repo ~pull_number ~inline_object_136_t () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "pull_number" Int32.to_string pull_number in
    let body = Request.write_as_json_body Inline_object_136.to_yojson inline_object_136_t in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers ~body >>= fun (resp, body) ->
    Request.handle_unit_response resp

let pulls_request_reviewers ~owner ~repo ~pull_number ~inline_object_135_t () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "pull_number" Int32.to_string pull_number in
    let body = Request.write_as_json_body Inline_object_135.to_yojson inline_object_135_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Pull_request_simple.of_yojson) resp body

let pulls_submit_review ~owner ~repo ~pull_number ~review_id ~inline_object_140_t () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "pull_number" Int32.to_string pull_number in
    let uri = Request.replace_path_param uri "review_id" Int32.to_string review_id in
    let body = Request.write_as_json_body Inline_object_140.to_yojson inline_object_140_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Pull_request_review.of_yojson) resp body

let pulls_update ~owner ~repo ~pull_number ~inline_object_131_t () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/pulls/{pull_number}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "pull_number" Int32.to_string pull_number in
    let body = Request.write_as_json_body Inline_object_131.to_yojson inline_object_131_t in
    Cohttp_lwt_unix.Client.call `PATCH uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Pull_request.of_yojson) resp body

let pulls_update_branch ~owner ~repo ~pull_number ~inline_object_141_t () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/pulls/{pull_number}/update-branch" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "pull_number" Int32.to_string pull_number in
    let body = Request.write_as_json_body Inline_object_141.to_yojson inline_object_141_t in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inline_response_202.of_yojson) resp body

let pulls_update_review ~owner ~repo ~pull_number ~review_id ~inline_object_138_t () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "pull_number" Int32.to_string pull_number in
    let uri = Request.replace_path_param uri "review_id" Int32.to_string review_id in
    let body = Request.write_as_json_body Inline_object_138.to_yojson inline_object_138_t in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Pull_request_review.of_yojson) resp body

let pulls_update_review_comment ~owner ~repo ~comment_id ~inline_object_129_t () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/pulls/comments/{comment_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "comment_id" Int32.to_string comment_id in
    let body = Request.write_as_json_body Inline_object_129.to_yojson inline_object_129_t in
    Cohttp_lwt_unix.Client.call `PATCH uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Pull_request_review_comment.of_yojson) resp body

