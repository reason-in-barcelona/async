(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 *)

let issues_add_assignees ~owner ~repo ~issue_number ~inline_object_110_t () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/issues/{issue_number}/assignees" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "issue_number" Int32.to_string issue_number in
    let body = Request.write_as_json_body Inline_object_110.to_yojson inline_object_110_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Issue_simple.of_yojson) resp body

let issues_add_labels ~owner ~repo ~issue_number ~inline_object_114_t () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/issues/{issue_number}/labels" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "issue_number" Int32.to_string issue_number in
    let body = Request.write_as_json_body Inline_object_114.to_yojson inline_object_114_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as_list_of (JsonSupport.unwrap Label.of_yojson) resp body

let issues_check_user_can_be_assigned ~owner ~repo ~assignee =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/assignees/{assignee}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "assignee" (fun x -> x) assignee in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let issues_create ~owner ~repo ~inline_object_106_t () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/issues" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let body = Request.write_as_json_body Inline_object_106.to_yojson inline_object_106_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Issue.of_yojson) resp body

let issues_create_comment ~owner ~repo ~issue_number ~inline_object_112_t () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/issues/{issue_number}/comments" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "issue_number" Int32.to_string issue_number in
    let body = Request.write_as_json_body Inline_object_112.to_yojson inline_object_112_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Issue_comment.of_yojson) resp body

let issues_create_label ~owner ~repo ~inline_object_118_t () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/labels" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let body = Request.write_as_json_body Inline_object_118.to_yojson inline_object_118_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Label.of_yojson) resp body

let issues_create_milestone ~owner ~repo ~inline_object_121_t () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/milestones" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let body = Request.write_as_json_body Inline_object_121.to_yojson inline_object_121_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Milestone.of_yojson) resp body

let issues_delete_comment ~owner ~repo ~comment_id =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/issues/comments/{comment_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "comment_id" Int32.to_string comment_id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let issues_delete_label ~owner ~repo ~name =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/labels/{name}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "name" (fun x -> x) name in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let issues_delete_milestone ~owner ~repo ~milestone_number =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/milestones/{milestone_number}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "milestone_number" Int32.to_string milestone_number in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let issues_get ~owner ~repo ~issue_number =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/issues/{issue_number}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "issue_number" Int32.to_string issue_number in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Issue.of_yojson) resp body

let issues_get_comment ~owner ~repo ~comment_id =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/issues/comments/{comment_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "comment_id" Int32.to_string comment_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Issue_comment.of_yojson) resp body

let issues_get_event ~owner ~repo ~event_id =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/issues/events/{event_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "event_id" Int32.to_string event_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Issue_event.of_yojson) resp body

let issues_get_label ~owner ~repo ~name =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/labels/{name}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "name" (fun x -> x) name in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Label.of_yojson) resp body

let issues_get_milestone ~owner ~repo ~milestone_number =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/milestones/{milestone_number}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "milestone_number" Int32.to_string milestone_number in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Milestone.of_yojson) resp body

let issues_list ?(filter = `Assigned) ?(state = `Open) ?labels ?(sort = `Created) ?(direction = `Desc) ?since ?collab ?orgs ?owned ?pulls ?(per_page = 30l) ?(page = 1l) () =
    let open Lwt in
    let uri = Request.build_uri "/issues" in
    let headers = Request.default_headers in
    let uri = Request.add_query_param uri "filter" Enums.show_filter_0 filter in
    let uri = Request.add_query_param uri "state" Enums.show_state_1 state in
    let uri = Request.maybe_add_query_param uri "labels" (fun x -> x) labels in
    let uri = Request.add_query_param uri "sort" Enums.show_sort_6 sort in
    let uri = Request.add_query_param uri "direction" Enums.show_direction direction in
    let uri = Request.maybe_add_query_param uri "since" (fun x -> x) since in
    let uri = Request.maybe_add_query_param uri "collab" string_of_bool collab in
    let uri = Request.maybe_add_query_param uri "orgs" string_of_bool orgs in
    let uri = Request.maybe_add_query_param uri "owned" string_of_bool owned in
    let uri = Request.maybe_add_query_param uri "pulls" string_of_bool pulls in
    let uri = Request.add_query_param uri "per_page" Int32.to_string per_page in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as_list_of (JsonSupport.unwrap Issue.of_yojson) resp body

let issues_list_assignees ~owner ~repo ?(per_page = 30l) ?(page = 1l) () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/assignees" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.add_query_param uri "per_page" Int32.to_string per_page in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as_list_of (JsonSupport.unwrap Simple_user.of_yojson) resp body

let issues_list_comments ~owner ~repo ~issue_number ?since ?(per_page = 30l) ?(page = 1l) () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/issues/{issue_number}/comments" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "issue_number" Int32.to_string issue_number in
    let uri = Request.maybe_add_query_param uri "since" (fun x -> x) since in
    let uri = Request.add_query_param uri "per_page" Int32.to_string per_page in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as_list_of (JsonSupport.unwrap Issue_comment.of_yojson) resp body

let issues_list_comments_for_repo ~owner ~repo ?(sort = `Created) ?direction ?since ?(per_page = 30l) ?(page = 1l) () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/issues/comments" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.add_query_param uri "sort" Enums.show_sort_7 sort in
    let uri = Request.maybe_add_query_param uri "direction" Enums.show_direction direction in
    let uri = Request.maybe_add_query_param uri "since" (fun x -> x) since in
    let uri = Request.add_query_param uri "per_page" Int32.to_string per_page in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as_list_of (JsonSupport.unwrap Issue_comment.of_yojson) resp body

let issues_list_events ~owner ~repo ~issue_number ?(per_page = 30l) ?(page = 1l) () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/issues/{issue_number}/events" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "issue_number" Int32.to_string issue_number in
    let uri = Request.add_query_param uri "per_page" Int32.to_string per_page in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as_list_of (JsonSupport.unwrap Issue_event_for_issue.of_yojson) resp body

let issues_list_events_for_repo ~owner ~repo ?(per_page = 30l) ?(page = 1l) () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/issues/events" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.add_query_param uri "per_page" Int32.to_string per_page in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as_list_of (JsonSupport.unwrap Issue_event.of_yojson) resp body

let issues_list_events_for_timeline ~owner ~repo ~issue_number ?(per_page = 30l) ?(page = 1l) () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/issues/{issue_number}/timeline" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "issue_number" Int32.to_string issue_number in
    let uri = Request.add_query_param uri "per_page" Int32.to_string per_page in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as_list_of (JsonSupport.unwrap Issue_event_for_issue.of_yojson) resp body

let issues_list_for_authenticated_user ?(filter = `Assigned) ?(state = `Open) ?labels ?(sort = `Created) ?(direction = `Desc) ?since ?(per_page = 30l) ?(page = 1l) () =
    let open Lwt in
    let uri = Request.build_uri "/user/issues" in
    let headers = Request.default_headers in
    let uri = Request.add_query_param uri "filter" Enums.show_filter_0 filter in
    let uri = Request.add_query_param uri "state" Enums.show_state_1 state in
    let uri = Request.maybe_add_query_param uri "labels" (fun x -> x) labels in
    let uri = Request.add_query_param uri "sort" Enums.show_sort_6 sort in
    let uri = Request.add_query_param uri "direction" Enums.show_direction direction in
    let uri = Request.maybe_add_query_param uri "since" (fun x -> x) since in
    let uri = Request.add_query_param uri "per_page" Int32.to_string per_page in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as_list_of (JsonSupport.unwrap Issue.of_yojson) resp body

let issues_list_for_org ~org ?(filter = `Assigned) ?(state = `Open) ?labels ?(sort = `Created) ?(direction = `Desc) ?since ?(per_page = 30l) ?(page = 1l) () =
    let open Lwt in
    let uri = Request.build_uri "/orgs/{org}/issues" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "org" (fun x -> x) org in
    let uri = Request.add_query_param uri "filter" Enums.show_filter_0 filter in
    let uri = Request.add_query_param uri "state" Enums.show_state_1 state in
    let uri = Request.maybe_add_query_param uri "labels" (fun x -> x) labels in
    let uri = Request.add_query_param uri "sort" Enums.show_sort_6 sort in
    let uri = Request.add_query_param uri "direction" Enums.show_direction direction in
    let uri = Request.maybe_add_query_param uri "since" (fun x -> x) since in
    let uri = Request.add_query_param uri "per_page" Int32.to_string per_page in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as_list_of (JsonSupport.unwrap Issue.of_yojson) resp body

let issues_list_for_repo ~owner ~repo ?milestone ?(state = `Open) ?assignee ?creator ?mentioned ?labels ?(sort = `Created) ?(direction = `Desc) ?since ?(per_page = 30l) ?(page = 1l) () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/issues" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.maybe_add_query_param uri "milestone" (fun x -> x) milestone in
    let uri = Request.add_query_param uri "state" Enums.show_state_1 state in
    let uri = Request.maybe_add_query_param uri "assignee" (fun x -> x) assignee in
    let uri = Request.maybe_add_query_param uri "creator" (fun x -> x) creator in
    let uri = Request.maybe_add_query_param uri "mentioned" (fun x -> x) mentioned in
    let uri = Request.maybe_add_query_param uri "labels" (fun x -> x) labels in
    let uri = Request.add_query_param uri "sort" Enums.show_sort_6 sort in
    let uri = Request.add_query_param uri "direction" Enums.show_direction direction in
    let uri = Request.maybe_add_query_param uri "since" (fun x -> x) since in
    let uri = Request.add_query_param uri "per_page" Int32.to_string per_page in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as_list_of (JsonSupport.unwrap Issue_simple.of_yojson) resp body

let issues_list_labels_for_milestone ~owner ~repo ~milestone_number ?(per_page = 30l) ?(page = 1l) () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/milestones/{milestone_number}/labels" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "milestone_number" Int32.to_string milestone_number in
    let uri = Request.add_query_param uri "per_page" Int32.to_string per_page in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as_list_of (JsonSupport.unwrap Label.of_yojson) resp body

let issues_list_labels_for_repo ~owner ~repo ?(per_page = 30l) ?(page = 1l) () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/labels" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.add_query_param uri "per_page" Int32.to_string per_page in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as_list_of (JsonSupport.unwrap Label.of_yojson) resp body

let issues_list_labels_on_issue ~owner ~repo ~issue_number ?(per_page = 30l) ?(page = 1l) () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/issues/{issue_number}/labels" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "issue_number" Int32.to_string issue_number in
    let uri = Request.add_query_param uri "per_page" Int32.to_string per_page in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as_list_of (JsonSupport.unwrap Label.of_yojson) resp body

let issues_list_milestones ~owner ~repo ?(state = `Open) ?(sort = `Due_on) ?(direction = `Asc) ?(per_page = 30l) ?(page = 1l) () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/milestones" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.add_query_param uri "state" Enums.show_state_1 state in
    let uri = Request.add_query_param uri "sort" Enums.show_sort sort in
    let uri = Request.add_query_param uri "direction" Enums.show_direction direction in
    let uri = Request.add_query_param uri "per_page" Int32.to_string per_page in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as_list_of (JsonSupport.unwrap Milestone.of_yojson) resp body

let issues_lock ~owner ~repo ~issue_number ~inline_object_115_t () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/issues/{issue_number}/lock" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "issue_number" Int32.to_string issue_number in
    let body = Request.write_as_json_body Inline_object_115.to_yojson inline_object_115_t in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers ~body >>= fun (resp, body) ->
    Request.handle_unit_response resp

let issues_remove_all_labels ~owner ~repo ~issue_number =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/issues/{issue_number}/labels" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "issue_number" Int32.to_string issue_number in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let issues_remove_assignees ~owner ~repo ~issue_number ~inline_object_111_t () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/issues/{issue_number}/assignees" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "issue_number" Int32.to_string issue_number in
    let body = Request.write_as_json_body Inline_object_111.to_yojson inline_object_111_t in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Issue_simple.of_yojson) resp body

let issues_remove_label ~owner ~repo ~issue_number ~name =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/issues/{issue_number}/labels/{name}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "issue_number" Int32.to_string issue_number in
    let uri = Request.replace_path_param uri "name" (fun x -> x) name in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as_list_of (JsonSupport.unwrap Label.of_yojson) resp body

let issues_set_labels ~owner ~repo ~issue_number ~inline_object_113_t () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/issues/{issue_number}/labels" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "issue_number" Int32.to_string issue_number in
    let body = Request.write_as_json_body Inline_object_113.to_yojson inline_object_113_t in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as_list_of (JsonSupport.unwrap Label.of_yojson) resp body

let issues_unlock ~owner ~repo ~issue_number =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/issues/{issue_number}/lock" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "issue_number" Int32.to_string issue_number in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let issues_update ~owner ~repo ~issue_number ~inline_object_109_t () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/issues/{issue_number}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "issue_number" Int32.to_string issue_number in
    let body = Request.write_as_json_body Inline_object_109.to_yojson inline_object_109_t in
    Cohttp_lwt_unix.Client.call `PATCH uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Issue.of_yojson) resp body

let issues_update_comment ~owner ~repo ~comment_id ~inline_object_107_t () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/issues/comments/{comment_id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "comment_id" Int32.to_string comment_id in
    let body = Request.write_as_json_body Inline_object_107.to_yojson inline_object_107_t in
    Cohttp_lwt_unix.Client.call `PATCH uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Issue_comment.of_yojson) resp body

let issues_update_label ~owner ~repo ~name ~inline_object_119_t () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/labels/{name}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "name" (fun x -> x) name in
    let body = Request.write_as_json_body Inline_object_119.to_yojson inline_object_119_t in
    Cohttp_lwt_unix.Client.call `PATCH uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Label.of_yojson) resp body

let issues_update_milestone ~owner ~repo ~milestone_number ~inline_object_122_t () =
    let open Lwt in
    let uri = Request.build_uri "/repos/{owner}/{repo}/milestones/{milestone_number}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "owner" (fun x -> x) owner in
    let uri = Request.replace_path_param uri "repo" (fun x -> x) repo in
    let uri = Request.replace_path_param uri "milestone_number" Int32.to_string milestone_number in
    let body = Request.write_as_json_body Inline_object_122.to_yojson inline_object_122_t in
    Cohttp_lwt_unix.Client.call `PATCH uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Milestone.of_yojson) resp body

